{"question": "What does Basic protocol flow description mean?", "answer": "draftmandatory\n\nThis NIP defines the basic protocol that should be implemented by everybody. New NIPs may add new optional (or mandatory) fields and messages and features to the structures and flows described here."}
{"question": "What does Events and signatures mean?", "answer": "Each user has a keypair. Signatures, public key, and encodings are done according to theSchnorr signatures standard for the curvesecp256k1.\n\nThe only object type that exists is theevent, which has the following format on the wire:\n\nyaml\n{\n\"id\": <32-bytes lowercase hex-encoded sha256 of the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\": <unix timestamp in seconds>,\n\"kind\": <integer between 0 and 65535>,\n\"tags\": [\n[<arbitrary string>...],\n// ...\n],\n\"content\": <arbitrary string>,\n\"sig\": <64-bytes lowercase hex of the signature of the sha256 hash of the serialized event data, which is the same as the \"id\" field>\n}\n\nTo obtain theevent.id, wesha256the serialized event. The serialization is done over the UTF-8 JSON-serialized string (which is described below) of the following structure:\n\n[\n0,\n<pubkey, as a lowercase hex string>,\n<created_at, as a number>,\n<kind, as a number>,\n<tags, as an array of arrays of non-null strings>,\n<content, as a string>\n]\n\nTo prevent implementation differences from creating a different event ID for the same event, the following rules MUST be followed while serializing:\n- UTF-8 should be used for encoding.\n- Whitespace, line breaks or other unnecessary formatting should not be included in the output JSON.\n- The following characters in the content field must be escaped as shown, and all other characters must be included verbatim:\n- A line break (0x0A), use\\n- A double quote (0x22), use\\\"- A backslash (0x5C), use\\\\- A carriage return (0x0D), use\\r- A tab character (0x09), use\\t- A backspace, (0x08), use\\b- A form feed, (0x0C), use\\f"}
{"question": "What does Tags mean?", "answer": "Each tag is an array of one or more strings, with some conventions around them. Take a look at the example below:\n\njsonc\n{\n\"tags\": [\n[\"e\", \"5c83da77af1dec6d7289834998ad7aafbd9e2191396d75ec3cc27f5a77226f36\", \"wss://nostr.example.com\"],\n[\"p\", \"f7234bd4c1394dda46d09f35bd384dd30cc552ad5541990f98844fb06676e9ca\"],\n[\"a\", \"30023:f7234bd4c1394dda46d09f35bd384dd30cc552ad5541990f98844fb06676e9ca:abcd\", \"wss://nostr.example.com\"],\n[\"alt\", \"reply\"],\n// ...\n],\n// ...\n}\n\nThe first element of the tag array is referred to as the tagnameorkeyand the second as the tagvalue. So we can safely say that the event above has anetag set to\"5c83da77af1dec6d7289834998ad7aafbd9e2191396d75ec3cc27f5a77226f36\", analttag set to\"reply\"and so on. All elements after the second do not have a conventional name.\n\nThis NIP defines 3 standard tags that can be used across all event kinds with the same meaning. They are as follows:\n\n- Theetag, used to refer to an event:[\"e\", <32-bytes lowercase hex of the id of another event>, <recommended relay URL, optional>, <32-bytes lowercase hex of the author's pubkey, optional>]\n- Theptag, used to refer to another user:[\"p\", <32-bytes lowercase hex of a pubkey>, <recommended relay URL, optional>]\n- Theatag, used to refer to an addressable or replaceable eventfor an addressable event:[\"a\", \"<kind integer>:<32-bytes lowercase hex of a pubkey>:<d tag value>\", <recommended relay URL, optional>]for a normal replaceable event:[\"a\", \"<kind integer>:<32-bytes lowercase hex of a pubkey>:\", <recommended relay URL, optional>](note: include the trailing colon)\n- for an addressable event:[\"a\", \"<kind integer>:<32-bytes lowercase hex of a pubkey>:<d tag value>\", <recommended relay URL, optional>]\n- for a normal replaceable event:[\"a\", \"<kind integer>:<32-bytes lowercase hex of a pubkey>:\", <recommended relay URL, optional>](note: include the trailing colon)\n\nAs a convention, all single-letter (only english alphabet letters: a-z, A-Z) key tags are expected to be indexed by relays, such that it is possible, for example, to query or subscribe to events that reference the event\"5c83da77af1dec6d7289834998ad7aafbd9e2191396d75ec3cc27f5a77226f36\"by using the{\"#e\": [\"5c83da77af1dec6d7289834998ad7aafbd9e2191396d75ec3cc27f5a77226f36\"]}filter. Only the first value in any given tag is indexed."}
{"question": "What does Kinds mean?", "answer": "Kinds specify how clients should interpret the meaning of each event and the other fields of each event (e.g. an\"r\"tag may have a meaning in an event of kind 1 and an entirely different meaning in an event of kind 10002). Each NIP may define the meaning of a set of kinds that weren't defined elsewhere.NIP-10, for instance, specifies thekind:1text note for social media applications.\n\nThis NIP defines one basic kind:\n\n- 0:user metadata: thecontentis set to a stringified JSON object{name: <nickname or full name>, about: <short bio>, picture: <url of the image>}describing the user who created the event.Extra metadata fieldsmay be set. A relay may delete older events once it gets a new one for the same pubkey.\n\nAnd also a convention for kind ranges that allow for easier experimentation and flexibility of relay implementation:\n\n- for kindnsuch that1000 <= n < 10000 || 4 <= n < 45 || n == 1 || n == 2, events areregular, which means they're all expected to be stored by relays.\n- for kindnsuch that10000 <= n < 20000 || n == 0 || n == 3, events arereplaceable, which means that, for each combination ofpubkeyandkind, only the latest event MUST be stored by relays, older versions MAY be discarded.\n- for kindnsuch that20000 <= n < 30000, events areephemeral, which means they are not expected to be stored by relays.\n- for kindnsuch that30000 <= n < 40000, events areaddressableby theirkind,pubkeyanddtag value -- which means that, for each combination ofkind,pubkeyand thedtag value, only the latest event MUST be stored by relays, older versions MAY be discarded.\n\nIn case of replaceable events with the same timestamp, the event with the lowest id (first in lexical order) should be retained, and the other discarded.\n\nWhen answering toREQmessages for replaceable events such as{\"kinds\":[0],\"authors\":[<hex-key>]}, even if the relay has more than one version stored, it SHOULD return just the latest one.\n\nThese are just conventions and relay implementations may differ."}
{"question": "What does Communication between clients and relays mean?", "answer": "Relays expose a websocket endpoint to which clients can connect. Clients SHOULD open a single websocket connection to each relay and use it for all their subscriptions. Relays MAY limit number of connections from specific IP/client/etc."}
{"question": "What does From client to relay: sending events and creating subscriptions mean?", "answer": "Clients can send 3 types of messages, which must be JSON arrays, according to the following patterns:\n\n- [\"EVENT\", <event JSON as defined above>], used to publish events.\n- [\"REQ\", <subscription_id>, <filters1>, <filters2>, ...], used to request events and subscribe to new updates.\n- [\"CLOSE\", <subscription_id>], used to stop previous subscriptions.\n\n<subscription_id>is an arbitrary, non-empty string of max length 64 chars. It represents a subscription per connection. Relays MUST manage<subscription_id>s independently for each WebSocket connection.<subscription_id>s are not guaranteed to be globally unique.\n\n<filtersX>is a JSON object that determines what events will be sent in that subscription, it can have the following attributes:\n\nyaml\n{\n\"ids\": <a list of event ids>,\n\"authors\": <a list of lowercase pubkeys, the pubkey of an event must be one of these>,\n\"kinds\": <a list of a kind numbers>,\n\"#<single-letter (a-zA-Z)>\": <a list of tag values, for #e — a list of event ids, for #p — a list of pubkeys, etc.>,\n\"since\": <an integer unix timestamp in seconds. Events must have a created_at >= to this to pass>,\n\"until\": <an integer unix timestamp in seconds. Events must have a created_at <= to this to pass>,\n\"limit\": <maximum number of events relays SHOULD return in the initial query>\n}\n\nUpon receiving aREQmessage, the relay SHOULD return events that match the filter. Any new events it receives SHOULD be sent to that same websocket until the connection is closed, aCLOSEevent is received with the same<subscription_id>, or a newREQis sent using the same<subscription_id>(in which case a new subscription is created, replacing the old one).\n\nFilter attributes containing lists (ids,authors,kindsand tag filters like#e) are JSON arrays with one or more values. At least one of the arrays' values must match the relevant field in an event for the condition to be considered a match. For scalar event attributes such asauthorsandkind, the attribute from the event must be contained in the filter list. In the case of tag attributes such as#e, for which an event may have multiple values, the event and filter condition values must have at least one item in common.\n\nTheids,authors,#eand#pfilter lists MUST contain exact 64-character lowercase hex values.\n\nThesinceanduntilproperties can be used to specify the time range of events returned in the subscription. If a filter includes thesinceproperty, events withcreated_atgreater than or equal tosinceare considered to match the filter. Theuntilproperty is similar except thatcreated_atmust be less than or equal tountil. In short, an event matches a filter ifsince <= created_at <= untilholds.\n\nAll conditions of a filter that are specified must match for an event for it to pass the filter, i.e., multiple conditions are interpreted as&&conditions.\n\nAREQmessage may contain multiple filters. In this case, events that match any of the filters are to be returned, i.e., multiple filters are to be interpreted as||conditions.\n\nThelimitproperty of a filter is only valid for the initial query and MUST be ignored afterwards. Whenlimit: nis present it is assumed that the events returned in the initial query will be the lastnevents ordered by thecreated_at. Newer events should appear first, and in the case of ties the event with the lowest id (first in lexical order) should be first. Relays SHOULD use thelimitvalue to guide how many events are returned in the initial response. Returning fewer events is acceptable, but returning (much) more should be avoided to prevent overwhelming clients."}
{"question": "What does From relay to client: sending events and notices mean?", "answer": "Relays can send 5 types of messages, which must also be JSON arrays, according to the following patterns:\n\n- [\"EVENT\", <subscription_id>, <event JSON as defined above>], used to send events requested by clients.\n- [\"OK\", <event_id>, <true|false>, <message>], used to indicate acceptance or denial of anEVENTmessage.\n- [\"EOSE\", <subscription_id>], used to indicate theend of stored eventsand the beginning of events newly received in real-time.\n- [\"CLOSED\", <subscription_id>, <message>], used to indicate that a subscription was ended on the server side.\n- [\"NOTICE\", <message>], used to send human-readable error messages or other things to clients.\n\nThis NIP defines no rules for howNOTICEmessages should be sent or treated.\n\n- EVENTmessages MUST be sent only with a subscription ID related to a subscription previously initiated by the client (using theREQmessage above).\n- OKmessages MUST be sent in response toEVENTmessages received from clients, they must have the 3rd parameter set totruewhen an event has been accepted by the relay,falseotherwise. The 4th parameter MUST always be present, but MAY be an empty string when the 3rd istrue, otherwise it MUST be a string formed by a machine-readable single-word prefix followed by a:and then a human-readable message. Some examples:\n- [\"OK\", \"b1a649ebe8...\", true, \"\"]\n- [\"OK\", \"b1a649ebe8...\", true, \"pow: difficulty 25>=24\"]\n- [\"OK\", \"b1a649ebe8...\", true, \"duplicate: already have this event\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"blocked: you are banned from posting here\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"blocked: please register your pubkey at https://my-expensive-relay.example.com\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"rate-limited: slow down there chief\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"invalid: event creation date is too far off from the current time\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"pow: difficulty 26 is less than 30\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"restricted: not allowed to write.\"]\n- [\"OK\", \"b1a649ebe8...\", false, \"error: could not connect to the database\"]\n- CLOSEDmessages MUST be sent in response to aREQwhen the relay refuses to fulfill it. It can also be sent when a relay decides to kill a subscription on its side before a client has disconnected or sent aCLOSE. This message uses the same pattern ofOKmessages with the machine-readable prefix and human-readable message. Some examples:\n- [\"CLOSED\", \"sub1\", \"unsupported: filter contains unknown elements\"]\n- [\"CLOSED\", \"sub1\", \"error: could not connect to the database\"]\n- [\"CLOSED\", \"sub1\", \"error: shutting down idle subscription\"]\n- The standardized machine-readable prefixes forOKandCLOSEDare:duplicate,pow,blocked,rate-limited,invalid,restricted, anderrorfor when none of that fits."}
{"question": "What does Follow List mean?", "answer": "finaloptional\n\nA special event with kind3, meaning \"follow list\" is defined as having a list ofptags, one for each of the followed/known profiles one is following.\n\nEach tag entry should contain the key for the profile, a relay URL where events from that key can be found (can be set to an empty string if not needed), and a local name (or \"petname\") for that profile (can also be set to an empty string or not provided), i.e.,[\"p\", <32-bytes hex key>, <main relay URL>, <petname>].\n\nThe.contentis not used.\n\nFor example:\n\njsonc\n{\n\"kind\": 3,\n\"tags\": [\n[\"p\", \"91cf9..4e5ca\", \"wss://alicerelay.com/\", \"alice\"],\n[\"p\", \"14aeb..8dad4\", \"wss://bobrelay.com/nostr\", \"bob\"],\n[\"p\", \"612ae..e610f\", \"ws://carolrelay.com/ws\", \"carol\"]\n],\n\"content\": \"\",\n// other fields...\n}\n\nEvery new following list that gets published overwrites the past ones, so it should contain all entries. Relays and clients SHOULD delete past following lists as soon as they receive a new one.\n\nWhenever new follows are added to an existing list, clients SHOULD append them to the end of the list, so they are stored in chronological order."}
{"question": "What does Follow list backup mean?", "answer": "If one believes a relay will store their events for sufficient time, they can use this kind-3 event to backup their following list and recover on a different device."}
{"question": "What does Profile discovery and context augmentation mean?", "answer": "A client may rely on the kind-3 event to display a list of followed people by profiles one is browsing; make lists of suggestions on who to follow based on the follow lists of other people one might be following or browsing; or show the data in other contexts."}
{"question": "What does Relay sharing mean?", "answer": "A client may publish a follow list with good relays for each of their follows so other clients may use these to update their internal relay lists if needed, increasing censorship-resistance."}
{"question": "What does Petname scheme mean?", "answer": "The data from these follow lists can be used by clients to construct local\"petname\"tables derived from other people's follow lists. This alleviates the need for global human-readable names. For example:\n\nA user has an internal follow list that says\n\njson\n[\n[\"p\", \"21df6d143fb96c2ec9d63726bf9edc71\", \"\", \"erin\"]\n]\n\nAnd receives two follow lists, one from21df6d143fb96c2ec9d63726bf9edc71that says\n\njson\n[\n[\"p\", \"a8bb3d884d5d90b413d9891fe4c4e46d\", \"\", \"david\"]\n]\n\nand another froma8bb3d884d5d90b413d9891fe4c4e46dthat says\n\njson\n[\n[\"p\", \"f57f54057d2a7af0efecc8b0b66f5708\", \"\", \"frank\"]\n]\n\nWhen the user sees21df6d143fb96c2ec9d63726bf9edc71the client can showerininstead;\nWhen the user seesa8bb3d884d5d90b413d9891fe4c4e46dthe client can showdavid.erininstead;\nWhen the user seesf57f54057d2a7af0efecc8b0b66f5708the client can showfrank.david.erininstead."}
{"question": "What does OpenTimestamps Attestations for Events mean?", "answer": "draftoptional\n\nThis NIP defines an event withkind:1040that can contain anOpenTimestampsproof for any other event:\n\njson\n{\n\"kind\": 1040\n\"tags\": [\n[\"e\", <event-id>, <relay-url>],\n[\"alt\", \"opentimestamps attestation\"]\n],\n\"content\": <base64-encoded OTS file data>\n}\n\n- The OpenTimestamps proof MUST prove the referencedeevent id as its digest.\n- ThecontentMUST be the full content of an.otsfile containing at least one Bitcoin attestation. This file SHOULD contain asingleBitcoin attestation (as not more than one valid attestation is necessary and less bytes is better than more) and no reference to \"pending\" attestations since they are useless in this context."}
{"question": "What does Example OpenTimestamps proof verification flow mean?", "answer": "Usingnak,jqandots:\n\n```bash\n~> nak req -i e71c6ea722987debdb60f81f9ea4f604b5ac0664120dd64fb9d23abc4ec7c323 wss://nostr-pub.wellorder.net | jq -r .content | ots verify"}
{"question": "What does Encrypted Direct Message mean?", "answer": "finalunrecommendedoptional\n\nA special event with kind4, meaning \"encrypted direct message\". It is supposed to have the following attributes:\n\ncontentMUST be equal to the base64-encoded, aes-256-cbc encrypted string of anything a user wants to write, encrypted using a shared cipher generated by combining the recipient's public-key with the sender's private-key; this appended by the base64-encoded initialization vector as if it was a querystring parameter named \"iv\". The format is the following:\"content\": \"<encrypted_text>?iv=<initialization_vector>\".\n\ntagsMUST contain an entry identifying the receiver of the message (such that relays may naturally forward this event to them), in the form[\"p\", \"<pubkey, as a hex string>\"].\n\ntagsMAY contain an entry identifying the previous message in a conversation or a message we are explicitly replying to (such that contextual, more organized conversations may happen), in the form[\"e\", \"<event_id>\"].\n\nNote: By default in thelibsecp256k1ECDH implementation, the secret is the SHA256 hash of the shared point (both X and Y coordinates). In Nostr, only the X coordinate of the shared point is used as the secret and it is NOT hashed. If using libsecp256k1, a custom function that copies the X coordinate must be passed as thehashfpargument insecp256k1_ecdh. Seehere.\n\nCode sample for generating such an event in JavaScript:\n\n```js\nimport crypto from 'crypto'\nimport * as secp from '@noble/secp256k1'\n\nlet sharedPoint = secp.getSharedSecret(ourPrivateKey, '02' + theirPublicKey)\nlet sharedX = sharedPoint.slice(1, 33)\n\nlet iv = crypto.randomFillSync(new Uint8Array(16))\nvar cipher = crypto.createCipheriv(\n'aes-256-cbc',\nBuffer.from(sharedX),\niv\n)\nlet encryptedMessage = cipher.update(text, 'utf8', 'base64')\nencryptedMessage += cipher.final('base64')\nlet ivBase64 = Buffer.from(iv.buffer).toString('base64')\n\nlet event = {\npubkey: ourPubKey,\ncreated_at: Math.floor(Date.now() / 1000),\nkind: 4,\ntags: [['p', theirPublicKey]],\ncontent: encryptedMessage + '?iv=' + ivBase64\n}\n```"}
{"question": "What does Security Warning mean?", "answer": "This standard does not go anywhere near what is considered the state-of-the-art in encrypted communication between peers, and it leaks metadata in the events, therefore it must not be used for anything you really need to keep secret, and only with relays that useAUTHto restrict who can fetch yourkind:4events."}
{"question": "What does Client Implementation Warning mean?", "answer": "Clientsshould notsearch and replace public key or note references from the.content. If processed like a regular text note (where@npub...is replaced with#[0]with a[\"p\", \"...\"]tag) the tags are leaked and the mentioned user will receive the message in their inbox."}
{"question": "What does Mapping Nostr keys to DNS-based internet identifiers mean?", "answer": "finaloptional\n\nOn events of kind0(user metadata) one can specify the key\"nip05\"with aninternet identifier(an email-like address) as the value. Although there is a link to a very liberal \"internet identifier\" specification above, NIP-05 assumes the<local-part>part will be restricted to the charactersa-z0-9-_., case-insensitive.\n\nUpon seeing that, the client splits the identifier into<local-part>and<domain>and use these values to make a GET request tohttps://<domain>/.well-known/nostr.json?name=<local-part>.\n\nThe result should be a JSON document object with a key\"names\"that should then be a mapping of names to hex formatted public keys. If the public key for the given<name>matches thepubkeyfrom theuser metadataevent, the client then concludes that the given pubkey can indeed be referenced by its identifier."}
{"question": "What does Example mean?", "answer": "If a client sees an event like this:\n\njsonc\n{\n\"pubkey\": \"b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9\",\n\"kind\": 0,\n\"content\": \"{\\\"name\\\": \\\"bob\\\", \\\"nip05\\\": \\\"bob@example.com\\\"}\"\n// other fields...\n}\n\nIt will make a GET request tohttps://example.com/.well-known/nostr.json?name=boband get back a response that will look like\n\njson\n{\n\"names\": {\n\"bob\": \"b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9\"\n}\n}\n\nor with therecommended\"relays\"attribute:\n\njson\n{\n\"names\": {\n\"bob\": \"b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9\"\n},\n\"relays\": {\n\"b0635d6a9851d3aed0cd6c495b282167acf761729078d975fc341b22650b07b9\": [ \"wss://relay.example.com\", \"wss://relay2.example.com\" ]\n}\n}\n\nIf the pubkey matches the one given in\"names\"(as in the example above) that means the association is right and the\"nip05\"identifier is valid and can be displayed.\n\nThe recommended\"relays\"attribute may contain an object with public keys as properties and arrays of relay URLs as values. When present, that can be used to help clients learn in which relays the specific user may be found. Web servers which serve/.well-known/nostr.jsonfiles dynamically based on the query string SHOULD also serve the relays data for any name they serve in the same reply when that is available."}
{"question": "What does Finding users from their NIP-05 identifier mean?", "answer": "A client may implement support for finding users' public keys frominternet identifiers, the flow is the same as above, but reversed: first the client fetches thewell-knownURL and from there it gets the public key of the user, then it tries to fetch the kind0event for that user and check if it has a matching\"nip05\"."}
{"question": "What does Identification, not verification mean?", "answer": "The NIP-05 is not intended toverifya user, but only toidentifythem, for the purpose of facilitating the exchange of a contact or their search.Exceptions are people who own (e.g., a company) or are connected (e.g., a project) to a well-known domain, who can exploit NIP-05 as an attestation of their relationship with it, and thus to the organization behind it, thereby gaining an element of trust."}
{"question": "What does User discovery implementation suggestion mean?", "answer": "A client can use this to allow users to search other profiles. If a client has a search box or something like that, a user may be able to type \"bob@example.com\" there and the client would recognize that and do the proper queries to obtain a pubkey and suggest that to the user."}
{"question": "What does Clients must always follow public keys, not NIP-05 addresses mean?", "answer": "For example, if after finding thatbob@bob.comhas the public keyabc...def, the user clicks a button to follow that profile, the client must keep a primary reference toabc...def, notbob@bob.com. If, for any reason, the addresshttps://bob.com/.well-known/nostr.json?name=bobstarts returning the public key1d2...e3fat any time in the future, the client must not replaceabc...defin his list of followed profiles for the user (but it should stop displaying \"bob@bob.com\" for that user, as that will have become an invalid\"nip05\"property)."}
{"question": "What does Public keys must be in hex format mean?", "answer": "Keys must be returned in hex format. Keys in NIP-19npubformat are only meant to be used for display in client UIs, not in this NIP."}
{"question": "What does Showing just the domain as an identifier mean?", "answer": "Clients may treat the identifier_@domainas the \"root\" identifier, and choose to display it as just the<domain>. For example, if Bob ownsbob.com, he may not want an identifier likebob@bob.comas that is redundant. Instead, Bob can use the identifier_@bob.comand expect Nostr clients to show and treat that as justbob.comfor all purposes."}
{"question": "What does Reasoning for the/.well-known/nostr.json?name=<local-part>format mean?", "answer": "By adding the<local-part>as a query string instead of as part of the path, the protocol can support both dynamic servers that can generate JSON on-demand and static servers with a JSON file in it that may contain multiple names."}
{"question": "What does Allowing access from JavaScript apps mean?", "answer": "JavaScript Nostr apps may be restricted by browserCORSpolicies that prevent them from accessing/.well-known/nostr.jsonon the user's domain. When CORS prevents JS from loading a resource, the JS program sees it as a network failure identical to the resource not existing, so it is not possible for a pure-JS app to tell the user for certain that the failure was caused by a CORS issue. JS Nostr apps that see network failures requesting/.well-known/nostr.jsonfiles may want to recommend to users that they check the CORS policy of their servers, e.g.:\n\nbash\n$ curl -sI https://example.com/.well-known/nostr.json?name=bob | grep -i ^Access-Control\nAccess-Control-Allow-Origin: *\n\nUsers should ensure that their/.well-known/nostr.jsonis served with the HTTP headerAccess-Control-Allow-Origin: *to ensure it can be validated by pure JS apps running in modern browsers."}
{"question": "What does Security Constraints mean?", "answer": "The/.well-known/nostr.jsonendpoint MUST NOT return any HTTP redirects.\n\nFetchers MUST ignore any HTTP redirects given by the/.well-known/nostr.jsonendpoint."}
{"question": "What does Basic key derivation from mnemonic seed phrase mean?", "answer": "draftoptional\n\nBIP39is used to generate mnemonic seed words and derive a binary seed from them.\n\nBIP32is used to derive the pathm/44'/1237'/<account>'/0/0(according to the Nostr entry onSLIP44).\n\nA basic client can simply use anaccountof0to derive a single key. For more advanced use-cases you can incrementaccount, allowing generation of practically infinite keys from the 5-level path with hardened derivation.\n\nOther types of clients can still get fancy and use other derivation paths for their own other purposes."}
{"question": "What does Test vectors mean?", "answer": "mnemonic: leader monkey parrot ring guide accident before fence cannon height naive bean\\\nprivate key (hex): 7f7ff03d123792d6ac594bfa67bf6d0c0ab55b6b1fdb6249303fe861f1ccba9a\\\nnsec: nsec10allq0gjx7fddtzef0ax00mdps9t2kmtrldkyjfs8l5xruwvh2dq0lhhkp\\\npublic key (hex): 17162c921dc4d2518f9a101db33695df1afb56ab82f5ff3e5da6eec3ca5cd917\\\nnpub: npub1zutzeysacnf9rru6zqwmxd54mud0k44tst6l70ja5mhv8jjumytsd2x7nu\n\nmnemonic: what bleak badge arrange retreat wolf trade produce cricket blur garlic valid proud rude strong choose busy staff weather area salt hollow arm fade\\\nprivate key (hex): c15d739894c81a2fcfd3a2df85a0d2c0dbc47a280d092799f144d73d7ae78add\\\nnsec: nsec1c9wh8xy5eqdzln7n5t0ctgxjcrdug73gp5yj0x03gntn67h83twssdfhel\\\npublic key (hex): d41b22899549e1f3d335a31002cfd382174006e166d3e658e3a5eecdb6463573\\\nnpub: npub16sdj9zv4f8sl85e45vgq9n7nsgt5qphpvmf7vk8r5hhvmdjxx4es8rq74h"}
{"question": "What does window.nostrcapability for web browsers mean?", "answer": "draftoptional\n\nThewindow.nostrobject may be made available by web browsers or extensions and websites or web-apps may make use of it after checking its availability.\n\nThat object must define the following methods:\n\nasync window.nostr.getPublicKey(): string // returns a public key as hex\nasync window.nostr.signEvent(event: { created_at: number, kind: number, tags: string[][], content: string }): Event // takes an event object, adds `id`, `pubkey` and `sig` and returns it\n\nAside from these two basic above, the following functions can also be implemented optionally:async window.nostr.nip04.encrypt(pubkey, plaintext): string // returns ciphertext and iv as specified in nip-04 (deprecated)\nasync window.nostr.nip04.decrypt(pubkey, ciphertext): string // takes ciphertext and iv as specified in nip-04 (deprecated)\nasync window.nostr.nip44.encrypt(pubkey, plaintext): string // returns ciphertext as specified in nip-44\nasync window.nostr.nip44.decrypt(pubkey, ciphertext): string // takes ciphertext as specified in nip-44"}
{"question": "What does Recommendation to Extension Authors mean?", "answer": "To make sure that thewindow.nostris available to nostr clients on page load, the authors who create Chromium and Firefox extensions should load their scripts by specifying\"run_at\": \"document_end\"in the extension's manifest."}
{"question": "What does Implementation mean?", "answer": "See https://github.com/aljazceru/awesome-nostr#nip-07-browser-extensions."}
{"question": "What does Handling Mentions mean?", "answer": "finalunrecommendedoptional\n\nThis document standardizes the treatment given by clients of inline mentions of other events and pubkeys inside the content oftext_notes.\n\nClients that want to allow tagged mentions they MUST show an autocomplete component or something analogous to that whenever the user starts typing a special key (for example, \"@\") or presses some button to include a mention etc -- or these clients can come up with other ways to unambiguously differentiate between mentions and normal text.\n\nOnce a mention is identified, for example, the pubkey27866e9d854c78ae625b867eefdfa9580434bc3e675be08d2acb526610d96fbe, the client MUST add that pubkey to the.tagswith the tagp, then replace its textual reference (inside.content) with the notation#[index]in which \"index\" is equal to the 0-based index of the related tag in the tags array.\n\nThe same process applies for mentioning event IDs.\n\nA client that receives atext_noteevent with such#[index]mentions in its.contentCAN do a search-and-replace using the actual contents from the.tagsarray with the actual pubkey or event ID that is mentioned, doing any desired context augmentation (for example, linking to the pubkey or showing a preview of the mentioned event contents) it wants in the process.\n\nWhere#[index]has anindexthat is outside the range of the tags array or points to a tag that is not aneorptag or a tag otherwise declared to support this notation, the client MUST NOT perform such replacement or augmentation, but instead display it as normal text."}
{"question": "What does Event Deletion Request mean?", "answer": "draftoptional\n\nA special event with kind5, meaning \"deletion request\" is defined as having a list of one or moreeoratags, each referencing an event the author is requesting to be deleted. Deletion requests SHOULD include aktag for the kind of each event being requested for deletion.\n\nThe event'scontentfield MAY contain a text note describing the reason for the deletion request.\n\nFor example:\n\njsonc\n{\n\"kind\": 5,\n\"pubkey\": <32-bytes hex-encoded public key of the event creator>,\n\"tags\": [\n[\"e\", \"dcd59..464a2\"],\n[\"e\", \"968c5..ad7a4\"],\n[\"a\", \"<kind>:<pubkey>:<d-identifier>\"],\n[\"k\", \"1\"],\n[\"k\", \"30023\"]\n],\n\"content\": \"these posts were published by accident\",\n// other fields...\n}\n\nRelays SHOULD delete or stop publishing any referenced events that have an identicalpubkeyas the deletion request.  Clients SHOULD hide or otherwise indicate a deletion request status for referenced events.\n\nRelays SHOULD continue to publish/share the deletion request events indefinitely, as clients may already have the event that's intended to be deleted. Additionally, clients SHOULD broadcast deletion request events to other relays which don't have it.\n\nWhen anatag is used, relays SHOULD delete all versions of the replaceable event up to thecreated_attimestamp of the deletion request event."}
{"question": "What does Client Usage mean?", "answer": "Clients MAY choose to fully hide any events that are referenced by valid deletion request events.  This includes text notes, direct messages, or other yet-to-be defined event kinds.  Alternatively, they MAY show the event along with an icon or other indication that the author has \"disowned\" the event.  Thecontentfield MAY also be used to replace the deleted events' own content, although a user interface should clearly indicate that this is a deletion request reason, not the original content.\n\nA client MUST validate that each eventpubkeyreferenced in theetag of the deletion request is identical to the deletion requestpubkey, before hiding or deleting any event.  Relays can not, in general, perform this validation and should not be treated as authoritative.\n\nClients display the deletion request event itself in any way they choose, e.g., not at all, or with a prominent notice.\n\nClients MAY choose to inform the user that their request for deletion does not guarantee deletion because it is impossible to delete events from all relays and clients."}
{"question": "What does Relay Usage mean?", "answer": "Relays MAY validate that a deletion request event only references events that have the samepubkeyas the deletion request itself, however this is not required since relays may not have knowledge of all referenced events."}
{"question": "What does Deletion Request of a Deletion Request mean?", "answer": "Publishing a deletion request event against a deletion request has no effect.  Clients and relays are not obliged to support \"unrequest deletion\" functionality."}
{"question": "What does Text Notes and Threads mean?", "answer": "draftoptional\n\nThis NIP defineskind:1as a simple plaintext note."}
{"question": "What does Abstract mean?", "answer": "The.contentproperty contains some human-readable text.\n\netags can be used to define note thread roots and replies. They SHOULD be sorted by the reply stack from root to the direct parent.\n\nqtags MAY be used when citing events in the.contentwithNIP-21.\n\njson\n[\"q\", \"<event-id> or <event-address>\", \"<relay-url>\", \"<pubkey-if-a-regular-event>\"]\n\nAuthors of theeandqtags SHOULD be added asptags to notify of a new reply or quote.\n\nMarkup languages such as markdown and HTML SHOULD NOT be used."}
{"question": "What does Marked \"e\" tags (PREFERRED) mean?", "answer": "Kind 1 events withetags are replies to other kind 1 events. Kind 1 replies MUST NOT be used to reply to other kinds, useNIP-22instead.\n\n[\"e\", <event-id>, <relay-url>, <marker>, <pubkey>]\n\nWhere:\n\n- <event-id>is the id of the event being referenced.\n- <relay-url>is the URL of a recommended relay associated with the reference. Clients SHOULD add a valid<relay-url>field, but may instead leave it as\"\".\n- <marker>is optional and if present is one of\"reply\",\"root\".\n- <pubkey>is optional, SHOULD be the pubkey of the author of the referenced event\n\nThose marked with\"reply\"denote the id of the reply event being responded to.  Those marked with\"root\"denote the root id of the reply thread being responded to. For top level replies (those replying directly to the root event), only the\"root\"marker should be used.\n\nA direct reply to the root of a thread should have a single marked \"e\" tag of type \"root\".\n\n<pubkey>SHOULD be the pubkey of the author of theetagged event, this is used in the outbox model to search for that event from the authors write relays where relay hints did not resolve the event."}
{"question": "What does The \"p\" tag mean?", "answer": "Used in a text event contains a list of pubkeys used to record who is involved in a reply thread.\n\nWhen replying to a text event E the reply event's \"p\" tags should contain all of E's \"p\" tags as well as the\"pubkey\"of the event being replied to.\n\nExample:  Given a text event authored bya1with \"p\" tags [p1,p2,p3] then the \"p\" tags of the reply should be [a1,p1,p2,p3]\nin no particular order."}
{"question": "What does Deprecated Positional \"e\" tags mean?", "answer": "This scheme is not in common use anymore and is here just to keep backward compatibility with older events on the network.\n\nPositionaletags are deprecated because they create ambiguities that are difficult, or impossible to resolve when an event references another but is not a reply.\n\nThey use simpleetags without any marker.\n\n[\"e\", <event-id>, <relay-url>]as per NIP-01.\n\nWhere:\n\n- <event-id>is the id of the event being referenced.\n- <relay-url>is the URL of a recommended relay associated with the reference.  Many clients treat this field as optional.\n\nThe positions of the \"e\" tags within the event denote specific meanings as follows:\n\n- No \"e\" tag:This event is not a reply to, nor does it refer to, any other event.\n- One \"e\" tag:[\"e\", <id>]: The id of the event to which this event is a reply.\n- Two \"e\" tags:[\"e\", <root-id>],[\"e\", <reply-id>]<root-id>is the id of the event at the root of the reply chain.<reply-id>is the id of the article to which this event is a reply.\n- Many \"e\" tags:[\"e\", <root-id>][\"e\", <mention-id>], ...,[\"e\", <reply-id>]There may be any number of<mention-ids>.  These are the ids of events which may, or may not be in the reply chain.\nThey are citing from this event.root-idandreply-idare as above."}
{"question": "What does Relay Information Document mean?", "answer": "draftoptional\n\nRelays may provide server metadata to clients to inform them of capabilities, administrative contacts, and various server attributes.  This is made available as a JSON document over HTTP, on the same URI as the relay's websocket.\n\nWhen a relay receives an HTTP(s) request with anAcceptheader ofapplication/nostr+jsonto a URI supporting WebSocket upgrades, they SHOULD return a document with the following structure.\n\n```json\n{\n\"name\":,\n\"description\":,\n\"banner\":,\n\"icon\":,\n\"pubkey\":,\n\"contact\":,\n\"supported_nips\":,\n\"software\":,\n\"version\":\"privacy_policy\":,\n\"terms_of_service\":,\n\n}\n```\n\nAny field may be omitted, and clients MUST ignore any additional fields they do not understand. Relays MUST accept CORS requests by sendingAccess-Control-Allow-Origin,Access-Control-Allow-Headers, andAccess-Control-Allow-Methodsheaders."}
{"question": "What does Name mean?", "answer": "A relay may select anamefor use in client software.  This is a string, and SHOULD be less than 30 characters to avoid client truncation."}
{"question": "What does Description mean?", "answer": "Detailed plain-text information about the relay may be contained in thedescriptionstring.  It is recommended that this contain no markup, formatting or line breaks for word wrapping, and simply use double newline characters to separate paragraphs.  There are no limitations on length."}
{"question": "What does Banner mean?", "answer": "To make nostr relay management more user friendly, an effort should be made by relay owners to communicate with non-dev non-technical nostr end users. A banner is a visual representation of the relay. It should aim to visually communicate the brand of the relay, complementing the textDescription.Here is an example bannermockup as visualized in Damus iOS relay view of the Damus relay."}
{"question": "What does Icon mean?", "answer": "Icon is a compact visual representation of the relay for use in UI with limited real estate such as a nostr user's relay list view. Below is an example URL pointing to an image to be used as an icon for the relay. Recommended to be squared in shape.\n\njsonc\n{\n\"icon\": \"https://nostr.build/i/53866b44135a27d624e99c6165cabd76ac8f72797209700acb189fce75021f47.jpg\",\n// other fields...\n}"}
{"question": "What does Pubkey mean?", "answer": "An administrative contact may be listed with apubkey, in the same format as Nostr events (32-byte hex for asecp256k1public key).  If a contact is listed, this provides clients with a recommended address to send encrypted direct messages (SeeNIP-17) to a system administrator.  Expected uses of this address are to report abuse or illegal content, file bug reports, or request other technical assistance.\n\nRelay operators have no obligation to respond to direct messages."}
{"question": "What does Contact mean?", "answer": "An alternative contact may be listed under thecontactfield as well, with the same purpose aspubkey.  Use of a Nostr public key and direct message SHOULD be preferred over this.  Contents of this field SHOULD be a URI, using schemes such asmailtoorhttpsto provide users with a means of contact."}
{"question": "What does Supported NIPs mean?", "answer": "As the Nostr protocol evolves, some functionality may only be available by relays that implement a specificNIP.  This field is an array of the integer identifiers ofNIPs that are implemented in the relay.  Examples would include1, for\"NIP-01\"and9, for\"NIP-09\".  Client-sideNIPsSHOULD NOT be advertised, and can be ignored by clients."}
{"question": "What does Software mean?", "answer": "The relay server implementation MAY be provided in thesoftwareattribute.  If present, this MUST be a URL to the project's homepage."}
{"question": "What does Version mean?", "answer": "The relay MAY choose to publish its software version as a string attribute.  The string format is defined by the relay implementation.  It is recommended this be a version number or commit identifier."}
{"question": "What does Privacy Policy mean?", "answer": "The relay owner/admin MAY choose to link to a privacy policy document, which describes how the relay utilizes user data. Data collection, data usage, data retention, monetization of data, and third party data sharing SHOULD be included."}
{"question": "What does Terms of Service mean?", "answer": "The relay owner/admin MAY choose to link to a terms of service document."}
{"question": "What does Server Limitations mean?", "answer": "These are limitations imposed by the relay on clients. Your client\nshould expect that requests exceed thesepracticallimitations\nare rejected or fail immediately.\n\njsonc\n{\n\"limitation\": {\n\"max_message_length\": 16384,\n\"max_subscriptions\": 300,\n\"max_limit\": 5000,\n\"max_subid_length\": 100,\n\"max_event_tags\": 100,\n\"max_content_length\": 8196,\n\"min_pow_difficulty\": 30,\n\"auth_required\": true,\n\"payment_required\": true,\n\"restricted_writes\": true,\n\"created_at_lower_limit\": 31536000,\n\"created_at_upper_limit\": 3,\n\"default_limit\": 500\n},\n// other fields...\n}\n\n- max_message_length: the maximum number of bytes for incoming JSON that the relay\nwill attempt to decode and act upon. When you send large subscriptions, you will be\nlimited by this value. It also effectively limits the maximum size of any event. Value is\ncalculated from[to]after UTF-8 serialization (so some unicode characters\nwill cost 2-3 bytes). It is equal to the maximum size of the WebSocket message frame.\n- max_subscriptions: total number of subscriptions that may be\nactive on a single websocket connection to this relay. Authenticated clients with a (paid) relationship to the relay\nmay have higher limits.\n- max_subid_length: maximum length of subscription id as a string.\n- max_limit: the relay server will clamp each filter'slimitvalue to this number.\nThis means the client won't be able to get more than this number\nof events from a single subscription filter. This clamping is typically done silently\nby the relay, but with this number, you can know that there are additional results\nif you narrow your filter's time range or other parameters.\n- max_event_tags: in any event, this is the maximum number of elements in thetagslist.\n- max_content_length: maximum number of characters in thecontentfield of any event. This is a count of unicode characters. After\nserializing into JSON it may be larger (in bytes), and is still\nsubject to themax_message_length, if defined.\n- min_pow_difficulty: new events will require at least this difficulty of PoW,\nbased onNIP-13, or they will be rejected by this server.\n- auth_required: this relay requiresNIP-42authentication\nto happen before a new connection may perform any other action.\nEven if set to False, authentication may be required for specific actions.\n- payment_required: this relay requires payment before a new connection may perform any action.\n- restricted_writes: this relay requires some kind of condition to be fulfilled to\naccept events (not necessarily, but includingpayment_requiredandmin_pow_difficulty).\nThis should only be set totruewhen users are expected to know the relay policy before trying\nto write to it -- like belonging to a special pubkey-based whitelist or writing only events of\na specific niche kind or content. Normal anti-spam heuristics, for example, do not qualify.\n- created_at_lower_limit: 'created_at' lower limit\n- created_at_upper_limit: 'created_at' upper limit\n- default_limit: The maximum returned events if you send a filter with the limit set to 0."}
{"question": "What does Event Retention mean?", "answer": "There may be a cost associated with storing data forever, so relays\nmay wish to state retention times. The values stated here are defaults\nfor unauthenticated users and visitors. Paid users would likely have\nother policies.\n\nRetention times are given in seconds, withnullindicating infinity.\nIf zero is provided, this means the event will not be stored at\nall, and preferably an error will be provided when those are received.\n\njsonc\n{\n\"retention\": [\n{\"kinds\": [0, 1, [5, 7], [40, 49]], \"time\": 3600},\n{\"kinds\": [[40000, 49999]], \"time\": 100},\n{\"kinds\": [[30000, 39999]], \"count\": 1000},\n{\"time\": 3600, \"count\": 10000}\n],\n// other fields...\n}\n\nretentionis a list of specifications: each will apply to either all kinds, or\na subset of kinds. Ranges may be specified for the kind field as a tuple of inclusive\nstart and end values. Events of indicated kind (or all) are then limited to acountand/or time period.\n\nIt is possible to effectively blacklist Nostr-based protocols that rely on\na specifickindnumber, by giving a retention time of zero for thosekindvalues.\nWhile that is unfortunate, it does allow clients to discover servers that will\nsupport their protocol quickly via a single HTTP fetch.\n\nThere is no need to specify retention times forephemeral eventssince they are not retained."}
{"question": "What does Content Limitations mean?", "answer": "Some relays may be governed by the arbitrary laws of a nation state. This\nmay limit what content can be stored in clear-text on those relays. All\nclients are encouraged to use encryption to work around this limitation.\n\nIt is not possible to describe the limitations of each country's laws\nand policies which themselves are typically vague and constantly shifting.\n\nTherefore, this field allows the relay operator to indicate which\ncountries' laws might end up being enforced on them, and then\nindirectly on their users' content.\n\nUsers should be able to avoid relays in countries they don't like,\nand/or select relays in more favorable zones. Exposing this\nflexibility is up to the client software.\n\njsonc\n{\n\"relay_countries\": [ \"CA\", \"US\" ],\n// other fields...\n}\n\n- relay_countries: a list of two-level ISO country codes (ISO 3166-1 alpha-2)  whose\nlaws and policies may affect this relay.EUmay be used for European Union countries. A*can be used for global relays.\n\nRemember that a relay may be hosted in a country which is not the\ncountry of the legal entities who own the relay, so it's very\nlikely a number of countries are involved."}
{"question": "What does Community Preferences mean?", "answer": "For public text notes at least, a relay may try to foster a\nlocal community. This would encourage users to follow the global\nfeed on that relay, in addition to their usual individual follows.\nTo support this goal, relays MAY specify some of the following values.\n\njsonc\n{\n\"language_tags\": [\"en\", \"en-419\"],\n\"tags\": [\"sfw-only\", \"bitcoin-only\", \"anime\"],\n\"posting_policy\": \"https://example.com/posting-policy.html\",\n// other fields...\n}\n\n- language_tagsis an ordered list\nofIETF language tagsindicating\nthe major languages spoken on the relay. A*can be used for global relays.\n- tagsis a list of limitations on the topics to be discussed.\nFor examplesfw-onlyindicates that only \"Safe For Work\" content\nis encouraged on this relay. This relies on assumptions of what the\n\"work\" \"community\" feels \"safe\" talking about. In time, a common\nset of tags may emerge that allow users to find relays that suit\ntheir needs, and client software will be able to parse these tags easily.\nThebitcoin-onlytag indicates that anyaltcoin,\"crypto\"orblockchaincomments will be ridiculed without mercy.\n- posting_policyis a link to a human-readable page which specifies the\ncommunity policies for the relay. In cases wheresfw-onlyis True, it's\nimportant to link to a page which gets into the specifics of your posting policy.\n\nThedescriptionfield should be used to describe your community\ngoals and values, in brief. Theposting_policyis for additional\ndetail and legal terms. Use thetagsfield to signify limitations\non content, or topics to be discussed, which could be machine\nprocessed by appropriate client software."}
{"question": "What does Pay-to-Relay mean?", "answer": "Relays that require payments may want to expose their fee schedules.\n\njsonc\n{\n\"payments_url\": \"https://my-relay/payments\",\n\"fees\": {\n\"admission\": [{ \"amount\": 1000000, \"unit\": \"msats\" }],\n\"subscription\": [{ \"amount\": 5000000, \"unit\": \"msats\", \"period\": 2592000 }],\n\"publication\": [{ \"kinds\": [4], \"amount\": 100, \"unit\": \"msats\" }],\n},\n// other fields...\n}"}
{"question": "What does Examples mean?", "answer": "As of 25 March 2025 the following command provided these results:\n\nbash\ncurl -H \"Accept: application/nostr+json\" https://jellyfish.land | jq\n\njson\n{\n\"name\": \"JellyFish\",\n\"description\": \"Stay Immortal!\",\n\"banner\": \"https://image.nostr.build/7fdefea2dec1f1ec25b8ce69362566c13b2b7f13f1726c2e4584f05f64f62496.jpg\",\n\"pubkey\": \"bf2bee5281149c7c350f5d12ae32f514c7864ff10805182f4178538c2c421007\",\n\"contact\": \"hi@dezh.tech\",\n\"software\": \"https://github.com/dezh-tech/immortal\",\n\"supported_nips\": [\n1,\n9,\n11,\n13,\n17,\n40,\n42,\n59,\n62,\n70\n],\n\"version\": \"immortal - 0.0.9\",\n\"relay_countries\": [\n\"*\"\n],\n\"language_tags\": [\n\"*\"\n],\n\"tags\": [],\n\"posting_policy\": \"https://jellyfish.land/tos.txt\",\n\"payments_url\": \"https://jellyfish.land/relay\",\n\"icon\": \"https://image.nostr.build/2547e9ec4b23589e09bc7071e0806c3d4293f76284c58ff331a64bce978aaee8.jpg\",\n\"retention\": [],\n\"fees\": {\n\"subscription\": [\n{\n\"amount\": 3000,\n\"period\": 2628003,\n\"unit\": \"sats\"\n},\n{\n\"amount\": 8000,\n\"period\": 7884009,\n\"unit\": \"sats\"\n},\n{\n\"amount\": 15000,\n\"period\": 15768018,\n\"unit\": \"sats\"\n},\n{\n\"amount\": 28000,\n\"period\": 31536036,\n\"unit\": \"sats\"\n}\n]\n},\n\"limitation\": {\n\"auth_required\": false,\n\"max_message_length\": 70000,\n\"max_subid_length\": 256,\n\"max_subscriptions\": 350,\n\"min_pow_difficulty\": 0,\n\"payment_required\": true,\n\"restricted_writes\": true,\n\"max_event_tags\": 2000,\n\"max_content_length\": 70000,\n\"created_at_lower_limit\": 0,\n\"created_at_upper_limit\": 2147483647,\n\"default_limit\": 500,\n\"max_limit\": 5000\n}\n}"}
{"question": "What does Generic Tag Queries mean?", "answer": "finalmandatory\n\nMoved toNIP-01."}
{"question": "What does Proof of Work mean?", "answer": "draftoptional\n\nThis NIP defines a way to generate and interpret Proof of Work for nostr notes. Proof of Work (PoW) is a way to add a proof of computational work to a note. This is a bearer proof that all relays and clients can universally validate with a small amount of code. This proof can be used as a means of spam deterrence.\n\ndifficultyis defined to be the number of leading zero bits in theNIP-01id. For example, an id of000000000e9d97a1ab09fc381030b346cdd7a142ad57e6df0b46dc9bef6c7e2dhas a difficulty of36with36leading 0 bits.\n\n002f...is0000 0000 0010 1111...in binary, which has 10 leading zeroes. Do not forget to count leading zeroes for hex digits <=7."}
{"question": "What does Mining mean?", "answer": "To generate PoW for aNIP-01note, anoncetag is used:\n\njson\n{\"content\": \"It's just me mining my own business\", \"tags\": [[\"nonce\", \"1\", \"21\"]]}\n\nWhen mining, the second entry to the nonce tag is updated, and then the id is recalculated (seeNIP-01). If the id has the desired number of leading zero bits, the note has been mined. It is recommended to update thecreated_atas well during this process.\n\nThe third entry to the nonce tagSHOULDcontain the target difficulty. This allows clients to protect against situations where bulk spammers targeting a lower difficulty get lucky and match a higher difficulty. For example, if you require 40 bits to reply to your thread and see a committed target of 30, you can safely reject it even if the note has 40 bits difficulty. Without a committed target difficulty you could not reject it. Committing to a target difficulty is something all honest miners should be ok with, and clientsMAYreject a note matching a target difficulty if it is missing a difficulty commitment."}
{"question": "What does Example mined note mean?", "answer": "json\n{\n\"id\": \"000006d8c378af1779d2feebc7603a125d99eca0ccf1085959b307f64e5dd358\",\n\"pubkey\": \"a48380f4cfcc1ad5378294fcac36439770f9c878dd880ffa94bb74ea54a6f243\",\n\"created_at\": 1651794653,\n\"kind\": 1,\n\"tags\": [\n[\"nonce\", \"776797\", \"20\"]\n],\n\"content\": \"It's just me mining my own business\",\n\"sig\": \"284622fc0a3f4f1303455d5175f7ba962a3300d136085b9566801bc2e0699de0c7e31e44c81fb40ad9049173742e904713c3594a1da0fc5d2382a25c11aba977\"\n}"}
{"question": "What does Validating mean?", "answer": "Here is some reference C code for calculating the difficulty (aka number of leading zero bits) in a nostr event id:\n\n```c\nint zero_bits(unsigned char b)\n{\nint n = 0;\n\n```\nif (b == 0)\nreturn 8;\n\nwhile (b >>= 1)\nn++;\n\nreturn 7-n;\n```\n\n}\n\n/find the number of leading zero bits in a hash/\nint count_leading_zero_bits(unsigned char *hash)\n{\nint bits, total, i;\nfor (i = 0, total = 0; i < 32; i++) {\nbits = zero_bits(hash[i]);\ntotal += bits;\nif (bits != 8)\nbreak;\n}\nreturn total;\n}\n```\n\nHere is some JavaScript code for doing the same thing:\n\n```javascript\n// hex should be a hexadecimal string (with no 0x prefix)\nfunction countLeadingZeroes(hex) {\nlet count = 0;\n\nfor (let i = 0; i < hex.length; i++) {\nconst nibble = parseInt(hex[i], 16);\nif (nibble === 0) {\ncount += 4;\n} else {\ncount += Math.clz32(nibble) - 28;\nbreak;\n}\n}\n\nreturn count;\n}\n```"}
{"question": "What does Delegated Proof of Work mean?", "answer": "Since theNIP-01note id does not commit to any signature, PoW can be outsourced to PoW providers, perhaps for a fee. This provides a way for clients to get their messages out to PoW-restricted relays without having to do any work themselves, which is useful for energy-constrained devices like mobile phones."}
{"question": "What does Subject tag in Text events mean?", "answer": "draftoptional\n\nThis NIP defines the use of the \"subject\" tag in text (kind: 1) events.\n(implemented in more-speech)\n\njson\n[\"subject\": <string>]\n\nBrowsers often display threaded lists of messages.  The contents of the subject tag can be used in such lists, instead of the more ad hoc approach of using the first few words of the message.  This is very similar to the way email browsers display lists of incoming emails by subject rather than by contents.\n\nWhen replying to a message with a subject, clients SHOULD replicate the subject tag.  Clients MAY adorn the subject to denote\nthat it is a reply.  e.g. by prepending \"Re:\".\n\nSubjects should generally be shorter than 80 chars.  Long subjects will likely be trimmed by clients."}
{"question": "What does Nostr Marketplace mean?", "answer": "draftoptional\n\nBased onDiagon-Alley.\n\nImplemented inNostrMarketandPlebeian Market."}
{"question": "What does Terms mean?", "answer": "- merchant- seller of products with NOSTR key-pair\n- customer- buyer of products with NOSTR key-pair\n- product- item for sale by themerchant\n- stall- list of products controlled bymerchant(amerchantcan have multiple stalls)\n- marketplace- clientside software for searchingstallsand purchasingproducts"}
{"question": "What does Merchant admin mean?", "answer": "Where themerchantcreates, updates and deletesstallsandproducts, as well as where they manage sales, payments and communication withcustomers.\n\nThemerchantadmin software can be purely clientside, but forconvenienceand uptime, implementations will likely have a server client listening for NOSTR events."}
{"question": "What does Marketplace mean?", "answer": "Marketplacesoftware should be entirely clientside, either as a stand-alone app, or as a purely frontend webpage. Acustomersubscribes to different merchant NOSTR public keys, and thosemerchantsstallsandproductsbecome listed and searchable. The marketplace client is like any other ecommerce site, with basket and checkout.Marketplacesmay also wish to include acustomersupport area for direct message communication withmerchants."}
{"question": "What does Merchantpublishing/updating products (event) mean?", "answer": "A merchant can publish these events:\n| Kind      |                    | Description                                                                                                     |\n| --------- | ------------------ | --------------------------------------------------------------------------------------------------------------- |\n|0|set_meta| The merchant description (similar with anynostrpublic key).                                                 |\n|30017|set_stall| Create or update a stall.                                                                                       |\n|30018|set_product| Create or update a product.                                                                                     |\n|4|direct_message| Communicate with the customer. The messages can be plain-text or JSON.                                          |\n|5|delete| Delete a product or a stall.                                                                                    |"}
{"question": "What does Event30017: Create or update a stall. mean?", "answer": "Event Content\n\njson\n{\n\"id\": <string, id generated by the merchant. Sequential IDs (`0`, `1`, `2`...) are discouraged>,\n\"name\": <string, stall name>,\n\"description\": <string (optional), stall description>,\n\"currency\": <string, currency used>,\n\"shipping\": [\n{\n\"id\": <string, id of the shipping zone, generated by the merchant>,\n\"name\": <string (optional), zone name>,\n\"cost\": <float, base cost for shipping. The currency is defined at the stall level>,\n\"regions\": [<string, regions included in this zone>]\n}\n]\n}\n\nFields that are not self-explanatory:\n-shipping:\n- an array with possible shipping zones for this stall.\n- the customer MUST choose exactly one of those shipping zones.\n- shipping to different zones can have different costs. For some goods (digital for example) the cost can be zero.\n- theidis an internal value used by the merchant. This value must be sent back as the customer selection.\n- each shipping zone contains the base cost for orders made to that shipping zone, but a specific shipping cost per\nproduct can also be specified if the shipping cost for that product is higher than what's specified by the base cost.\n\nEvent Tags\n\njsonc\n{\n\"tags\": [[\"d\", <string, id of stall]],\n// other fields...\n}- thedtag is required, its value MUST be the same as the stallid."}
{"question": "What does Event30018: Create or update a product mean?", "answer": "Event Content\n\njson\n{\n\"id\": <string, id generated by the merchant (sequential ids are discouraged)>,\n\"stall_id\": <string, id of the stall to which this product belong to>,\n\"name\": <string, product name>,\n\"description\": <string (optional), product description>,\n\"images\": <[string], array of image URLs, optional>,\n\"currency\": <string, currency used>,\n\"price\": <float, cost of product>,\n\"quantity\": <int or null, available items>,\n\"specs\": [\n[<string, spec key>, <string, spec value>]\n],\n\"shipping\": [\n{\n\"id\": <string, id of the shipping zone (must match one of the zones defined for the stall)>,\n\"cost\": <float, extra cost for shipping. The currency is defined at the stall level>\n}\n]\n}\n\nFields that are not self-explanatory:\n-quantitycan be null in the case of items with unlimited availability, like digital items, or services\n-specs:\n- an optional array of key pair values. It allows for the Customer UI to present product specifications in a structure mode. It also allows comparison between products\n- eg:[[\"operating_system\", \"Android 12.0\"], [\"screen_size\", \"6.4 inches\"], [\"connector_type\", \"USB Type C\"]]\n\n```\n_Open_: better to move `spec` in the `tags` section of the event?\n```\n\n- shipping:\n- anoptionalarray of extra costs to be used per shipping zone, only for products that require special shipping costs to be added to the base shipping cost defined in the stall\n- theidshould match the id of the shipping zone, as defined in theshippingfield of the stall\n- to calculate the total cost of shipping for an order, the user will choose a shipping option during checkout, and then the client must consider this costs:thebase cost from the stallfor the chosen shipping optionthe result of multiplying the product units by theshipping costs specified in the product, if any.\n- thebase cost from the stallfor the chosen shipping option\n- the result of multiplying the product units by theshipping costs specified in the product, if any.\n\nEvent Tags\n\njsonc\n\"tags\": [\n[\"d\", <string, id of product],\n[\"t\", <string (optional), product category],\n[\"t\", <string (optional), product category],\n// other fields...\n],\n...\n\n- thedtag is required, its value MUST be the same as the productid.\n- thettag is as searchable tag, it represents different categories that the product can be part of (food,fruits). Multiplettags can be present."}
{"question": "What does Checkout events mean?", "answer": "All checkout events are sent as JSON strings usingNIP-04.\n\nThemerchantand thecustomercan exchange JSON messages that represent different actions. EachJSONmessageMUSThave atypefield indicating the what the JSON represents. Possible types:\n\n| Message Type | Sent By  | Description         |\n|--------------|----------|---------------------|\n| 0            | Customer | New Order           |\n| 1            | Merchant | Payment Request     |\n| 2            | Merchant | Order Status Update |"}
{"question": "What does Step 1:customerorder (event) mean?", "answer": "The below JSON goes in content ofNIP-04.\n\n```json\n{\n\"id\":,\n\"type\": 0,\n\"name\":,\n\"address\":,\n\"message\":,\n\"contact\": {\n\"nostr\": <32-bytes hex of a pubkey>,\n\"phone\":,\n\"email\":},\n\"items\": [\n{\n\"product_id\":,\n\"quantity\":}\n],\n\"shipping_id\":}\n\n```\n\nOpen: iscontact.nostrrequired?"}
{"question": "What does Step 2:merchantrequest payment (event) mean?", "answer": "Sent back from the merchant for payment. Any payment option is valid that the merchant can check.\n\nThe below JSON goes incontentofNIP-04.\n\npayment_options/typeinclude:\n\n- urlURL to a payment page, stripe, paypal, btcpayserver, etc\n- btconchain bitcoin address\n- lnbitcoin lightning invoice\n- lnurlbitcoin lnurl-pay\n\njson\n{\n\"id\": <string, id of the order>,\n\"type\": 1,\n\"message\": <string, message to customer, optional>,\n\"payment_options\": [\n{\n\"type\": <string, option type>,\n\"link\": <string, url, btc address, ln invoice, etc>\n},\n{\n\"type\": <string, option type>,\n\"link\": <string, url, btc address, ln invoice, etc>\n},\n{\n\"type\": <string, option type>,\n\"link\": <string, url, btc address, ln invoice, etc>\n}\n]\n}"}
{"question": "What does Step 3:merchantverify payment/shipped (event) mean?", "answer": "Once payment has been received and processed.\n\nThe below JSON goes incontentofNIP-04.\n\njson\n{\n\"id\": <string, id of the order>,\n\"type\": 2,\n\"message\": <string, message to customer>,\n\"paid\": <bool: has received payment>,\n\"shipped\": <bool: has been shipped>,\n}"}
{"question": "What does Customize Marketplace mean?", "answer": "Create a customized user experience using thenaddrfromNIP-19. The use ofnaddrenables easy sharing of marketplace events while incorporating a rich set of metadata. This metadata can include relays, merchant profiles, and more. Subsequently, it allows merchants to be grouped into a market, empowering the market creator to configure the marketplace's user interface and user experience, and share that marketplace. This customization can encompass elements such as market name, description, logo, banner, themes, and even color schemes, offering a tailored and unique marketplace experience."}
{"question": "What does Event30019: Create or update marketplace UI/UX mean?", "answer": "Event Content\n\njsonc\n{\n\"name\": <string (optional), market name>,\n\"about\": <string (optional), market description>,\n\"ui\": {\n\"picture\": <string (optional), market logo image URL>,\n\"banner\": <string (optional), market logo banner URL>,\n\"theme\": <string (optional), market theme>,\n\"darkMode\": <bool, true/false>\n},\n\"merchants\": [array of pubkeys (optional)],\n// other fields...\n}\n\nThis event leverages naddr to enable comprehensive customization and sharing of marketplace configurations, fostering a unique and engaging marketplace environment."}
{"question": "What does Event30020: Create or update a product sold as an auction mean?", "answer": "Event Content:json\n{\n\"id\": <String, UUID generated by the merchant. Sequential IDs (`0`, `1`, `2`...) are discouraged>,\n\"stall_id\": <String, UUID of the stall to which this product belong to>,\n\"name\": <String, product name>,\n\"description\": <String (optional), product description>,\n\"images\": <[String], array of image URLs, optional>,\n\"starting_bid\": <int>,\n\"start_date\": <int (optional) UNIX timestamp, date the auction started / will start>,\n\"duration\": <int, number of seconds the auction will run for, excluding eventual time extensions that might happen>,\n\"specs\": [\n[<String, spec key>, <String, spec value>]\n],\n\"shipping\": [\n{\n\"id\": <String, UUID of the shipping zone. Must match one of the zones defined for the stall>,\n\"cost\": <float, extra cost for shipping. The currency is defined at the stall level>\n}\n]\n}\n\n- Thestart_datecan be set to a date in the future if the auction is scheduled to start on that date, or can be omitted if the start date is unknown/hidden. If the start date is not specified, the auction will have to be edited later to set an actual date.\n- The auction runs for an initial number of seconds after thestart_date, specified byduration."}
{"question": "What does Event1021: Bid mean?", "answer": "jsonc\n{\n\"content\": <int, amount of sats>,\n\"tags\": [[\"e\", <event ID of the auction to bid on>]],\n// other fields...\n}\n\nBids are simply events of kind1021with acontentfield specifying the amount, in the currency of the auction. Bids must reference an auction."}
{"question": "What does Event1022: Bid confirmation mean?", "answer": "Event Content:\n\njson\n{\n\"status\": <String, \"accepted\" | \"rejected\" | \"pending\" | \"winner\">,\n\"message\": <String (optional)>,\n\"duration_extended\": <int (optional), number of seconds>\n}\n\nEvent Tags:json\n\"tags\": [[\"e\" <event ID of the bid being confirmed>], [\"e\", <event ID of the auction>]],\n\nBids should be confirmed by the merchant before being considered as valid by other clients. So clients should subscribe tobid confirmationevents (kind1022) for every auction that they follow, in addition to the actual bids and should check that the pubkey of the bid confirmation matches the pubkey of the merchant (in addition to checking the signature).\n\nThecontentfield is a JSON which includesat leastastatus.winneris how thewinning bidis replied to after the auction ends and the winning bid is picked by the merchant.\n\nThe reasons for which a bid can be marked asrejectedorpendingare up to the merchant's implementation and configuration - they could be anything from basic validation errors (amount too low) to the bidder being blacklisted or to the bidder lacking sufficienttrust, which could lead to the bid being marked aspendinguntil sufficient verification is performed. The difference between the two is thatpendingbidsmightget approved after additional steps are taken by the bidder, whereasrejectedbids can not be later approved.\n\nAn additionalmessagefield can appear in thecontentJSON to give further context as of why a bid isrejectedorpending.\n\nAnother thing that can happen is - if bids happen very close to the end date of the auction - for the merchant to decide to extend the auction duration for a few more minutes. This is done by passing aduration_extendedfield as part of a bid confirmation, which would contain a number of seconds by which the initial duration is extended. So the actual end date of an auction is alwaysstart_date + duration + (SUM(c.duration_extended) FOR c in all confirmations."}
{"question": "What does Customer support events mean?", "answer": "Customer support is handled over whatever communication method was specified. If communicating via nostr,NIP-04is used."}
{"question": "What does Additional mean?", "answer": "Standard data models can be foundhere"}
{"question": "What does Event Treatment mean?", "answer": "finalmandatory\n\nMoved toNIP-01."}
{"question": "What does Private Direct Messages mean?", "answer": "draftoptional\n\nThis NIP defines an encrypted direct messaging scheme usingNIP-44encryption andNIP-59seals and gift wraps."}
{"question": "What does Direct Message Kind mean?", "answer": "Kind14is a chat message.ptags identify one or more receivers of the message.\n\njsonc\n{\n\"id\": \"<usual hash>\",\n\"pubkey\": \"<sender-pubkey>\",\n\"created_at\": \"<current-time>\",\n\"kind\": 14,\n\"tags\": [\n[\"p\", \"<receiver-1-pubkey>\", \"<relay-url>\"],\n[\"p\", \"<receiver-2-pubkey>\", \"<relay-url>\"],\n[\"e\", \"<kind-14-id>\", \"<relay-url>\"] // if this is a reply\n[\"subject\", \"<conversation-title>\"],\n// rest of tags...\n],\n\"content\": \"<message-in-plain-text>\",\n}\n\n.contentMUST be plain text. Fieldsidandcreated_atare required.\n\nAnetag denotes the direct parent message this post is replying to.\n\nqtags MAY be used when citing events in the.contentwithNIP-21.\n\njson\n[\"q\", \"<event-id> or <event-address>\", \"<relay-url>\", \"<pubkey-if-a-regular-event>\"]\n\nKind14s MUST never be signed. If it is signed, the message might leak to relays and becomefully public."}
{"question": "What does File Message Kind mean?", "answer": "jsonc\n{\n\"id\": \"<usual hash>\",\n\"pubkey\": \"<sender-pubkey>\",\n\"created_at\": \"<current-time>\",\n\"kind\": 15,\n\"tags\": [\n[\"p\", \"<receiver-1-pubkey>\", \"<relay-url>\"],\n[\"p\", \"<receiver-2-pubkey>\", \"<relay-url>\"],\n[\"e\", \"<kind-14-id>\", \"<relay-url>\", \"reply\"], // if this is a reply\n[\"subject\", \"<conversation-title>\"],\n[\"file-type\", \"<file-mime-type>\"],\n[\"encryption-algorithm\", \"<encryption-algorithm>\"],\n[\"decryption-key\", \"<decryption-key>\"],\n[\"decryption-nonce\", \"<decryption-nonce>\"],\n[\"x\", \"<the SHA-256 hexencoded string of the file>\"],\n// rest of tags...\n],\n\"content\": \"<file-url>\"\n}\n\nKind15is used for sending encrypted file event messages:\n\n- file-type: Specifies the MIME type of the attached file (e.g.,image/jpeg,audio/mpeg, etc.) before encryption.\n- encryption-algorithm: Indicates the encryption algorithm used for encrypting the file. Supported algorithms:aes-gcm.\n- decryption-key: The decryption key that will be used by the recipient to decrypt the file.\n- decryption-nonce: The decryption nonce that will be used by the recipient to decrypt the file.\n- content: The URL of the file (<file-url>).\n- xcontaining the SHA-256 hexencoded string of the encrypted file.\n- oxcontaining the SHA-256 hexencoded string of the file before encryption.\n- size(optional) size of the encrypted file in bytes\n- dim(optional) size in pixels in the form<width>x<height>\n- blurhash(optional) theblurhashto show while the client is loading the file\n- thumb(optional) URL of thumbnail with same aspect ratio (encrypted with the same key, nonce)\n- fallback(optional) zero or more fallback file sources in caseurlfails (encrypted with the same key, nonce)\n\nJust like kind14, kind15s MUST never be signed."}
{"question": "What does Chat Rooms mean?", "answer": "The set ofpubkey+ptags defines a chat room. If a newptag is added or a current one is removed, a new room is created with a clean message history.\n\nClients SHOULD render messages of the same room in a continuous thread.\n\nAn optionalsubjecttag defines the current name/topic of the conversation. Any member can change the topic by simply submitting a newsubjectto an existingpubkey+ptags room. There is no need to sendsubjectin every message. The newestsubjectin the chat room is the subject of the conversation."}
{"question": "What does Encrypting mean?", "answer": "FollowingNIP-59, theunsignedkind:14&kind:15chat messages must be sealed (kind:13) and then gift-wrapped (kind:1059) to each receiver and the sender individually.\n\njs\n{\n\"id\": \"<usual hash>\",\n\"pubkey\": randomPublicKey,\n\"created_at\": randomTimeUpTo2DaysInThePast(),\n\"kind\": 1059, // gift wrap\n\"tags\": [\n[\"p\", receiverPublicKey, \"<relay-url>\"] // receiver\n],\n\"content\": nip44Encrypt(\n{\n\"id\": \"<usual hash>\",\n\"pubkey\": senderPublicKey,\n\"created_at\": randomTimeUpTo2DaysInThePast(),\n\"kind\": 13, // seal\n\"tags\": [], // no tags\n\"content\": nip44Encrypt(unsignedKind14, senderPrivateKey, receiverPublicKey),\n\"sig\": \"<signed by senderPrivateKey>\"\n},\nrandomPrivateKey, receiverPublicKey\n),\n\"sig\": \"<signed by randomPrivateKey>\"\n}\n\nThe encryption algorithm MUST use the latest version ofNIP-44.\n\nClients MUST verify if pubkey of thekind:13is the same pubkey on thekind:14, otherwise any sender can impersonate others by simply changing the pubkey onkind:14.\n\nClients SHOULD randomizecreated_atin up to two days in the past in both the seal and the gift wrap to make sure grouping bycreated_atdoesn't reveal any metadata.\n\nThe gift wrap'sptag can be the receiver's main pubkey or an alias key created to receive DMs without exposing the receiver's identity.\n\nClients CAN offer disappearing messages by setting anexpirationtag in the gift wrap of each receiver or by not generating a gift wrap to the sender's public key"}
{"question": "What does Publishing mean?", "answer": "Kind10050indicates the user's preferred relays to receive DMs. The event MUST include a list ofrelaytags with relay URIs.\n\njsonc\n{\n\"kind\": 10050,\n\"tags\": [\n[\"relay\", \"wss://inbox.nostr.wine\"],\n[\"relay\", \"wss://myrelay.nostr1.com\"],\n],\n\"content\": \"\",\n// other fields...\n}\n\nClients SHOULD publish kind14events to the10050-listed relays. If that is not found that indicates the user is not ready to receive messages under this NIP and clients shouldn't try."}
{"question": "What does Relays mean?", "answer": "It's advisable that relays do not servekind:1059to clients other than the ones tagged in them.\n\nIt's advisable that users choose relays that conform to these practices.\n\nClients SHOULD guide users to keepkind:10050lists small (1-3 relays) and SHOULD spread it to as many relays as viable."}
{"question": "What does Benefits & Limitations mean?", "answer": "This NIP offers the following privacy and security features:\n\n- No Metadata Leak: Participant identities, each message's real date and time, event kinds, and other event tags are all hidden from the public. Senders and receivers cannot be linked with public information alone.\n- No Public Group Identifiers: There is no public central queue, channel or otherwise converging identifier to correlate or count all messages in the same group.\n- No Moderation: There are no group admins: no invitations or bans.\n- No Shared Secrets: No secret must be known to all members that can leak or be mistakenly shared\n- Fully Recoverable: Messages can be fully recoverable by any client with the user's private key\n- Optional Forward Secrecy: Users and clients can opt-in for \"disappearing messages\".\n- Uses Public Relays: Messages can flow through public relays without loss of privacy. Private relays can increase privacy further, but they are not required.\n- Cold Storage: Users can unilaterally opt-in to sharing their messages with a separate key that is exclusive for DM backup and recovery.\n\nThe main limitation of this approach is having to send a separate encrypted event to each receiver. Group chats with more than 100 participants should find a more suitable messaging scheme."}
{"question": "What does Reposts mean?", "answer": "draftoptional\n\nA repost is akind 6event that is used to signal to followers\nthat akind 1text note is worth reading.\n\nThecontentof a repost event isthe stringified JSON of the reposted note. It MAY also be empty, but that is not recommended.\nReposts ofNIP-70-protected events SHOULD always have an emptycontent.\n\nThe repost event MUST include anetag with theidof the note that is\nbeing reposted. That tag MUST include a relay URL as its third entry\nto indicate where it can be fetched.\n\nThe repost SHOULD include aptag with thepubkeyof the event being\nreposted."}
{"question": "What does Quote Reposts mean?", "answer": "Quote reposts arekind 1events with an embeddedqtag of the note being\nquote reposted. Theqtag ensures quote reposts are not pulled and included\nas replies in threads. It also allows you to easily pull and count all of the\nquotes for a post.\n\nqtags should follow the same conventions as NIP 10etags, with the exception\nof themarkargument.\n\n[\"q\", <event-id>, <relay-url>, <pubkey>]\n\nQuote reposts MUST include theNIP-21nevent,note, ornaddrof the\nevent in the content."}
{"question": "What does Generic Reposts mean?", "answer": "Sincekind 6reposts are reserved forkind 1contents, we usekind 16as a \"generic repost\", that can include any kind of event inside other thankind 1.\n\nkind 16reposts SHOULD contain aktag with the stringified kind number\nof the reposted event as its value."}
{"question": "What does bech32-encoded entities mean?", "answer": "draftoptional\n\nThis NIP standardizes bech32-formatted strings that can be used to display keys, ids and other information in clients. These formats are not meant to be used anywhere in the core protocol, they are only meant for displaying to users, copy-pasting, sharing, rendering QR codes and inputting data.\n\nIt is recommended that ids and keys are stored in either hex or binary format, since these formats are closer to what must actually be used the core protocol."}
{"question": "What does Bare keys and ids mean?", "answer": "To prevent confusion and mixing between private keys, public keys and event ids, which are all 32 byte strings. bech32-(not-m) encoding with different prefixes can be used for each of these entities.\n\nThese are the possible bech32 prefixes:\n\n- npub: public keys\n- nsec: private keys\n- note: note ids\n\nExample: the hex public key3bf0c63fcb93463407af97a5e5ee64fa883d107ef9e558472c4eb9aaaefa459dtranslates tonpub180cvv07tjdrrgpa0j7j7tmnyl2yr6yr7l8j4s3evf6u64th6gkwsyjh6w6.\n\nThe bech32 encodings of keys and ids are not meant to be used inside the standard NIP-01 event formats or inside the filters, they're meant for human-friendlier display and input only. Clients should still accept keys in both hex and npub format for now, and convert internally."}
{"question": "What does Shareable identifiers with extra metadata mean?", "answer": "When sharing a profile or an event, an app may decide to include relay information and other metadata such that other apps can locate and display these entities more easily.\n\nFor these events, the contents are a binary-encoded list ofTLV(type-length-value), withTandLbeing 1 byte each (uint8, i.e. a number in the range of 0-255), andVbeing a sequence of bytes of the size indicated byL.\n\nThese are the possible bech32 prefixes withTLV:\n\n- nprofile: a nostr profile\n- nevent: a nostr event\n- naddr: a nostraddressable eventcoordinate\n- nrelay: a nostr relay (deprecated)\n\nThese possible standardizedTLVtypes are indicated here:\n\n- 0:special\n- depends on the bech32 prefix:fornprofileit will be the 32 bytes of the profile public keyforneventit will be the 32 bytes of the event idfornaddr, it is the identifier (the\"d\"tag) of the event being referenced. For normal replaceable events use an empty string.\n- fornprofileit will be the 32 bytes of the profile public key\n- forneventit will be the 32 bytes of the event id\n- fornaddr, it is the identifier (the\"d\"tag) of the event being referenced. For normal replaceable events use an empty string.\n- 1:relay\n- fornprofile,neventandnaddr,optionally, a relay in which the entity (profile or event) is more likely to be found, encoded as ascii\n- this may be included multiple times\n- 2:author\n- fornaddr, the 32 bytes of the pubkey of the event\n- fornevent,optionally, the 32 bytes of the pubkey of the event\n- 3:kind\n- fornaddr, the 32-bit unsigned integer of the kind, big-endian\n- fornevent,optionally, the 32-bit unsigned integer of the kind, big-endian"}
{"question": "What does Notes mean?", "answer": "- npubkeys MUST NOT be used in NIP-01 events or in NIP-05 JSON responses, only the hex format is supported there.\n- When decoding a bech32-formatted string, TLVs that are not recognized or supported should be ignored, rather than causing an error."}
{"question": "What does Command Results mean?", "answer": "finalmandatory\n\nMoved toNIP-01."}
{"question": "What does nostr:URI scheme mean?", "answer": "draftoptional\n\nThis NIP standardizes the usage of a common URI scheme for maximum interoperability and openness in the network.\n\nThe scheme isnostr:.\n\nThe identifiers that come after are expected to be the same as those defined inNIP-19(exceptnsec)."}
{"question": "What does Linking HTML pages to Nostr entities mean?", "answer": "<link>tags withrel=\"alternate\"can be used to associate webpages to Nostr events, in cases where the same content is served via the two mediums (for example, a web server that exposes Markdown articles both as HTML pages and as `kind:30023' events served under itself as a relay or through some other relay). For example:\n\n<head>\n<link rel=\"alternate\" href=\"nostr:naddr1qqyrzwrxvc6ngvfkqyghwumn8ghj7enfv96x5ctx9e3k7mgzyqalp33lewf5vdq847t6te0wvnags0gs0mu72kz8938tn24wlfze6qcyqqq823cph95ag\" />\n</head>\n\nLikewise,<link>tags withrel=\"me\"orrel=\"author\"can be used to assign authorship of webpages to Nostr profiles. For example:\n\n<head>\n<link rel=\"me\" href=\"nostr:nprofile1qyxhwumn8ghj7mn0wvhxcmmvqyd8wumn8ghj7un9d3shjtnhv4ehgetjde38gcewvdhk6qpq80cvv07tjdrrgpa0j7j7tmnyl2yr6yr7l8j4s3evf6u64th6gkwswpnfsn\" />\n</head>"}
{"question": "What does Comment mean?", "answer": "draftoptional\n\nA comment is a threading note always scoped to a root event or anI-tag.\n\nIt useskind:1111with plaintext.content(no HTML, Markdown, or other formatting).\n\nComments MUST point to the root scope using uppercase tag names (e.g.K,E,AorI)\nand MUST point to the parent item with lowercase ones (e.g.k,e,aori).\n\nComments MUST point to the authors when one is available (i.e. tagging a nostr event).Pfor the root scope\nandpfor the author of the parent item.\n\n```jsonc\n{\n\"kind\": 1111,\n\"content\": \"\",\n\"tags\": [\n// root scope: event addresses, event ids, or I-tags.\n[\"\", \"\", \"\", \"\"],\n// the root item kind\n[\"K\", \"\"],\n\n```\n// pubkey of the author of the root scope event\n[\"P\", \"<root-pubkey>\", \"relay-url-hint\"],\n\n// parent item: event addresses, event ids, or i-tags.\n[\"<a, e, i>\", \"<address, id or i-value>\", \"<relay or web page hint>\", \"<parent event's pubkey, if an e tag>\"],\n// parent item kind\n[\"k\", \"<parent comment kind>\"],\n\n// parent item pubkey\n[\"p\", \"<parent-pubkey>\", \"relay-url-hint\"]\n```\n\n]\n// other fields\n}\n```\n\nTagsKandkMUST be present to define the event kind of the root and the parent items.\n\nIanditags create scopes for hashtags, geohashes, URLs, and other external identifiers.\n\nThe possible values foritags – andktags, when related to an extenal identity – are listed onNIP-73.\nTheir uppercase versions use the same type of values but relate to the root item instead of the parent one.\n\nqtags MAY be used when citing events in the.contentwithNIP-21.\n\njson\n[\"q\", \"<event-id> or <event-address>\", \"<relay-url>\", \"<pubkey-if-a-regular-event>\"]\n\nptags SHOULD be used when mentioning pubkeys in the.contentwithNIP-21.\n\nComments MUST NOT be used to reply to kind 1 notes.NIP-10should instead be followed."}
{"question": "What does Long-form Content mean?", "answer": "draftoptional\n\nThis NIP defineskind:30023(anaddressable event) for long-form text content, generally referred to as \"articles\" or \"blog posts\".kind:30024has the same structure askind:30023and is used to save long form drafts.\n\n\"Social\" clients that deal primarily withkind:1notes should not be expected to implement this NIP."}
{"question": "What does Format mean?", "answer": "The.contentof these events should be a string text in Markdown syntax. To maximize compatibility and readability between different clients and devices, any client that is creating long form notes:\n\n- MUST NOT hard line-break paragraphs of text, such as arbitrary line breaks at 80 column boundaries.\n- MUST NOT support adding HTML to Markdown."}
{"question": "What does Metadata mean?", "answer": "For the date of the last update the.created_atfield should be used, for \"tags\"/\"hashtags\" (i.e. topics about which the event might be of relevance) thettag should be used.\n\nOther metadata fields can be added as tags to the event as necessary. Here we standardize 4 that may be useful, although they remain strictly optional:\n\n- \"title\", for the article title\n- \"image\", for a URL pointing to an image to be shown along with the title\n- \"summary\", for the article summary\n- \"published_at\", for the timestamp in unix seconds (stringified) of the first time the article was published"}
{"question": "What does Editability mean?", "answer": "These articles are meant to be editable, so they should include adtag with an identifier for the article. Clients should take care to only publish and read these events from relays that implement that. If they don't do that they should also take care to hide old versions of the same article they may receive."}
{"question": "What does Linking mean?", "answer": "The article may be linked to using theNIP-19naddrcode along with theatag."}
{"question": "What does References mean?", "answer": "References to other Nostr notes, articles or profiles must be made according toNIP-27, i.e. by usingNIP-21nostr:...links and optionally adding tags for these (see example below)."}
{"question": "What does Example Event mean?", "answer": "json\n{\n\"kind\": 30023,\n\"created_at\": 1675642635,\n\"content\": \"Lorem [ipsum][nostr:nevent1qqst8cujky046negxgwwm5ynqwn53t8aqjr6afd8g59nfqwxpdhylpcpzamhxue69uhhyetvv9ujuetcv9khqmr99e3k7mg8arnc9] dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\\n\\nRead more at nostr:naddr1qqzkjurnw4ksz9thwden5te0wfjkccte9ehx7um5wghx7un8qgs2d90kkcq3nk2jry62dyf50k0h36rhpdtd594my40w9pkal876jxgrqsqqqa28pccpzu.\",\n\"tags\": [\n[\"d\", \"lorem-ipsum\"],\n[\"title\", \"Lorem Ipsum\"],\n[\"published_at\", \"1296962229\"],\n[\"t\", \"placeholder\"],\n[\"e\", \"b3e392b11f5d4f28321cedd09303a748acfd0487aea5a7450b3481c60b6e4f87\", \"wss://relay.example.com\"],\n[\"a\", \"30023:a695f6b60119d9521934a691347d9f78e8770b56da16bb255ee286ddf9fda919:ipsum\", \"wss://relay.nostr.org\"]\n],\n\"pubkey\": \"...\",\n\"id\": \"...\"\n}"}
{"question": "What does Replies & Comments mean?", "answer": "Replies tokind 30023MUST useNIP-22kind 1111comments."}
{"question": "What does Extra metadata fields and tags mean?", "answer": "draftoptional\n\nThis NIP keeps track of extra optional fields that can added to events which are not defined anywhere else but have becomede factostandards and other minor implementation possibilities that do not deserve their own NIP and do not have a place in other NIPs."}
{"question": "What does kind 0 mean?", "answer": "These are extra fields not specified in NIP-01 that may be present in the stringified JSON of metadata events:\n\n- display_name: an alternative, bigger name with richer characters thanname.nameshould always be set regardless of the presence ofdisplay_namein the metadata.\n- website: a web URL related in any way to the event author.\n- banner: an URL to a wide (~1024x768) picture to be optionally displayed in the background of a profile screen.\n- bot: a boolean to clarify that the content is entirely or partially the result of automation, such as with chatbots or newsfeeds.\n- birthday: an object representing the author's birth date. The format is { \"year\": number, \"month\": number, \"day\": number }. Each field MAY be omitted."}
{"question": "What does Deprecated fields mean?", "answer": "These are fields that should be ignored or removed when found in the wild:\n\n- displayName: usedisplay_nameinstead.\n- username: usenameinstead."}
{"question": "What does kind 3 mean?", "answer": "These are extra fields not specified in NIP-02 that may be present in the stringified JSON of follow events:"}
{"question": "What does tags mean?", "answer": "These tags may be present in multiple event kinds. Whenever a different meaning is not specified by some more specific NIP, they have the following meanings:\n\n- r: a web URL the event is referring to in some way.\n- i: an external id the event is referring to in some way - seeNIP-73.\n- title: name ofNIP-51sets,NIP-52calendar event,NIP-53live event orNIP-99listing.\n- t: a hashtag. The value MUST be a lowercase string."}
{"question": "What does Reactions mean?", "answer": "draftoptional\n\nA reaction is akind 7event that is used to indicate user reactions to other events. A\nreaction'scontentfield MUST include user-generated-content indicating the value of the\nreaction (conventionally+,-, or an emoji).\n\nA reaction withcontentset to+or an empty string MUST be interpreted as a \"like\" or \"upvote\".\nA reaction withcontentset to-MUST be interpreted as a \"dislike\" or \"downvote\".\n\nA reaction withcontentset to an emoji orNIP-30custom emoji SHOULD NOT be interpreted\nas a \"like\" or \"dislike\". Clients MAY instead display this emoji reaction on the post."}
{"question": "What does Reactions to a website mean?", "answer": "If the target of the reaction is a website, the reaction MUST be akind 17event and MUST include anrtag with the website's URL.\n\njsonc\n{\n\"kind\": 17,\n\"content\": \"⭐\",\n\"tags\": [\n[\"r\", \"https://example.com/\"]\n],\n// other fields...\n}\n\nURLs SHOULD benormalized, so that reactions to the same website are not omitted from queries.\nA fragment MAY be attached to the URL, to react to a section of the page.\nIt should be noted that a URL with a fragment is not considered to be the same URL as the original."}
{"question": "What does Custom Emoji Reaction mean?", "answer": "The client may specify a custom emoji (NIP-30):shortcode:in the\nreaction content. The client should refer to the emoji tag and render the\ncontent as an emoji if shortcode is specified.\n\njsonc\n{\n\"kind\": 7,\n\"content\": \":soapbox:\",\n\"tags\": [\n[\"emoji\", \"soapbox\", \"https://gleasonator.com/emoji/Gleasonator/soapbox.png\"]\n],\n// other fields...\n}\n\nThe content can be set only one:shortcode:. And emoji tag should be one."}
{"question": "What does Delegated Event Signing mean?", "answer": "draftoptional\n\nThis NIP defines how events can be delegated so that they can be signed by other keypairs.\n\nAnother application of this proposal is to abstract away the use of the 'root' keypairs when interacting with clients. For example, a user could generate new keypairs for each client they wish to use and authorize those keypairs to generate events on behalf of their root pubkey, where the root keypair is stored in cold storage."}
{"question": "What does Introducing the 'delegation' tag mean?", "answer": "This NIP introduces a new tag:delegationwhich is formatted as follows:\n\njson\n[\n\"delegation\",\n<pubkey of the delegator>,\n<conditions query string>,\n<delegation token: 64-byte Schnorr signature of the sha256 hash of the delegation string>\n]"}
{"question": "What does Delegation Token mean?", "answer": "Thedelegation tokenshould be a 64-byte Schnorr signature of the sha256 hash of the following string:\n\nnostr:delegation:<pubkey of publisher (delegatee)>:<conditions query string>"}
{"question": "What does Conditions Query String mean?", "answer": "The following fields and operators are supported in the above query string:\n\nFields:\n1.kind-Operators:\n-=${KIND_NUMBER}- delegatee may only sign events of this kind\n2.created_at-Operators:\n-<${TIMESTAMP}- delegatee may only sign events createdbeforethe specified timestamp\n->${TIMESTAMP}- delegatee may only sign events createdafterthe specified timestamp\n\nIn order to create a single condition, you must use a supported field and operator. Multiple conditions can be used in a single query string, including on the same field. Conditions must be combined with&.\n\nFor example, the following condition strings are valid:\n\n- kind=1&created_at<1675721813\n- kind=0&kind=1&created_at>1675721813\n- kind=1&created_at>1674777689&created_at<1675721813\n\nFor the vast majority of use-cases, it is advisable that:\n1. Query strings should include acreated_ataftercondition reflecting the current time, to prevent the delegatee from publishing historic notes on the delegator's behalf.\n2. Query strings should include acreated_atbeforecondition that is not empty and is not some extremely distant time in the future. If delegations are not limited in time scope, they expose similar security risks to simply using the root key for authentication."}
{"question": "What does Delegator: mean?", "answer": "privkey: ee35e8bb71131c02c1d7e73231daa48e9953d329a4b701f7133c8f46dd21139c\npubkey:  8e0d3d3eb2881ec137a11debe736a9086715a8c8beeeda615780064d68bc25dd"}
{"question": "What does Delegatee: mean?", "answer": "privkey: 777e4f60b4aa87937e13acc84f7abcc3c93cc035cb4c1e9f7a9086dd78fffce1\npubkey:  477318cfb5427b9cfc66a9fa376150c1ddbc62115ae27cef72417eb959691396\n```\n\nDelegation string to grant note publishing authorization to the delegatee (477318cf) from now, for the next 30 days, given the current timestamp is1674834236.json\nnostr:delegation:477318cfb5427b9cfc66a9fa376150c1ddbc62115ae27cef72417eb959691396:kind=1&created_at>1674834236&created_at<1677426236\n\nThe delegator (8e0d3d3e) then signs a SHA256 hash of the above delegation string, the result of which is the delegation token:6f44d7fe4f1c09f3954640fb58bd12bae8bb8ff4120853c4693106c82e920e2b898f1f9ba9bd65449a987c39c0423426ab7b53910c0c6abfb41b30bc16e5f524\n\nThe delegatee (477318cf) can now construct an event on behalf of the delegator (8e0d3d3e). The delegatee then signs the event with its own private key and publishes.json\n{\n\"id\": \"e93c6095c3db1c31d15ac771f8fc5fb672f6e52cd25505099f62cd055523224f\",\n\"pubkey\": \"477318cfb5427b9cfc66a9fa376150c1ddbc62115ae27cef72417eb959691396\",\n\"created_at\": 1677426298,\n\"kind\": 1,\n\"tags\": [\n[\n\"delegation\",\n\"8e0d3d3eb2881ec137a11debe736a9086715a8c8beeeda615780064d68bc25dd\",\n\"kind=1&created_at>1674834236&created_at<1677426236\",\n\"6f44d7fe4f1c09f3954640fb58bd12bae8bb8ff4120853c4693106c82e920e2b898f1f9ba9bd65449a987c39c0423426ab7b53910c0c6abfb41b30bc16e5f524\"\n]\n],\n\"content\": \"Hello, world!\",\n\"sig\": \"633db60e2e7082c13a47a6b19d663d45b2a2ebdeaf0b4c35ef83be2738030c54fc7fd56d139652937cdca875ee61b51904a1d0d0588a6acd6168d7be2909d693\"\n}\n\nThe event should be considered a valid delegation if the conditions are satisfied (kind=1,created_at>1674834236andcreated_at<1677426236in this example) and, upon validation of the delegation token, are found to be unchanged from the conditions in the original delegation string.\n\nClients should display the delegated note as if it was published directly by the delegator (8e0d3d3e)."}
{"question": "What does Relay & Client Support mean?", "answer": "Relays should answer requests such as[\"REQ\", \"\", {\"authors\": [\"A\"]}]by querying both thepubkeyand delegation tags[1]value.\n\nRelays SHOULD allow the delegator (8e0d3d3e) to delete the events published by the delegatee (477318cf)."}
{"question": "What does Text Note References mean?", "answer": "draftoptional\n\nThis document standardizes the treatment given by clients of inline references of other events and profiles inside the.contentof any event that has readable text in its.content(such as kinds 1 and 30023).\n\nWhen creating an event, clients should include mentions to other profiles and to other events in the middle of the.contentusingNIP-21codes, such asnostr:nprofile1qqsw3dy8cpu...6x2argwghx6egsqstvg.\n\nIncludingNIP-18's quote tags ([\"q\", \"<event-id> or <event-address>\", \"<relay-url>\", \"<pubkey-if-a-regular-event>\"]) for each reference is optional, clients should do it whenever they want the profile being mentioned to be notified of the mention, or when they want the referenced event to recognize their mention as a reply.\n\nA reader client that receives an event with suchnostr:...mentions in its.contentcan do any desired context augmentation (for example, linking to the profile or showing a preview of the mentioned event contents) it wants in the process. If turning such mentions into links, they could become internal links,NIP-21links or direct links to web clients that will handle these references."}
{"question": "What does Example of a profile mention process mean?", "answer": "Suppose Bob is writing a note in a client that has search-and-autocomplete functionality for users that is triggered when they write the character@.\n\nAs Bob types\"hello @mat\"the client will prompt him to autocomplete withmattn's profile, showing a picture and name.\n\nBob presses \"enter\" and now he sees his typed note as\"hello @mattn\",@mattnis highlighted, indicating that it is a mention. Internally, however, the event looks like this:\n\njson\n{\n\"content\": \"hello nostr:nprofile1qqszclxx9f5haga8sfjjrulaxncvkfekj097t6f3pu65f86rvg49ehqj6f9dh\",\n\"created_at\": 1679790774,\n\"id\": \"f39e9b451a73d62abc5016cffdd294b1a904e2f34536a208874fe5e22bbd47cf\",\n\"kind\": 1,\n\"pubkey\": \"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\n\"sig\": \"f8c8bab1b90cc3d2ae1ad999e6af8af449ad8bb4edf64807386493163e29162b5852a796a8f474d6b1001cddbaac0de4392838574f5366f03cc94cf5dfb43f4d\",\n\"tags\": [\n[\n\"p\",\n\"2c7cc62a697ea3a7826521f3fd34f0cb273693cbe5e9310f35449f43622a5cdc\"\n]\n]\n}\n\n(Alternatively, the mention could have been anostr:npub1...URL.)\n\nAfter Bob publishes this event and Carol sees it, her client will initially display the.contentas it is, but later it will parse the.contentand see that there is anostr:URL in there, decode it, extract the public key from it (and possibly relay hints), fetch that profile from its internal database or relays, then replace the full URL with the name@mattn, with a link to the internal page view for that profile."}
{"question": "What does Verbose and probably unnecessary considerations mean?", "answer": "- The example above was very concrete, but it doesn't mean all clients have to implement the same flow. There could be clients that do not support autocomplete at all, so they just allow users to paste rawNIP-19codes into the body of text, then prefix these withnostr:before publishing the event.\n- The flow for referencing other events is similar: a user could paste anote1...ornevent1...code and the client will turn that into anostr:note1...ornostr:nevent1...URL. Then upon reading such references the client may show the referenced note in a preview box or something like that -- or nothing at all.\n- Other display procedures can be employed: for example, if a client that is designed for dealing with onlykind:1text notes sees, for example, akind:30023nostr:naddr1...URL reference in the.content, it can, for example, decide to turn that into a link to some hardcoded webapp capable of displaying such events.\n- Clients may give the user the option to include or not include tags for mentioned events or profiles. If someone wants to mentionmattnwithout notifying them, but still have a nice augmentable/clickable link to their profile inside their note, they can instruct their client tonotcreate a[\"p\", ...]tag for that specific mention.\n- In the same way, if someone wants to reference another note but their reference is not meant to show up along other replies to that same note, their client can choose to not include a corresponding[\"e\", ...]tag for any givennostr:nevent1...URL inside.content. Clients may decide to expose these advanced functionalities to users or be more opinionated about things."}
{"question": "What does Public Chat mean?", "answer": "draftoptional\n\nThis NIP defines new event kinds for public chat channels, channel messages, and basic client-side moderation.\n\nIt reserves five event kinds (40-44) for immediate use:\n\n- 40 - channel create\n- 41 - channel metadata\n- 42 - channel message\n- 43 - hide message\n- 44 - mute user\n\nClient-centric moderation gives client developers discretion over what types of content they want included in their apps, while imposing no additional requirements on relays."}
{"question": "What does Kind 40: Create channel mean?", "answer": "Create a public chat channel.\n\nIn the channel creationcontentfield, Client SHOULD include basic channel metadata (name,about,pictureandrelaysas specified in kind 41).\n\njsonc\n{\n\"content\": \"{\\\"name\\\": \\\"Demo Channel\\\", \\\"about\\\": \\\"A test channel.\\\", \\\"picture\\\": \\\"https://placekitten.com/200/200\\\", \\\"relays\\\": [\\\"wss://nos.lol\\\", \\\"wss://nostr.mom\\\"]}\",\n// other fields...\n}"}
{"question": "What does Kind 41: Set channel metadata mean?", "answer": "Update a channel's public metadata.\n\nKind 41 is used to update the metadata without modifying the event id for the channel. Only the most recent kind 41 peretag value MAY be available.\n\nClients SHOULD ignore kind 41s from pubkeys other than the kind 40 pubkey.\n\nClients SHOULD support basic metadata fields:\n\n- name- string - Channel name\n- about- string - Channel description\n- picture- string - URL of channel picture\n- relays- array - List of relays to download and broadcast events to\n\nClients MAY add additional metadata fields.\n\nClients SHOULD useNIP-10marked \"e\" tags to recommend a relay.\n\nIt is also possible to set the category name using the \"t\" tag. This category name can be searched and filtered.\n\njsonc\n{\n\"content\": \"{\\\"name\\\": \\\"Updated Demo Channel\\\", \\\"about\\\": \\\"Updating a test channel.\\\", \\\"picture\\\": \\\"https://placekitten.com/201/201\\\", \\\"relays\\\": [\\\"wss://nos.lol\\\", \\\"wss://nostr.mom\\\"]}\",\n\"tags\": [\n[\"e\", <channel_create_event_id>, <relay-url>, \"root\"],\n[\"t\", <category_name-1>],\n[\"t\", <category_name-2>],\n[\"t\", <category_name-3>],\n],\n// other fields...\n}"}
{"question": "What does Kind 42: Create channel message mean?", "answer": "Send a text message to a channel.\n\nClients SHOULD useNIP-10marked \"e\" tags to recommend a relay and specify whether it is a reply or root message.\n\nClients SHOULD appendNIP-10\"p\" tags to replies.\n\nRoot message:\n\njsonc\n{\n\"content\": <string>,\n\"tags\": [[\"e\", <kind_40_event_id>, <relay-url>, \"root\"]],\n// other fields...\n}\n\nReply to another message:\n\njsonc\n{\n\"content\": <string>,\n\"tags\": [\n[\"e\", <kind_40_event_id>, <relay-url>, \"root\"],\n[\"e\", <kind_42_event_id>, <relay-url>, \"reply\"],\n[\"p\", <pubkey>, <relay-url>],\n// rest of tags...\n],\n// other fields...\n}"}
{"question": "What does Kind 43: Hide message mean?", "answer": "User no longer wants to see a certain message.\n\nThecontentmay optionally include metadata such as areason.\n\nClients SHOULD hide event 42s shown to a given user, if there is an event 43 from that user matching the event 42id.\n\nClients MAY hide event 42s for other users other than the user who sent the event 43.\n\n(For example, if three users 'hide' an event giving a reason that includes the word 'pornography', a Nostr client that is an iOS app may choose to hide that message for all iOS clients.)\n\njsonc\n{\n\"content\": \"{\\\"reason\\\": \\\"Dick pic\\\"}\",\n\"tags\": [[\"e\", <kind_42_event_id>]],\n// other fields...\n}"}
{"question": "What does Kind 44: Mute user mean?", "answer": "User no longer wants to see messages from another user.\n\nThecontentmay optionally include metadata such as areason.\n\nClients SHOULD hide event 42s shown to a given user, if there is an event 44 from that user matching the event 42pubkey.\n\nClients MAY hide event 42s for users other than the user who sent the event 44.\n\njsonc\n{\n\"content\": \"{\\\"reason\\\": \\\"Posting dick pics\\\"}\",\n\"tags\": [[\"p\", <pubkey>]],\n// other fields...\n}"}
{"question": "What does Relay recommendations mean?", "answer": "Clients SHOULD use the relay URLs of the metadata events.\n\nClients MAY use any relay URL. For example, if a relay hosting the original kind 40 event for a channel goes offline, clients could instead fetch channel data from a backup relay, or a relay that clients trust more than the original relay."}
{"question": "What does Motivation mean?", "answer": "If we're solving censorship-resistant communication for social media, we may as well solve it also for Telegram-style messaging.\n\nWe can bring the global conversation out from walled gardens into a true public square open to all."}
{"question": "What does Additional info mean?", "answer": "- Chat demo PR with fiatjaf+jb55 comments\n- Conversation about NIP16"}
{"question": "What does Relay-based Groups mean?", "answer": "draftoptional\n\nThis NIP defines a standard for groups that are only writable by a closed set of users. They can be public for reading by external users or not.\n\nGroups are identified by a random string of any length that serves as anid.\n\nThere is no way to create a group, what happens is just that relays (most likely when asked by users) will create rules around some specific ids so these ids can serve as an actual group, henceforth messages sent to that group will be subject to these rules.\n\nNormally a group will originally belong to one specific relay, but the community may choose to move the group to other relays or even fork the group so it exists in different forms -- still using the sameid-- across different relays."}
{"question": "What does Relay-generated events mean?", "answer": "Relays are supposed to generate the events that describe group metadata and group admins. These areaddressableevents signed by the relay keypair directly, with the groupidas thedtag."}
{"question": "What does Group identifier mean?", "answer": "A group may be identified by a string in the format<host>'<group-id>. For example, a group withidabcdefhosted at the relaywss://groups.nostr.comwould be identified by the stringgroups.nostr.com'abcdef.\n\nGroup identifiers must be strings restricted to the charactersa-z0-9-_, and SHOULD be random in order to avoid name collisions.\n\nWhen encountering just the<host>without the'<group-id>, clients MAY infer_as the group id, which is a special top-level group dedicated to relay-local discussions."}
{"question": "What does Thehtag mean?", "answer": "Events sent by users to groups (chat messages, text notes, moderation events etc) MUST have anhtag with the value set to the groupid."}
{"question": "What does Timeline references mean?", "answer": "In order to not be used out of context, events sent to these groups may contain references to previous events seen from the same relay in theprevioustag. The choice of which previous events to pick belongs to the clients. The references are to be made using the first 8 characters (4 bytes) of any event in the last 50 events seen by the user in the relay, excluding events by themselves. There can be any number of references (including zero), but it's recommended that clients include at least 3 and that relays enforce this.\n\nThis is a hack to prevent messages from being broadcasted to external relays that have forks of one group out of context. Relays are expected to reject any events that contain timeline references to events not found in their own database. Clients should also check these to keep relays honest about them."}
{"question": "What does Late publication mean?", "answer": "Relays should prevent late publication (messages published now with a timestamp from days or even hours ago) unless they are open to receive a group forked or moved from another relay."}
{"question": "What does Group management mean?", "answer": "Groups can have any number of users with elevated access. These users are identified by role labels which are arbitrarily defined by the relays (see also the description ofkind:39003). What each role is capable of not defined in this NIP either, it's a relay policy that can vary. Roles can be assigned by other users (as long as they have the capability to add roles) by publishing akind:9000event with that user's pubkey in aptag and the roles afterwards (even if the user is already a group member akind:9000can be issued and the user roles must just be updated).\n\nThe roles supported by the group as to having some special privilege assigned to them should be accessible on the eventkind:39003, but the relay may also accept other role names, arbitrarily defined by clients, and just not do anything with them.\n\nUsers with any roles that have any privilege can be consideredadminsin a broad sense and be returned in thekind:39001event for a group."}
{"question": "What does Unmanaged groups mean?", "answer": "Unmanaged groups are impromptu groups that can be used in any public relay unaware of NIP-29 specifics. They piggyback on relays' natural white/blacklists (or lack of) but aside from that are not actively managed and won't have any admins, group state or metadata events.\n\nInunmanagedgroups, everybody is considered to be a member.\n\nUnmanaged groups can transition to managed groups, in that case the relay master key just has to publish moderation events setting the state of all groups and start enforcing the rules they choose to."}
{"question": "What does Event definitions mean?", "answer": "These are the events expected to be found in NIP-29 groups."}
{"question": "What does Normal user-created events mean?", "answer": "Groups may accept any event kind, including chats, threads, long-form articles, calendar, livestreams, market announcements and so on. These should be as defined in their respective NIPs, with the addition of thehtag."}
{"question": "What does User-related group management events mean?", "answer": "These are events that can be sent by users to manage their situation in a group, they also require thehtag.\n\n- join request(kind:9021)\n\nAny user can send a kind9021event to the relay in order to request admission to the group. Relays MUST reject the request if the user has not been added to the group. The accompanying error message SHOULD explain whether the rejection is final, if the request is pending review, or if some other special handling is relevant (e.g. if payment is required). If a user is already a member, the event MUST be rejected withduplicate:as the error message prefix.\n\njson\n{\n\"kind\": 9021,\n\"content\": \"optional reason\",\n\"tags\": [\n[\"h\", \"<group-id>\"],\n[\"code\", \"<optional-invite-code>\"]\n]\n}\n\nThe optionalcodetag may be used by the relay to preauthorize acceptances inclosedgroups, together with thekind:9009create-invitemoderation event.\n\n- leave request(kind:9022)\n\nAny user can send one of these events to the relay in order to be automatically removed from the group. The relay will automatically issue akind:9001in response removing this user.\n\njson\n{\n\"kind\": 9022,\n\"content\": \"optional reason\",\n\"tags\": [\n[\"h\", \"<group-id>\"]\n]\n}"}
{"question": "What does Group state -- or moderation mean?", "answer": "These are events expected to be sent by the relay master key or by group admins -- and relays should reject them if they don't come from an authorized admin. They also require thehtag.\n\n- moderation events(kinds:9000-9020) (optional)\n\nClients can send these events to a relay in order to accomplish a moderation action. Relays must check if the pubkey sending the event is capable of performing the given action based on its role and the relay's internal policy (see also the description ofkind:39003).\n\njsonc\n{\n\"kind\": 90xx,\n\"content\": \"optional reason\",\n\"tags\": [\n[\"h\", \"<group-id>\"],\n[\"previous\", /*...*/]\n]\n}\n\nEach moderation action uses a different kind and requires different arguments, which are given as tags. These are defined in the following table:\n\n| kind | name                | tags                                           |\n| ---  | ---                 | ---                                            |\n| 9000 |put-user|pwith pubkey hex and optional roles         |\n| 9001 |remove-user|pwith pubkey hex                            |\n| 9002 |edit-metadata| fields fromkind:39000to be modified        |\n| 9005 |delete-event|ewith event id hex                          |\n| 9007 |create-group|                                                |\n| 9008 |delete-group|                                                |\n| 9009 |create-invite|                                                |\n\nIt's expected that the group state (of who is an allowed member or not, who is an admin and with which permission or not, what are the group name and picture etc) can be fully reconstructed from the canonical sequence of these events."}
{"question": "What does Group metadata events mean?", "answer": "These events contain the group id in adtag instead of thehtag. They MUST be created by the relay master key only and a single instance of each (or none) should exist at all times for each group. They are merely informative but should reflect the latest group state (as it was changed by moderation events over time).\n\n- group metadata(kind:39000) (optional)\n\nThis event defines the metadata for the group -- basically how clients should display it. It must be generated and signed by the relay in which is found. Relays shouldn't accept these events if they're signed by anyone else.\n\nIf the group is forked and hosted in multiple relays, there will be multiple versions of this event in each different relay and so on.\n\nWhen this event is not found, clients may still connect to the group, but treat it as having a different status,unmanaged,\n\njsonc\n{\n\"kind\": 39000,\n\"content\": \"\",\n\"tags\": [\n[\"d\", \"<group-id>\"],\n[\"name\", \"Pizza Lovers\"],\n[\"picture\", \"https://pizza.com/pizza.png\"],\n[\"about\", \"a group for people who love pizza\"],\n[\"public\"], // or [\"private\"]\n[\"open\"] // or [\"closed\"]\n]\n// other fields...\n}\n\nname,pictureandaboutare basic metadata for the group for display purposes.publicsignals the group can bereadby anyone, whileprivatesignals that only AUTHed users can read.opensignals that anyone can request to join and the request will be automatically granted, whileclosedsignals that members must be pre-approved or that requests to join will be manually handled.\n\n- group admins(kind:39001) (optional)\n\nEach admin is listed along with one or more roles. These roles SHOULD have a correspondence with the roles supported by the relay, as advertised by thekind:39003event.\n\njsonc\n{\n\"kind\": 39001,\n\"content\": \"list of admins for the pizza lovers group\",\n\"tags\": [\n[\"d\", \"<group-id>\"],\n[\"p\", \"<pubkey1-as-hex>\", \"ceo\"],\n[\"p\", \"<pubkey2-as-hex>\", \"secretary\", \"gardener\"],\n// other pubkeys...\n],\n// other fields...\n}\n\n- group members(kind:39002) (optional)\n\nIt's a list of pubkeys that are members of the group. Relays might choose to not to publish this information, to restrict what pubkeys can fetch it or to only display a subset of the members in it.\n\nClients should not assume this will always be present or that it will contain a full list of members.\n\njsonc\n{\n\"kind\": 39002,\n\"content\": \"list of members for the pizza lovers group\",\n\"tags\": [\n[\"d\", \"<group-id>\"],\n[\"p\", \"<admin1>\"],\n[\"p\", \"<member-pubkey1>\"],\n[\"p\", \"<member-pubkey2>\"],\n// other pubkeys...\n],\n// other fields...\n}\n\n- group roles(kind:39003) (optional)\n\nThis is an event that MAY be published by the relay informing users and clients about what are the roles supported by this relay according to its internal logic.\n\nFor example, a relay may choose to support the roles\"admin\"and\"moderator\", in which the\"admin\"will be allowed to edit the group metadata, delete messages and remove users from the group, while the\"moderator\"can only delete messages (or the relay may choose to call these roles\"ceo\"and\"secretary\"instead, the exact role name is not relevant).\n\nThe process through which the relay decides what roles to support and how to handle moderation events internally based on them is specific to each relay and not specified here.\n\njsonc\n{\n\"kind\": 39003,\n\"content\": \"list of roles supported by this group\",\n\"tags\": [\n[\"d\", \"<group-id>\"],\n[\"role\", \"<role-name>\", \"<optional-description>\"],\n[\"role\", \"<role-name>\", \"<optional-description>\"],\n// other roles...\n],\n// other fields...\n}"}
{"question": "What does Checking your own membership in a group mean?", "answer": "The latest of eitherkind:9000orkind:9001events present in a group should tell a user that they are currently members of the group or if they were removed. In case none of these exist the user is assumed to not be a member of the group -- unless the group isunmanaged, in which case the user is assumed to be a member."}
{"question": "What does Adding yourself to a group mean?", "answer": "When a group isopen, anyone can send akind:9021event to it in order to be added, then expect akind:9000event to be emitted confirming that the user was added. The same happens withclosedgroups, except in that case a user may only send akind:9021if it has an invite code."}
{"question": "What does Storing your list of groups mean?", "answer": "A definition forkind:10009was included inNIP-51that allows clients to store the list of groups a user wants to remember being in."}
{"question": "What does Usingunmanagedrelays mean?", "answer": "To prevent event leakage, when usingunmanagedrelays, clients should include theNIP-70-tag, as just theprevioustag won't be checked by otherunmanagedrelays.\n\nGroups MAY be named without relay support by adding anameto the corresponding tag in a user'skind 10009group list."}
{"question": "What does Custom Emoji mean?", "answer": "draftoptional\n\nCustom emoji may be added tokind 0,kind 1,kind 7(NIP-25) andkind 30315(NIP-38) events by including one or more\"emoji\"tags, in the form:\n\n[\"emoji\", <shortcode>, <image-url>]\n\nWhere:\n\n- <shortcode>is a name given for the emoji, which MUST be comprised of only alphanumeric characters and underscores.\n- <image-url>is a URL to the corresponding image file of the emoji.\n\nFor each emoji tag, clients should parse emoji shortcodes (aka \"emojify\") like:shortcode:in the event to display custom emoji.\n\nClients may allow users to add custom emoji to an event by including:shortcode:identifier in the event, and adding the relevant\"emoji\"tags."}
{"question": "What does Kind 0 events mean?", "answer": "In kind 0 events, thenameandaboutfields should be emojified.\n\njson\n{\n\"kind\": 0,\n\"content\": \"{\\\"name\\\":\\\"Alex Gleason :soapbox:\\\"}\",\n\"tags\": [\n[\"emoji\", \"soapbox\", \"https://gleasonator.com/emoji/Gleasonator/soapbox.png\"]\n],\n\"pubkey\": \"79c2cae114ea28a981e7559b4fe7854a473521a8d22a66bbab9fa248eb820ff6\",\n\"created_at\": 1682790000\n}"}
{"question": "What does Kind 1 events mean?", "answer": "In kind 1 events, thecontentshould be emojified.\n\njson\n{\n\"kind\": 1,\n\"content\": \"Hello :gleasonator: 😂 :ablobcatrainbow: :disputed: yolo\",\n\"tags\": [\n[\"emoji\", \"ablobcatrainbow\", \"https://gleasonator.com/emoji/blobcat/ablobcatrainbow.png\"],\n[\"emoji\", \"disputed\", \"https://gleasonator.com/emoji/Fun/disputed.png\"],\n[\"emoji\", \"gleasonator\", \"https://gleasonator.com/emoji/Gleasonator/gleasonator.png\"]\n],\n\"pubkey\": \"79c2cae114ea28a981e7559b4fe7854a473521a8d22a66bbab9fa248eb820ff6\",\n\"created_at\": 1682630000\n}"}
{"question": "What does Kind 7 events mean?", "answer": "In kind 7 events, thecontentshould be emojified.\n\njson\n{\n\"kind\": 7,\n\"content\": \":dezh:\",\n\"tags\": [\n[\"emoji\", \"dezh\", \"https://raw.githubusercontent.com/dezh-tech/brand-assets/main/dezh/logo/black-normal.svg\"]\n],\n\"pubkey\": \"79c2cae114ea28a981e7559b4fe7854a473521a8d22a66bbab9fa248eb820ff6\",\n\"created_at\": 1682630000\n}"}
{"question": "What does Dealing with unknown event kinds mean?", "answer": "draftoptional\n\nWhen creating a new custom event kind that is part of a custom protocol and isn't meant to be read as text (likekind:1), clients should use analttag to write a short human-readable plaintext summary of what that event is about.\n\nThe intent is that social clients, used to display onlykind:1notes, can still show something in case a custom event pops up in their timelines. The content of thealttag should provide enough context for a user that doesn't know anything about this event kind to understand what it is.\n\nThese clients that only knowkind:1are not expected to ask relays for events of different kinds, but users could still reference these weird events on their notes, and without proper context these could be nonsensical notes. Having the fallback text makes that situation much better -- even if only for making the user aware that they should try to view that custom event elsewhere.\n\nkind:1-centric clients can make interacting with these event kinds more functional by supportingNIP-89."}
{"question": "What does Labeling mean?", "answer": "draftoptional\n\nThis NIP defines two new indexable tags to label events and a new event kind (kind:1985) to attach those labels to existing events. This supports several use cases, including distributed moderation, collection management, license assignment, and content classification.\n\nNew Tags:\n\n- Ldenotes a label namespace\n- ldenotes a label"}
{"question": "What does Label Namespace Tag mean?", "answer": "AnLtag can be any string, but publishers SHOULD ensure they are unambiguous by using a well-defined namespace\n(such as an ISO standard) or reverse domain name notation.\n\nLtags are RECOMMENDED in order to support searching by namespace rather than by a specific tag. The specialugc(\"user generated content\") namespace MAY be used when the label content is provided by an end user.\n\nLtags starting with#indicate that the label target should be associated with the label's value.\nThis is a way of attaching standard nostr tags to events, pubkeys, relays, urls, etc."}
{"question": "What does Label Tag mean?", "answer": "Anltag's value can be any string. If using anLtag,ltags MUST include a mark matching anLtag value in the same event. If noLtag is included, a mark SHOULD still be included. If none is\nincluded,ugcis implied."}
{"question": "What does Label Target mean?", "answer": "The label event MUST include one or more tags representing the object or objects being\nlabeled:e,p,a,r, orttags. This allows for labeling of events, people, relays,\nor topics respectively. As with NIP-01, a relay hint SHOULD be included when usingeandptags."}
{"question": "What does Content mean?", "answer": "Labels should be short, meaningful strings. Longer discussions, such as for an\nexplanation of why something was labeled the way it was, should go in the event'scontentfield."}
{"question": "What does Self-Reporting mean?", "answer": "landLtags MAY be added to other event kinds to support self-reporting. For events\nwith a kind other than 1985, labels refer to the event itself."}
{"question": "What does Example events mean?", "answer": "A suggestion that multiple pubkeys be associated with thepermiestopic.\n\njsonc\n{\n\"kind\": 1985,\n\"tags\": [\n[\"L\", \"#t\"],\n[\"l\", \"permies\", \"#t\"],\n[\"p\", <pubkey1>, <relay_url>],\n[\"p\", <pubkey2>, <relay_url>]\n],\n// other fields...\n}\n\nA report flagging violence toward a human being as defined by ontology.example.com.\n\njsonc\n{\n\"kind\": 1985,\n\"tags\": [\n[\"L\", \"com.example.ontology\"],\n[\"l\", \"VI-hum\", \"com.example.ontology\"],\n[\"p\", <pubkey1>, <relay_url>],\n[\"p\", <pubkey2>, <relay_url>]\n],\n// other fields...\n}\n\nA moderation suggestion for a chat event.\n\njsonc\n{\n\"kind\": 1985,\n\"tags\": [\n[\"L\", \"nip28.moderation\"],\n[\"l\", \"approve\", \"nip28.moderation\"],\n[\"e\", <kind40_event_id>, <relay_url>]\n],\n// other fields...\n}\n\nAssignment of a license to an event.\n\njsonc\n{\n\"kind\": 1985,\n\"tags\": [\n[\"L\", \"license\"],\n[\"l\", \"MIT\", \"license\"],\n[\"e\", <event_id>, <relay_url>]\n],\n// other fields...\n}\n\nPublishers can self-label by addingltags to their own non-1985 events. In this case, the kind 1 event's author\nis labeling their note as being related to Milan, Italy using ISO 3166-2.\n\njsonc\n{\n\"kind\": 1,\n\"tags\": [\n[\"L\", \"ISO-3166-2\"],\n[\"l\", \"IT-MI\", \"ISO-3166-2\"]\n],\n\"content\": \"It's beautiful here in Milan!\",\n// other fields...\n}\n\nAuthor is labeling their note language as English using ISO-639-1.\n\njsonc\n{\n\"kind\": 1,\n\"tags\": [\n[\"L\", \"ISO-639-1\"],\n[\"l\", \"en\", \"ISO-639-1\"]\n],\n\"content\": \"English text\",\n// other fields...\n}"}
{"question": "What does Other Notes mean?", "answer": "When using this NIP to bulk-label many targets at once, events may be requested for deletion usingNIP-09and a replacement\nmay be published. We have opted not to use addressable/replaceable events for this due to the\ncomplexity in coming up with a standarddtag. In order to avoid ambiguity when querying,\npublishers SHOULD limit labeling events to a single namespace.\n\nBefore creating a vocabulary, explore how your use case may have already been designed and\nimitate that design if possible. Reverse domain name notation is encouraged to avoid\nnamespace clashes, but for the sake of interoperability all namespaces should be\nconsidered open for public use, and not proprietary. In other words, if there is a\nnamespace that fits your use case, use it even if it points to someone else's domain name.\n\nVocabularies MAY choose to fully qualify all labels within a namespace (for example,[\"l\", \"com.example.vocabulary:my-label\"]). This may be preferred when defining more\nformal vocabularies that should not be confused with another namespace when querying\nwithout anLtag. For these vocabularies, all labels SHOULD include the namespace\n(rather than mixing qualified and unqualified labels).\n\nA good heuristic for whether a use case fits this NIP is whether labels would ever be unique.\nFor example, many events might be labeled with a particular place, topic, or pubkey, but labels\nwith specific values like \"John Doe\" or \"3.18743\" are not labels, they are values, and should\nbe handled in some other way."}
{"question": "What does Appendix: Known Ontologies mean?", "answer": "Below is a non-exhaustive list of ontologies currently in widespread use.\n\n- social ontology categories"}
{"question": "What does Parameterized Replaceable Events mean?", "answer": "finalmandatory\n\nRenamed to \"Addressable events\" and moved toNIP-01."}
{"question": "What does gitstuff mean?", "answer": "draftoptional\n\nThis NIP defines all the ways code collaboration using and adjacent togitcan be done using Nostr."}
{"question": "What does Repository announcements mean?", "answer": "Git repositories are hosted in Git-enabled servers, but their existence can be announced using Nostr events, as well as their willingness to receive patches, bug reports and comments in general.\n\njsonc\n{\n\"kind\": 30617,\n\"content\": \"\",\n\"tags\": [\n[\"d\", \"<repo-id>\"], // usually kebab-case short name\n[\"name\", \"<human-readable project name>\"],\n[\"description\", \"brief human-readable project description>\"],\n[\"web\", \"<url for browsing>\", ...], // a webpage url, if the git server being used provides such a thing\n[\"clone\", \"<url for git-cloning>\", ...], // a url to be given to `git clone` so anyone can clone it\n[\"relays\", \"<relay-url>\", ...], // relays that this repository will monitor for patches and issues\n[\"r\", \"<earliest-unique-commit-id>\", \"euc\"],\n[\"maintainers\", \"<other-recognized-maintainer>\", ...],\n[\"t\", \"<arbitrary string>\"], // hashtags labelling the repository\n]\n}\n\nThe tagsweb,clone,relays,maintainerscan have multiple values.\n\nThertag annotated with the\"euc\"marker should be the commit ID of the earliest unique commit of this repo, made to identify it among forks and group it with other repositories hosted elsewhere that may represent essentially the same project. In most cases it will be the root commit of a repository. In case of a permanent fork between two projects, then the first commit after the fork should be used.\n\nExceptd, all tags are optional."}
{"question": "What does Repository state announcements mean?", "answer": "An optional source of truth for the state of branches and tags in a repository.\n\njsonc\n{\n\"kind\": 30618,\n\"content\": \"\",\n\"tags\": [\n[\"d\", \"<repo-id>\"], // matches the identifier in the coresponding repository announcement\n[\"refs/<heads|tags>/<branch-or-tag-name>\",\"<commit-id>\"]\n[\"HEAD\", \"ref: refs/heads/<branch-name>\"]\n]\n}\n\nTherefstag may appear multiple times, or none.\n\nIf norefstags are present, the author is no longer tracking repository state using this event. This approach enables the author to restart tracking state at a later time unlikeNIP-09deletion requests.\n\nTherefstag can be optionally extended to enable clients to identify how many commits ahead a ref is:\n\njsonc\n{\n\"tags\": [\n[\"refs/<heads|tags>/<branch-or-tag-name>\", \"<commit-id>\", \"<shorthand-parent-commit-id>\", \"<shorthand-grandparent>\", ...],\n]\n}"}
{"question": "What does Patches mean?", "answer": "Patches can be sent by anyone to any repository. Patches to a specific repository SHOULD be sent to the relays specified in that repository's announcement event's\"relays\"tag. Patch events SHOULD include anatag pointing to that repository's announcement address.\n\nPatches in a patch set SHOULD include a NIP-10ereplytag pointing to the previous patch.\n\nThe first patch revision in a patch revision SHOULD include a NIP-10ereplyto the original root patch.\n\n```jsonc\n{\n\"kind\": 1617,\n\"content\": \"\", // contents of\"tags\": [\n[\"a\", \"30617::\"],\n[\"r\", \"\"] // so clients can subscribe to all patches sent to a local git repo\n[\"p\", \"\"],\n[\"p\", \"\"], // optionally send the patch to another user to bring it to their attention\n\n```\n[\"t\", \"root\"], // omitted for additional patches in a series\n// for the first patch in a revision\n[\"t\", \"root-revision\"],\n\n// optional tags for when it is desirable that the merged patch has a stable commit id\n// these fields are necessary for ensuring that the commit resulting from applying a patch\n// has the same id as it had in the proposer's machine -- all these tags can be omitted\n// if the maintainer doesn't care about these things\n[\"commit\", \"<current-commit-id>\"],\n[\"r\", \"<current-commit-id>\"] // so clients can find existing patches for a specific commit\n[\"parent-commit\", \"<parent-commit-id>\"],\n[\"commit-pgp-sig\", \"-----BEGIN PGP SIGNATURE-----...\"], // empty string for unsigned commit\n[\"committer\", \"<name>\", \"<email>\", \"<timestamp>\", \"<timezone offset in minutes>\"],\n```\n\n]\n}\n```\n\nThe first patch in a series MAY be a cover letter in the format produced bygit format-patch."}
{"question": "What does Issues mean?", "answer": "Issues are Markdown text that is just human-readable conversational threads related to the repository: bug reports, feature requests, questions or comments of any kind. Like patches, these SHOULD be sent to the relays specified in that repository's announcement event's\"relays\"tag.\n\nIssues may have asubjecttag, which clients can utilize to display a header. Additionally, one or morettags may be included to provide labels for the issue.\n\njson\n{\n\"kind\": 1621,\n\"content\": \"<markdown text>\",\n\"tags\": [\n[\"a\", \"30617:<base-repo-owner-pubkey>:<base-repo-id>\"],\n[\"p\", \"<repository-owner>\"]\n[\"subject\", \"<issue-subject>\"]\n[\"t\", \"<issue-label>\"]\n[\"t\", \"<another-issue-label>\"]\n]\n}"}
{"question": "What does Replies mean?", "answer": "Replies to either akind:1621issueor akind:1617patchevent should followNIP-22 comment."}
{"question": "What does Status mean?", "answer": "Root Patches and Issues have a Status that defaults to 'Open' and can be set by issuing Status events.\n\n```jsonc\n{\n\"kind\": 1630, // Open\n\"kind\": 1631, // Applied / Merged for Patches; Resolved for Issues\n\"kind\": 1632, // Closed\n\"kind\": 1633, // Draft\n\"content\": \"\",\n\"tags\": [\n[\"e\", \"\", \"\", \"root\"],\n[\"e\", \"\", \"\", \"reply\"], // for when revisions applied\n[\"p\", \"\"],\n[\"p\", \"\"],\n[\"p\", \"\"],\n\n```\n// optional for improved subscription filter efficiency\n[\"a\", \"30617:<base-repo-owner-pubkey>:<base-repo-id>\", \"<relay-url>\"],\n[\"r\", \"<earliest-unique-commit-id-of-repo>\"]\n\n// optional for `1631` status\n[\"e\", \"<applied-or-merged-patch-event-id>\", \"\", \"mention\"], // for each\n// when merged\n[\"merge-commit\", \"<merge-commit-id>\"]\n[\"r\", \"<merge-commit-id>\"]\n// when applied\n[\"applied-as-commits\", \"<commit-id-in-master-branch>\", ...]\n[\"r\", \"<applied-commit-id>\"] // for each\n```\n\n]\n}\n```\n\nThe Status event with the largest created_at date is valid.\n\nThe Status of a patch-revision defaults to either that of the root-patch, or1632(Closed) if the root-patch's Status is1631and the patch-revision isn't tagged in the1631event."}
{"question": "What does Possible things to be added later mean?", "answer": "- \"branch merge\" kind (specifying a URL from where to fetch the branch to be merged)\n- inline file comments kind (we probably need one for patches and a different one for merged files)"}
{"question": "What does Torrents mean?", "answer": "draftoptional\n\nThis NIP defined a newkind 2003which is a Torrent.\n\nkind 2003is a simple torrent index where there is enough information to search for content and construct the magnet link. No torrent files exist on nostr."}
{"question": "What does Tag prefixes mean?", "answer": "Tag prefixes are used to label the content with references, ie.[\"i\", \"imdb:1234\"]\n\n- tcat: A comma separated text category path, ie.[\"i\", \"tcat:video,movie,4k\"], this should also match thenewznabcategory in a best effort approach.\n- newznab: The category ID fromnewznab\n- tmdb:The movie databaseid.\n- ttvdb:TV databaseid.\n- imdb:IMDBid.\n- mal:MyAnimeListid.\n- anilist:AniListid.\n\nA second level prefix should be included where the database supports multiple media types.\n-tmdb:movie:693134maps tothemoviedb.org/movie/693134-ttvdb:movie:290272maps tothetvdb.com/movies/dune-part-two-mal:anime:9253maps tomyanimelist.net/anime/9253-mal:manga:17517maps tomyanimelist.net/manga/17517\n\nIn some cases the url mapping isnt direct, mapping the url in general is out of scope for this NIP, the section above is only a guide so that implementers have enough information to succsesfully map the url if they wish.\n\njson\n{\n\"kind\": 2003,\n\"content\": \"<long-description-pre-formatted>\",\n\"tags\": [\n[\"title\", \"<torrent-title>\"],\n[\"x\", \"<bittorrent-info-hash>\"],\n[\"file\", \"<file-name>\", \"<file-size-in-bytes>\"],\n[\"file\", \"<file-name>\", \"<file-size-in-bytes>\"],\n[\"tracker\", \"udp://mytacker.com:1337\"],\n[\"tracker\", \"http://1337-tracker.net/announce\"],\n[\"i\", \"tcat:video,movie,4k\"],\n[\"i\", \"newznab:2045\"],\n[\"i\", \"imdb:tt15239678\"],\n[\"i\", \"tmdb:movie:693134\"],\n[\"i\", \"ttvdb:movie:290272\"],\n[\"t\", \"movie\"],\n[\"t\", \"4k\"],\n]\n}"}
{"question": "What does Torrent Comments mean?", "answer": "A torrent comment is akind 2004event which is used to reply to a torrent event.\n\nThis event works exactly like akind 1and should followNIP-10for tagging."}
{"question": "What does Implementations mean?", "answer": "- dtan.xyz\n- nostrudel.ninja"}
{"question": "What does Sensitive Content / Content Warning mean?", "answer": "draftoptional\n\nThecontent-warningtag enables users to specify if the event's content needs to be approved by readers to be shown.\nClients can hide the content until the user acts on it.\n\nlandLtags MAY be also be used as defined inNIP-32with thecontent-warningor other namespace to support\nfurther qualification and querying."}
{"question": "What does Spec mean?", "answer": "tag: content-warning\noptions:\n- [reason]: optional"}
{"question": "What does Draft Events mean?", "answer": "draftoptional\n\nThis NIP defines kind31234as a private wrap for drafts of any other event kind.\n\nThe draft event is JSON-stringified,NIP44-encryptedto the signer's public key and placed inside the.contentof the event.\n\nAn additionalktag identifies the kind of the draft event.\n\njs\n{\n\"kind\": 31234,\n\"tags\": [\n[\"d\", \"<identifier>\"],\n[\"k\", \"<kind of the draft event>\"],\n[\"e\", \"<anchor event event id>\", \"<relay-url>\"],\n[\"a\", \"<anchor event address>\", \"<relay-url>\"],\n],\n\"content\": nip44Encrypt(JSON.stringify(draft_event)),\n// other fields\n}\n\nA blanked.contentmeans this draft has been deleted by a client but relays still have the event.\n\nTagseandaidentify one or more anchor events, such as parent events on replies."}
{"question": "What does Relay List for Private Content mean?", "answer": "Kind10013indicates the user's preferred relays to store private events like Drafts. The event MUST include a list ofrelayURLs in private tags. Private tags are JSON Stringified, NIP-44-encrypted to the signer's keys and placed inside the .content of the event.\n\njs\n{\n\"kind\": 10013,\n\"tags\": [],\n\"content\": nip44Encrypt(JSON.stringify([\n[\"relay\", \"wss://myrelay.mydomain.com\"]\n]))\n//...other fields\n}\n\nRelays listed in this event SHOULD be authed and only allow downloads to events signed by the authed user.\n\nClients SHOULD publish kind10013events to the author'sNIP-65writerelays."}
{"question": "What does User Statuses mean?", "answer": "draftoptional"}
{"question": "What does Live Statuses mean?", "answer": "A special event withkind:30315\"User Status\" is defined as anoptionally expiringaddressable event, where thedtag represents the status type:\n\nFor example:\n\njson\n{\n\"kind\": 30315,\n\"content\": \"Sign up for nostrasia!\",\n\"tags\": [\n[\"d\", \"general\"],\n[\"r\", \"https://nostr.world\"]\n],\n}\n\njson\n{\n\"kind\": 30315,\n\"content\": \"Intergalatic - Beastie Boys\",\n\"tags\": [\n[\"d\", \"music\"],\n[\"r\", \"spotify:search:Intergalatic%20-%20Beastie%20Boys\"],\n[\"expiration\", \"1692845589\"]\n],\n}\n\nTwo common status types are defined:generalandmusic.generalrepresent general statuses: \"Working\", \"Hiking\", etc.\n\nmusicstatus events are for live streaming what you are currently listening to. The expiry of themusicstatus should be when the track will stop playing.\n\nAny other status types can be used but they are not defined by this NIP.\n\nThe status MAY include anr,p,eoratag linking to a URL, profile, note, or addressable event.\n\nThecontentMAY include emoji(s), orNIP-30custom emoji(s). If thecontentis an empty string then the client should clear the status."}
{"question": "What does Client behavior mean?", "answer": "Clients MAY display this next to the username on posts or profiles to provide live user status information."}
{"question": "What does Use Cases mean?", "answer": "- Calendar nostr apps that update your general status when you're in a meeting\n- Nostr Nests that update your general status with a link to the nest when you join\n- Nostr music streaming services that update your music status when you're listening\n- Podcasting apps that update your music status when you're listening to a podcast, with a link for others to listen as well\n- Clients can use the system media player to update playing music status"}
{"question": "What does External Identities in Profiles mean?", "answer": "draftoptional"}
{"question": "What does itag on a metadata event mean?", "answer": "A new optionalitag is introduced forkind 0metadata event defined inNIP-01:\n\njsonc\n{\n\"id\": <id>,\n\"pubkey\": <pubkey>,\n\"tags\": [\n[\"i\", \"github:semisol\", \"9721ce4ee4fceb91c9711ca2a6c9a5ab\"],\n[\"i\", \"twitter:semisol_public\", \"1619358434134196225\"],\n[\"i\", \"mastodon:bitcoinhackers.org/@semisol\", \"109775066355589974\"]\n[\"i\", \"telegram:1087295469\", \"nostrdirectory/770\"]\n],\n// other fields...\n}\n\nAnitag will have two parameters, which are defined as the following:\n1.platform:identity: This is the platform name (for examplegithub) and the identity on that platform (for examplesemisol) joined together with:.\n2.proof: String or object that points to the proof of owning this identity.\n\nClients SHOULD process anyitags with more than 2 values for future extensibility.\nIdentity provider names SHOULD only includea-z,0-9and the characters._-/and MUST NOT include:.\nIdentity names SHOULD be normalized if possible by replacing uppercase letters with lowercase letters, and if there are multiple aliases for an entity the primary one should be used."}
{"question": "What does github mean?", "answer": "Identity: A GitHub username.\n\nProof: A GitHub Gist ID. This Gist should be created by<identity>with a single file that has the textVerifying that I control the following Nostr public key: <npub encoded public key>.\nThis can be located athttps://gist.github.com/<identity>/<proof>."}
{"question": "What does twitter mean?", "answer": "Identity: A Twitter username.\n\nProof: A Tweet ID. The tweet should be posted by<identity>and have the textVerifying my account on nostr My Public Key: \"<npub encoded public key>\".\nThis can be located athttps://twitter.com/<identity>/status/<proof>."}
{"question": "What does mastodon mean?", "answer": "Identity: A Mastodon instance and username in the format<instance>/@<username>.\n\nProof: A Mastodon post ID. This post should be published by<username>@<instance>and have the textVerifying that I control the following Nostr public key: \"<npub encoded public key>\".\nThis can be located athttps://<identity>/<proof>."}
{"question": "What does telegram mean?", "answer": "Identity: A Telegram user ID.\n\nProof: A string in the format<ref>/<id>which points to a message published in the public channel or group with name<ref>and message ID<id>. This message should be sent by user ID<identity>and have the textVerifying that I control the following Nostr public key: \"<npub encoded public key>\".\nThis can be located athttps://t.me/<proof>."}
{"question": "What does Expiration Timestamp mean?", "answer": "draftoptional\n\nTheexpirationtag enables users to specify a unix timestamp at which the message SHOULD be considered expired (by relays and clients) and SHOULD be deleted by relays."}
{"question": "What does Client Behavior mean?", "answer": "Clients SHOULD use thesupported_nipsfield to learn if a relay supports this NIP. Clients SHOULD NOT send expiration events to relays that do not support this NIP.\n\nClients SHOULD ignore events that have expired."}
{"question": "What does Relay Behavior mean?", "answer": "Relays MAY NOT delete expired messages immediately on expiration and MAY persist them indefinitely.\nRelays SHOULD NOT send expired events to clients, even if they are stored.\nRelays SHOULD drop any events that are published to them if they are expired.\nAn expiration timestamp does not affect storage of ephemeral events."}
{"question": "What does Suggested Use Cases mean?", "answer": "- Temporary announcements - This tag can be used to make temporary announcements. For example, an event organizer could use this tag to post announcements about an upcoming event.\n- Limited-time offers - This tag can be used by businesses to make limited-time offers that expire after a certain amount of time. For example, a business could use this tag to make a special offer that is only available for a limited time."}
{"question": "What does Warning mean?", "answer": "The events could be downloaded by third parties as they are publicly accessible all the time on the relays.\nSo don't consider expiring messages as a security feature for your conversations or other uses."}
{"question": "What does Authentication of clients to relays mean?", "answer": "draftoptional\n\nThis NIP defines a way for clients to authenticate to relays by signing an ephemeral event."}
{"question": "What does New client-relay protocol messages mean?", "answer": "This NIP defines a new message,AUTH, which relays CAN send when they support authentication and clients can send to relays when they want to authenticate. When sent by relays the message has the following form:\n\n[\"AUTH\", <challenge-string>]\n\nAnd, when sent by clients, the following form:\n\n[\"AUTH\", <signed-event-json>]\n\nAUTHmessages sent by clients MUST be answered with anOKmessage, like anyEVENTmessage."}
{"question": "What does Canonical authentication event mean?", "answer": "The signed event is an ephemeral event not meant to be published or queried, it must be ofkind: 22242and it should have at least two tags, one for the relay URL and one for the challenge string as received from the relay. Relays MUST excludekind: 22242events from being broadcasted to any client.created_atshould be the current time. Example:\n\njsonc\n{\n\"kind\": 22242,\n\"tags\": [\n[\"relay\", \"wss://relay.example.com/\"],\n[\"challenge\", \"challengestringhere\"]\n],\n// other fields...\n}"}
{"question": "What does OKandCLOSEDmachine-readable prefixes mean?", "answer": "This NIP defines two new prefixes that can be used inOK(in response to event writes by clients) andCLOSED(in response to rejected subscriptions by clients):\n\n- \"auth-required: \"- for when a client has not performedAUTHand the relay requires that to fulfill the query or write the event.\n- \"restricted: \"- for when a client has already performedAUTHbut the key used to perform it is still not allowed by the relay or is exceeding its authorization."}
{"question": "What does Protocol flow mean?", "answer": "At any moment the relay may send anAUTHmessage to the client containing a challenge. The challenge is valid for the duration of the connection or until another challenge is sent by the relay. The client MAY decide to send itsAUTHevent at any point and the authenticated session is valid afterwards for the duration of the connection."}
{"question": "What does auth-requiredin response to aREQmessage mean?", "answer": "Given that a relay is likely to require clients to perform authentication only for certain jobs, like answering aREQor accepting anEVENTwrite, these are some expected common flows:\n\nrelay: [\"AUTH\", \"<challenge>\"]\nclient: [\"REQ\", \"sub_1\", {\"kinds\": [4]}]\nrelay: [\"CLOSED\", \"sub_1\", \"auth-required: we can't serve DMs to unauthenticated users\"]\nclient: [\"AUTH\", {\"id\": \"abcdef...\", ...}]\nrelay: [\"OK\", \"abcdef...\", true, \"\"]\nclient: [\"REQ\", \"sub_1\", {\"kinds\": [4]}]\nrelay: [\"EVENT\", \"sub_1\", {...}]\nrelay: [\"EVENT\", \"sub_1\", {...}]\nrelay: [\"EVENT\", \"sub_1\", {...}]\nrelay: [\"EVENT\", \"sub_1\", {...}]\n...\n\nIn this case, theAUTHmessage from the relay could be sent right as the client connects or it can be sent immediately before theCLOSEDis sent. The only requirement is thatthe client must have a stored challenge associated with that relayso it can act upon that in response to theauth-requiredCLOSEDmessage."}
{"question": "What does auth-requiredin response to anEVENTmessage mean?", "answer": "The same flow is valid for when a client wants to write anEVENTto the relay, except now the relay sends back anOKmessage instead of aCLOSEDmessage:\n\nrelay: [\"AUTH\", \"<challenge>\"]\nclient: [\"EVENT\", {\"id\": \"012345...\", ...}]\nrelay: [\"OK\", \"012345...\", false, \"auth-required: we only accept events from registered users\"]\nclient: [\"AUTH\", {\"id\": \"abcdef...\", ...}]\nrelay: [\"OK\", \"abcdef...\", true, \"\"]\nclient: [\"EVENT\", {\"id\": \"012345...\", ...}]\nrelay: [\"OK\", \"012345...\", true, \"\"]"}
{"question": "What does Signed Event Verification mean?", "answer": "To verifyAUTHmessages, relays must ensure:\n\n- that thekindis22242;\n- that the eventcreated_atis close (e.g. within ~10 minutes) of the current time;\n- that the\"challenge\"tag matches the challenge sent before;\n- that the\"relay\"tag matches the relay URL:URL normalization techniques can be applied. For most cases just checking if the domain name is correct should be enough.\n- URL normalization techniques can be applied. For most cases just checking if the domain name is correct should be enough."}
{"question": "What does Encrypted Payloads (Versioned) mean?", "answer": "optional\n\nThe NIP introduces a new data format for keypair-based encryption. This NIP is versioned\nto allow multiple algorithm choices to exist simultaneously. This format may be used for\nmany things, but MUST be used in the context of a signed event as described in NIP-01.\n\nNote: this format DOES NOT define anykinds related to a new direct messaging standard,\nonly the encryption required to define one. It SHOULD NOT be used as a drop-in replacement\nfor NIP-04 payloads."}
{"question": "What does Versions mean?", "answer": "Currently defined encryption algorithms:\n\n- 0x00- Reserved\n- 0x01- Deprecated and undefined\n- 0x02- secp256k1 ECDH, HKDF, padding, ChaCha20, HMAC-SHA256, base64"}
{"question": "What does Limitations mean?", "answer": "Every nostr user has their own public key, which solves key distribution problems present\nin other solutions. However, nostr's relay-based architecture makes it difficult to implement\nmore robust private messaging protocols with things like metadata hiding, forward secrecy,\nand post compromise secrecy.\n\nThe goal of this NIP is to have asimpleway to encrypt payloads used in the context of a signed\nevent. When applying this NIP to any use case, it's important to keep in mind your users' threat\nmodel and this NIP's limitations. For high-risk situations, users should chat in specialized E2EE\nmessaging software and limit use of nostr to exchanging contacts.\n\nOn its own, messages sent using this scheme have a number of important shortcomings:\n\n- No deniability: it is possible to prove an event was signed by a particular key\n- No forward secrecy: when a key is compromised, it is possible to decrypt all previous conversations\n- No post-compromise security: when a key is compromised, it is possible to decrypt all future conversations\n- No post-quantum security: a powerful quantum computer would be able to decrypt the messages\n- IP address leak: user IP may be seen by relays and all intermediaries between user and relay\n- Date leak:created_atis public, since it is a part of NIP-01 event\n- Limited message size leak: padding only partially obscures true message length\n- No attachments: they are not supported\n\nLack of forward secrecy may be partially mitigated by only sending messages to trusted relays, and asking\nrelays to delete stored messages after a certain duration has elapsed."}
{"question": "What does Version 2 mean?", "answer": "NIP-44 version 2 has the following design characteristics:\n\n- Payloads are authenticated using a MAC before signing rather than afterwards because events are assumed\nto be signed as specified in NIP-01. The outer signature serves to authenticate the full payload, and MUST\nbe validated before decrypting.\n- ChaCha is used instead of AES because it's faster and hasbetter security against multi-key attacks.\n- ChaCha is used instead of XChaCha because XChaCha has not been standardized. Also, xChaCha's improved collision\nresistance of nonces isn't necessary since every message has a new (key, nonce) pair.\n- HMAC-SHA256 is used instead of Poly1305 because polynomial MACs are much easier to forge.\n- SHA256 is used instead of SHA3 or BLAKE because it is already used in nostr. Also BLAKE's speed advantage\nis smaller in non-parallel environments.\n- A custom padding scheme is used instead of padmé because it provides better leakage reduction for small messages.\n- Base64 encoding is used instead of another encoding algorithm because it is widely available, and is already used in nostr."}
{"question": "What does Encryption mean?", "answer": "- Calculate a conversation key\n- Execute ECDH (scalar multiplication) of public key B by private key A\nOutputshared_xmust be unhashed, 32-byte encoded x coordinate of the shared point\n- Use HKDF-extract with sha256,IKM=shared_xandsalt=utf8_encode('nip44-v2')\n- HKDF output will be aconversation_keybetween two users.\n- It is always the same, when key roles are swapped:conv(a, B) == conv(b, A)\n- Generate a random 32-byte nonce\n- Always useCSPRNG\n- Don't generate a nonce from message content\n- Don't re-use the same nonce between messages: doing so would make them decryptable,\nbut won't leak the long-term key\n- Calculate message keys\n- The keys are generated fromconversation_keyandnonce. Validate that both are 32 bytes long\n- Use HKDF-expand, with sha256,PRK=conversation_key,info=nonceandL=76\n- Slice 76-byte HKDF output into:chacha_key(bytes 0..32),chacha_nonce(bytes 32..44),hmac_key(bytes 44..76)\n- Add padding\n- Content must be encoded from UTF-8 into byte array\n- Validate plaintext length. Minimum is 1 byte, maximum is 65535 bytes\n- Padding format is:[plaintext_length: u16][plaintext][zero_bytes]\n- Padding algorithm is related to powers-of-two, with min padded msg size of 32 bytes\n- Plaintext length is encoded in big-endian as first 2 bytes of the padded blob\n- Encrypt padded content\n- Use ChaCha20, with key and nonce from step 3\n- Calculate MAC (message authentication code)\n- AAD (additional authenticated data) is used - instead of calculating MAC on ciphertext,\nit's calculated over a concatenation ofnonceandciphertext\n- Validate that AAD (nonce) is 32 bytes\n- Base64-encode (with padding) params usingconcat(version, nonce, ciphertext, mac)\n\nEncrypted payloads MUST be included in an event's payload, hashed, and signed as defined in NIP 01, using schnorr\nsignature scheme over secp256k1."}
{"question": "What does Decryption mean?", "answer": "Before decryption, the event's pubkey and signature MUST be validated as defined in NIP 01. The public key MUST be\na valid non-zero secp256k1 curve point, and the signature must be valid secp256k1 schnorr signature. For exact\nvalidation rules, refer to BIP-340.\n\n- Check if first payload's character is#\n- #is an optional future-proof flag that means non-base64 encoding is used\n- The#is not present in base64 alphabet, but, instead of throwingbase64 is invalid,\nimplementations MUST indicate that the encryption version is not yet supported\n- Decode base64\n- Base64 is decoded intoversion, nonce, ciphertext, mac\n- If the version is unknown, implementations must indicate that the encryption version is not supported\n- Validate length of base64 message to prevent DoS on base64 decoder: it can be in range from 132 to 87472 chars\n- Validate length of decoded message to verify output of the decoder: it can be in range from 99 to 65603 bytes\n- Calculate conversation key\n- See step 1 ofencryption\n- Calculate message keys\n- See step 3 ofencryption\n- Calculate MAC (message authentication code) with AAD and compare\n- Stop and throw an error if MAC doesn't match the decoded one from step 2\n- Use constant-time comparison algorithm\n- Decrypt ciphertext\n- Use ChaCha20 with key and nonce from step 3\n- Remove padding\n- Read the first two BE bytes of plaintext that correspond to plaintext length\n- Verify that the length of sliced plaintext matches the value of the two BE bytes\n- Verify that calculated padding from step 3 of theencryptionprocess matches the actual padding"}
{"question": "What does Details mean?", "answer": "- Cryptographic methods\n- secure_random_bytes(length)fetches randomness from CSPRNG.\n- hkdf(IKM, salt, info, L)represents HKDF(RFC 5869)with SHA256 hash function comprised of methodshkdf_extract(IKM, salt)andhkdf_expand(OKM, info, L).\n- chacha20(key, nonce, data)is ChaCha20(RFC 8439)with\nstarting counter set to 0.\n- hmac_sha256(key, message)is HMAC(RFC 2104).\n- secp256k1_ecdh(priv_a, pub_b)is multiplication of point B by scalar a (a ⋅ B), defined inBIP340.\nThe operation produces a shared point, and we encode the shared point's 32-byte x coordinate, using methodbytes(P)from BIP340. Private and public keys must be validated as per BIP340: pubkey must be a valid,\non-curve point, and private key must be a scalar in range[1, secp256k1_order - 1].\nNIP44 doesn't do hashing of the output: keep this in mind, because some libraries hash it using sha256.\nAs an example, in libsecp256k1, unhashed version is available insecp256k1_ec_pubkey_tweak_mul\n- Operators\n- x[i:j], wherexis a byte array andi, j <= 0returns a(j - i)-byte array with a copy of thei-th byte (inclusive) to thej-th byte (exclusive) ofx.\n- Constantsc:\n- min_plaintext_sizeis 1. 1 byte msg is padded to 32 bytes.\n- max_plaintext_sizeis 65535 (64kB - 1). It is padded to 65536 bytes.\n- Functions\n- base64_encode(string)andbase64_decode(bytes)are Base64 (RFC 4648, with padding)\n- concatrefers to byte array concatenation\n- is_equal_ct(a, b)is constant-time equality check of 2 byte arrays\n- utf8_encode(string)andutf8_decode(bytes)transform string to byte array and back\n- write_u8(number)restricts number to values 0..255 and encodes into Big-Endian uint8 byte array\n- write_u16_be(number)restricts number to values 0..65535 and encodes into Big-Endian uint16 byte array\n- zeros(length)creates byte array of lengthlength >= 0, filled with zeros\n- floor(number)andlog2(number)are well-known mathematical methods"}
{"question": "What does Implementation pseudocode mean?", "answer": "The following is a collection of python-like pseudocode functions which implement the above primitives,\nintended to guide implementers. A collection of implementations in different languages is available at https://github.com/paulmillr/nip44.\n\n```py"}
{"question": "What does Calculates length of the padded byte array. mean?", "answer": "def calc_padded_len(unpadded_len):\nnext_power = 1 << (floor(log2(unpadded_len - 1))) + 1\nif next_power <= 256:\nchunk = 32\nelse:\nchunk = next_power / 8\nif unpadded_len <= 32:\nreturn 32\nelse:\nreturn chunk * (floor((len - 1) / chunk) + 1)"}
{"question": "What does Converts unpadded plaintext to padded bytearray mean?", "answer": "def pad(plaintext):\nunpadded = utf8_encode(plaintext)\nunpadded_len = len(plaintext)\nif (unpadded_len < c.min_plaintext_size or\nunpadded_len > c.max_plaintext_size): raise Exception('invalid plaintext length')\nprefix = write_u16_be(unpadded_len)\nsuffix = zeros(calc_padded_len(unpadded_len) - unpadded_len)\nreturn concat(prefix, unpadded, suffix)"}
{"question": "What does Converts padded bytearray to unpadded plaintext mean?", "answer": "def unpad(padded):\nunpadded_len = read_uint16_be(padded[0:2])\nunpadded = padded[2:2+unpadded_len]\nif (unpadded_len == 0 or\nlen(unpadded) != unpadded_len or\nlen(padded) != 2 + calc_padded_len(unpadded_len)): raise Exception('invalid padding')\nreturn utf8_decode(unpadded)"}
{"question": "What does compressed payload (base64): 132b to 87472b mean?", "answer": "def decode_payload(payload):\nplen = len(payload)\nif plen == 0 or payload[0] == '#': raise Exception('unknown version')\nif plen < 132 or plen > 87472: raise Exception('invalid payload size')\ndata = base64_decode(payload)\ndlen = len(d)\nif dlen < 99 or dlen > 65603: raise Exception('invalid data size');\nvers = data[0]\nif vers != 2: raise Exception('unknown version ' + vers)\nnonce = data[1:33]\nciphertext = data[33:dlen - 32]\nmac = data[dlen - 32:dlen]\nreturn (nonce, ciphertext, mac)\n\ndef hmac_aad(key, message, aad):\nif len(aad) != 32: raise Exception('AAD associated data must be 32 bytes');\nreturn hmac(sha256, key, concat(aad, message));"}
{"question": "What does Calculates long-term key between users A and B:get_key(Apriv, Bpub) == get_key(Bpriv, Apub) mean?", "answer": "def get_conversation_key(private_key_a, public_key_b):\nshared_x = secp256k1_ecdh(private_key_a, public_key_b)\nreturn hkdf_extract(IKM=shared_x, salt=utf8_encode('nip44-v2'))"}
{"question": "What does Calculates unique per-message key mean?", "answer": "def get_message_keys(conversation_key, nonce):\nif len(conversation_key) != 32: raise Exception('invalid conversation_key length')\nif len(nonce) != 32: raise Exception('invalid nonce length')\nkeys = hkdf_expand(OKM=conversation_key, info=nonce, L=76)\nchacha_key = keys[0:32]\nchacha_nonce = keys[32:44]\nhmac_key = keys[44:76]\nreturn (chacha_key, chacha_nonce, hmac_key)\n\ndef encrypt(plaintext, conversation_key, nonce):\n(chacha_key, chacha_nonce, hmac_key) = get_message_keys(conversation_key, nonce)\npadded = pad(plaintext)\nciphertext = chacha20(key=chacha_key, nonce=chacha_nonce, data=padded)\nmac = hmac_aad(key=hmac_key, message=ciphertext, aad=nonce)\nreturn base64_encode(concat(write_u8(2), nonce, ciphertext, mac))\n\ndef decrypt(payload, conversation_key):\n(nonce, ciphertext, mac) = decode_payload(payload)\n(chacha_key, chacha_nonce, hmac_key) = get_message_keys(conversation_key, nonce)\ncalculated_mac = hmac_aad(key=hmac_key, message=ciphertext, aad=nonce)\nif not is_equal_ct(calculated_mac, mac): raise Exception('invalid MAC')\npadded_plaintext = chacha20(key=chacha_key, nonce=chacha_nonce, data=ciphertext)\nreturn unpad(padded_plaintext)"}
{"question": "What does 'hello world' == decrypt(payload, conversation_key) mean?", "answer": "```"}
{"question": "What does Audit mean?", "answer": "The v2 of the standard was audited byCure53in December 2023.\nCheck outaudit-2023.12.pdfandauditor's website."}
{"question": "What does Tests and code mean?", "answer": "A collection of implementations in different languages is available at https://github.com/paulmillr/nip44.\n\nWe publish extensive test vectors. Instead of having it in the document directly, a sha256 checksum of vectors is provided:\n\n```\n269ed0f69e4c192512cc779e78c555090cebc7c785b609e338a62afc3ce25040  nip44.vectors.json\n```\n\nExample of a test vector from the file:\n\njson\n{\n\"sec1\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n\"sec2\": \"0000000000000000000000000000000000000000000000000000000000000002\",\n\"conversation_key\": \"c41c775356fd92eadc63ff5a0dc1da211b268cbea22316767095b2871ea1412d\",\n\"nonce\": \"0000000000000000000000000000000000000000000000000000000000000001\",\n\"plaintext\": \"a\",\n\"payload\": \"AgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABee0G5VSK0/9YypIObAtDKfYEAjD35uVkHyB0F4DwrcNaCXlCWZKaArsGrY6M9wnuTMxWfp1RTN9Xga8no+kF5Vsb\"\n}\n\nThe file also contains intermediate values. A quick guidance with regards to its usage:\n\n- valid.get_conversation_key: calculate conversation_key from secret key sec1 and public key pub2\n- valid.get_message_keys: calculate chacha_key, chacha_nonce, hmac_key from conversation_key and nonce\n- valid.calc_padded_len: take unpadded length (first value), calculate padded length (second value)\n- valid.encrypt_decrypt: emulate real conversation. Calculate pub2 from sec2, verify conversation_key from (sec1, pub2), encrypt, verify payload, then calculate pub1 from sec1, verify conversation_key from (sec2, pub1), decrypt, verify plaintext.\n- valid.encrypt_decrypt_long_msg: same as previous step, but instead of a full plaintext and payload, their checksum is provided.\n- invalid.encrypt_msg_lengths\n- invalid.get_conversation_key: calculating conversation_key must throw an error\n- invalid.decrypt: decrypting message content must throw an error"}
{"question": "What does Event Counts mean?", "answer": "draftoptional\n\nRelays may support the verbCOUNT, which provides a mechanism for obtaining event counts."}
{"question": "What does Filters and return values mean?", "answer": "This NIP defines the verbCOUNT, which accepts a subscription id and filters as specified inNIP 01for the verbREQ. Multiple filters are OR'd together and aggregated into a single count result.\n\n[\"COUNT\", <subscription_id>, <filters JSON>...]\n\nCounts are returned using aCOUNTresponse in the form{\"count\": <integer>}. Relays may use probabilistic counts to reduce compute requirements.\nIn case a relay uses probabilistic counts, it MAY indicate it in the response withapproximatekey i.e.{\"count\": <integer>, \"approximate\": <true|false>}.\n\n[\"COUNT\", <subscription_id>, {\"count\": <integer>}]\n\nWhenever the relay decides to refuse to fulfill theCOUNTrequest, it MUST return aCLOSEDmessage."}
{"question": "What does Followers count mean?", "answer": "[\"COUNT\", <subscription_id>, {\"kinds\": [3], \"#p\": [<pubkey>]}]\n[\"COUNT\", <subscription_id>, {\"count\": 238}]"}
{"question": "What does Count posts and reactions mean?", "answer": "[\"COUNT\", <subscription_id>, {\"kinds\": [1, 7], \"authors\": [<pubkey>]}]\n[\"COUNT\", <subscription_id>, {\"count\": 5}]"}
{"question": "What does Count posts approximately mean?", "answer": "[\"COUNT\", <subscription_id>, {\"kinds\": [1]}]\n[\"COUNT\", <subscription_id>, {\"count\": 93412452, \"approximate\": true}]"}
{"question": "What does Relay refuses to count mean?", "answer": "[\"COUNT\", <subscription_id>, {\"kinds\": [4], \"authors\": [<pubkey>], \"#p\": [<pubkey>]}]\n[\"CLOSED\", <subscription_id>, \"auth-required: cannot count other people's DMs\"]"}
{"question": "What does Changes mean?", "answer": "remote-signer-keyis introduced, passed in bunker url, clients must differentiate betweenremote-signer-pubkeyanduser-pubkey, must callget_public_keyafter connect, nip05 login is removed, create_account moved to another NIP."}
{"question": "What does Rationale mean?", "answer": "Private keys should be exposed to as few systems - apps, operating systems, devices - as possible as each system adds to the attack surface.\n\nThis NIP describes a method for 2-way communication between a remote signer and a Nostr client. The remote signer could be, for example, a hardware device dedicated to signing Nostr events, while the client is a normal Nostr client."}
{"question": "What does Terminology mean?", "answer": "- user: A person that is trying to use Nostr.\n- client: A user-facing application thatuseris looking at and clicking buttons in. This application will send requests toremote-signer.\n- remote-signer: A daemon or server running somewhere that will answer requests fromclient, also known as \"bunker\".\n- client-keypair/pubkey: The keys generated byclient. Used to encrypt content and communicate withremote-signer.\n- remote-signer-keypair/pubkey: The keys used byremote-signerto encrypt content and communicate withclient. This keypair MAY be same asuser-keypair, but not necessarily.\n- user-keypair/pubkey: The actual keys representinguser(that will be used to sign events in response tosign_eventrequests, for example). Theremote-signergenerally has control over these keys.\n\nAll pubkeys specified in this NIP are in hex format."}
{"question": "What does Overview mean?", "answer": "- clientgeneratesclient-keypair. This keypair doesn't need to be communicated tousersince it's largely disposable.clientmight choose to store it locally and they should delete it on logout;\n- A connection is established (see below),remote-signerlearnsclient-pubkey,clientlearnsremote-signer-pubkey.\n- clientusesclient-keypairto send requests toremote-signerbyp-tagging and encrypting toremote-signer-pubkey;\n- remote-signerresponds toclientbyp-tagging and encrypting to theclient-pubkey.\n- clientrequestsget_public_keyto learnuser-pubkey."}
{"question": "What does Initiating a connection mean?", "answer": "There are two ways to initiate a connection:"}
{"question": "What does Direct connection initiated byremote-signer mean?", "answer": "remote-signerprovides connection token in the form:\n\nbunker://<remote-signer-pubkey>?relay=<wss://relay-to-connect-on>&relay=<wss://another-relay-to-connect-on>&secret=<optional-secret-value>\n\nuserpasses this token toclient, which then sendsconnectrequest toremote-signervia the specified relays. Optional secret can be used for single successfully established connection only,remote-signerSHOULD ignore new attempts to establish connection with old secret."}
{"question": "What does Direct connection initiated by theclient mean?", "answer": "clientprovides a connection token usingnostrconnect://as the protocol, andclient-pubkeyas the origin. Additional information should be passed as query parameters:\n\n- relay(required) - one or more relay urls on which theclientis listening for responses from theremote-signer.\n- secret(required) - a short random string that theremote-signershould return as theresultfield of its response.\n- perms(optional) - a comma-separated list of permissions theclientis requesting be approved by theremote-signer\n- name(optional) - the name of theclientapplication\n- url(optional) - the canonical url of theclientapplication\n- image(optional) - a small image representing theclientapplication\n\nHere's an example:\n\nnostrconnect://83f3b2ae6aa368e8275397b9c26cf550101d63ebaab900d19dd4a4429f5ad8f5?relay=wss%3A%2F%2Frelay1.example.com&perms=nip44_encrypt%2Cnip44_decrypt%2Csign_event%3A13%2Csign_event%3A14%2Csign_event%3A1059&name=My+Client&secret=0s8j2djs&relay=wss%3A%2F%2Frelay2.example2.com\n\nuserpasses this token toremote-signer, which then sendsconnectresponseevent to theclient-pubkeyvia the specified relays. Client discoversremote-signer-pubkeyfrom connect response author.secretvalue MUST be provided to avoid connection spoofing,clientMUST validate thesecretreturned byconnectresponse."}
{"question": "What does Request Eventskind: 24133 mean?", "answer": "jsonc\n{\n\"kind\": 24133,\n\"pubkey\": <local_keypair_pubkey>,\n\"content\": <nip44(<request>)>,\n\"tags\": [[\"p\", <remote-signer-pubkey>]],\n}\n\nThecontentfield is a JSON-RPC-like message that isNIP-44encrypted and has the following structure:\n\njsonc\n{\n\"id\": <random_string>,\n\"method\": <method_name>,\n\"params\": [array_of_strings]\n}\n\n- idis a random string that is a request ID. This same ID will be sent back in the response payload.\n- methodis the name of the method/command (detailed below).\n- paramsis a positional array of string parameters."}
{"question": "What does Methods/Commands mean?", "answer": "Each of the following are methods that theclientsends to theremote-signer.\n\n| Command                  | Params                                                                        | Result                                                                 |\n| ------------------------ | -------------------------------------------------                             | ---------------------------------------------------------------------- |\n|connect|[<remote-signer-pubkey>, <optional_secret>, <optional_requested_permissions>]| \"ack\" OR<required-secret-value>|\n|sign_event|[<{kind, content, tags, created_at}>]|json_stringified(<signed_event>)|\n|ping|[]| \"pong\"                                                                 |\n|get_public_key|[]|<user-pubkey>|\n|nip04_encrypt|[<third_party_pubkey>, <plaintext_to_encrypt>]|<nip04_ciphertext>|\n|nip04_decrypt|[<third_party_pubkey>, <nip04_ciphertext_to_decrypt>]|<plaintext>|\n|nip44_encrypt|[<third_party_pubkey>, <plaintext_to_encrypt>]|<nip44_ciphertext>|\n|nip44_decrypt|[<third_party_pubkey>, <nip44_ciphertext_to_decrypt>]|<plaintext>|"}
{"question": "What does Requested permissions mean?", "answer": "Theconnectmethod may be provided withoptional_requested_permissionsfor user convenience. The permissions are a comma-separated list ofmethod[:params], i.e.nip44_encrypt,sign_event:4meaning permissions to callnip44_encryptand to callsign_eventwithkind:4. Optional parameter forsign_eventis the kind number, parameters for other methods are to be defined later. Same permission format may be used forpermsfield ofmetadatainnostrconnect://string."}
{"question": "What does Response Eventskind:24133 mean?", "answer": "json\n{\n\"id\": <id>,\n\"kind\": 24133,\n\"pubkey\": <remote-signer-pubkey>,\n\"content\": <nip44(<response>)>,\n\"tags\": [[\"p\", <client-pubkey>]],\n\"created_at\": <unix timestamp in seconds>\n}\n\nThecontentfield is a JSON-RPC-like message that isNIP-44encrypted and has the following structure:\n\njson\n{\n\"id\": <request_id>,\n\"result\": <results_string>,\n\"error\": <optional_error_string>\n}\n\n- idis the request ID that this response is for.\n- resultsis a string of the result of the call (this can be either a string or a JSON stringified object)\n- error,optionally, it is an error in string form, if any. Its presence indicates an error with the request."}
{"question": "What does Example flow for signing an event mean?", "answer": "- remote-signer-pubkeyisfa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52\n- user-pubkeyis alsofa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52\n- client-pubkeyiseff37350d839ce3707332348af4549a96051bd695d3223af4aabce4993531d86"}
{"question": "What does Signature request mean?", "answer": "jsonc\n{\n\"kind\": 24133,\n\"pubkey\": \"eff37350d839ce3707332348af4549a96051bd695d3223af4aabce4993531d86\",\n\"content\": nip44({\n\"id\": <random_string>,\n\"method\": \"sign_event\",\n\"params\": [json_stringified(<{\ncontent: \"Hello, I'm signing remotely\",\nkind: 1,\ntags: [],\ncreated_at: 1714078911\n}>)]\n}),\n\"tags\": [[\"p\", \"fa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52\"]], // p-tags the remote-signer-pubkey\n}"}
{"question": "What does Response event mean?", "answer": "jsonc\n{\n\"kind\": 24133,\n\"pubkey\": \"fa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52\",\n\"content\": nip44({\n\"id\": <random_string>,\n\"result\": json_stringified(<signed-event>)\n}),\n\"tags\": [[\"p\", \"eff37350d839ce3707332348af4549a96051bd695d3223af4aabce4993531d86\"]], // p-tags the client-pubkey\n}"}
{"question": "What does Auth Challenges mean?", "answer": "An Auth Challenge is a response that aremote-signercan send back when it needs theuserto authenticate via other means. The responsecontentobject will take the following form:\n\njson\n{\n\"id\": <request_id>,\n\"result\": \"auth_url\",\n\"error\": <URL_to_display_to_end_user>\n}\n\nclientshould display (in a popup or new tab) the URL from theerrorfield and then subscribe/listen for another response from theremote-signer(reusing the same request ID). This event will be sent once the user authenticates in the other window (or will never arrive if the user doesn't authenticate)."}
{"question": "What does Announcingremote-signermetadata mean?", "answer": "remote-signerMAY publish it's metadata by usingNIP-05andNIP-89. With NIP-05, a request to<remote-signer>/.well-known/nostr.json?name=_MAY return this:jsonc\n{\n\"names\":{\n\"_\": <remote-signer-app-pubkey>,\n},\n\"nip46\": {\n\"relays\": [\"wss://relay1\",\"wss://relay2\"...],\n\"nostrconnect_url\": \"https://remote-signer-domain.example/<nostrconnect>\"\n}\n}\n\nThe<remote-signer-app-pubkey>MAY be used to verify the domain fromremote-signer's NIP-89 event (see below).relaysSHOULD be used to construct a more precisenostrconnect://string for the specificremote-signer.nostrconnect_urltemplate MAY be used to redirect users toremote-signer's connection flow by replacing<nostrconnect>placeholder with an actualnostrconnect://string."}
{"question": "What does Remote signer discovery via NIP-89 mean?", "answer": "remote-signerMAY publish a NIP-89kind: 31990event withktag of24133, which MAY also include one or morerelaytags and MAY includenostrconnect_urltag. The semantics ofrelayandnostrconnect_urltags are the same as in the section above.\n\nclientMAY improve UX by discoveringremote-signersusing theirkind: 31990events.clientMAY then pre-generatenostrconnect://strings for theremote-signers, and SHOULD in that case verify thatkind: 31990event's author is mentioned in signer'snostr.json?name=_file as<remote-signer-app-pubkey>."}
{"question": "What does Nostr Wallet Connect (NWC) mean?", "answer": "draftoptional"}
{"question": "What does Theory of Operation mean?", "answer": "Fundamentally NWC is communication between aclientandwallet serviceby the means of E2E-encrypted direct messages over a nostr relay. The relay knows the kinds and tags of notes, but not the content of the encrypted payloads. Theuser's identity key is not used to avoid linking payment activity to the user. Ideally unique keys are used for each individual connection.\n\n- Userswho wish to use this NIP to allowclient(s)to interact with their wallet must first acquire a special \"connection\" URI from their NIP-47 compliant wallet application.  The wallet application may provide this URI using a QR screen, or a pasteable string, or some other means.\n- Theusershould then copy this URI into theirclient(s)by pasting, or scanning the QR, etc.  Theclient(s)should save this URI and use it later whenever theuser(or theclienton the user's behalf) wants to interact with the wallet.  Theclientshould then request aninfo(13194) event from the relay(s) specified in the URI.  Thewallet servicewill have sent that event to those relays earlier, and the relays will hold it as a replaceable event.\n- When theuserinitiates a payment their nostrclientcreate apay_invoicerequest, encrypts it using a token from the URI, and sends it (kind 23194) to the relay(s) specified in the connection URI.  Thewallet servicewill be listening on those relays and will decrypt the request and then contact theuser'swallet application to send the payment.  Thewallet servicewill know how to talk to the wallet application because the connection URI specified relay(s) that have access to the wallet app API.\n- Once the payment is complete thewallet servicewill send an encryptedresponse(kind 23195) to theuserover the relay(s) in the URI.\n- Thewallet servicemay send encrypted notifications (kind 23196) of wallet events (such as a received payment) to theclient."}
{"question": "What does Events mean?", "answer": "There are four event kinds:\n-NIP-47 info event: 13194\n-NIP-47 request: 23194\n-NIP-47 response: 23195\n-NIP-47 notification event: 23196"}
{"question": "What does Info Event mean?", "answer": "The info event should be a replaceable event that is published by thewallet serviceon the relay to indicate which capabilities it supports.\n\nThe content should be a plaintext string with the supported capabilities space-separated, eg.pay_invoice get_balance notifications.\n\nIf thewallet servicesupports notifications, the info event SHOULD contain anotificationstag with the supported notification types space-separated, eg.payment_received payment_sent."}
{"question": "What does Request and Response Events mean?", "answer": "Both the request and response events SHOULD contain oneptag, containing the public key of thewallet serviceif this is a request, and the public key of theclientif this is a response. The response event SHOULD contain anetag with the id of the request event it is responding to.\nOptionally, a request can have anexpirationtag that has a unix timestamp in seconds. If the request is received after this timestamp, it should be ignored.\n\nThe content of requests and responses is encrypted withNIP04, and is a JSON-RPCish object with a semi-fixed structure:\n\nRequest:jsonc\n{\n\"method\": \"pay_invoice\", // method, string\n\"params\": { // params, object\n\"invoice\": \"lnbc50n1...\" // command-related data\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"pay_invoice\", //indicates the structure of the result field\n\"error\": { //object, non-null in case of error\n\"code\": \"UNAUTHORIZED\", //string error code, see below\n\"message\": \"human readable error message\"\n},\n\"result\": { // result, object. null in case of error.\n\"preimage\": \"0123456789abcdef...\" // command-related data\n}\n}\n\nTheresult_typefield MUST contain the name of the method that this event is responding to.\nTheerrorfield MUST contain amessagefield with a human readable error message and acodefield with the error code if the command was not successful.\nIf the command was successful, theerrorfield must be null."}
{"question": "What does Notification Events mean?", "answer": "The notification event SHOULD contain oneptag, the public key of theclient.\n\nThe content of notifications is encrypted withNIP04, and is a JSON-RPCish object with a semi-fixed structure:\n\njsonc\n{\n\"notification_type\": \"payment_received\", //indicates the structure of the notification field\n\"notification\": {\n\"payment_hash\": \"0123456789abcdef...\" // notification-related data\n}\n}"}
{"question": "What does Error codes mean?", "answer": "- RATE_LIMITED: The client is sending commands too fast. It should retry in a few seconds.\n- NOT_IMPLEMENTED: The command is not known or is intentionally not implemented.\n- INSUFFICIENT_BALANCE: The wallet does not have enough funds to cover a fee reserve or the payment amount.\n- QUOTA_EXCEEDED: The wallet has exceeded its spending quota.\n- RESTRICTED: This public key is not allowed to do this operation.\n- UNAUTHORIZED: This public key has no wallet connected.\n- INTERNAL: An internal error.\n- OTHER: Other error."}
{"question": "What does Nostr Wallet Connect URI mean?", "answer": "Communication between theclientandwallet servicerequires two keys in order to encrypt and decrypt messages. The connection URI includes the secret key of theclientand only the public key of thewallet service.\n\nTheclientdiscoverswallet serviceby scanning a QR code, handling a deeplink or pasting in a URI.\n\nThewallet servicegenerates this connection URI with protocolnostr+walletconnect://and base path its 32-byte hex-encodedpubkey, which SHOULD be unique per client connection.\n\nThe connection URI contains the following query string parameters:\n\n- relayRequired. URL of the relay where thewallet serviceis connected and will be listening for events. May be more than one.\n- secretRequired. 32-byte randomly generated hex encoded string. TheclientMUST use this to sign events and encrypt payloads when communicating with thewallet service. Thewallet serviceMUST use the corresponding public key of this secret to communicate with theclient.Authorization does not require passing keys back and forth.The user can have different keys for different applications. Keys can be revoked and created at will and have arbitrary constraints (eg. budgets).The key is harder to leak since it is not shown to the user and backed up.It improves privacy because the user's main key would not be linked to their payments.\n- Authorization does not require passing keys back and forth.\n- The user can have different keys for different applications. Keys can be revoked and created at will and have arbitrary constraints (eg. budgets).\n- The key is harder to leak since it is not shown to the user and backed up.\n- It improves privacy because the user's main key would not be linked to their payments.\n- lud16Recommended. A lightning address that clients can use to automatically setup thelud16field on the user's profile if they have none configured.\n\nTheclientshould then store this connection and use it when the user wants to perform actions like paying an invoice. Due to this NIP using ephemeral events, it is recommended to pick relays that do not close connections on inactivity to not drop events, and ideally retain the events until they are either consumed or become stale.\n\n- When theclientsends or receives a message it will use thesecretfrom the connection URI andwallet service'spubkeyto encrypt or decrypt.\n- When thewallet servicesends or receives a message it will use its own secret and the corresponding pubkey of theclient'ssecretto encrypt or decrypt. Thewallet serviceSHOULD NOT store the secret it generates for the client and MUST NOT rely on the knowing theclientsecret for general operation."}
{"question": "What does Example connection string mean?", "answer": "sh\nnostr+walletconnect://b889ff5b1513b641e2a139f661a661364979c5beee91842f8f0ef42ab558e9d4?relay=wss%3A%2F%2Frelay.damus.io&secret=71a8c14c1407c113601079c4302dab36460f0ccd0ad506f1f2dc73b5100e4f3c"}
{"question": "What does pay_invoice mean?", "answer": "Description: Requests payment of an invoice.\n\nRequest:jsonc\n{\n\"method\": \"pay_invoice\",\n\"params\": {\n\"invoice\": \"lnbc50n1...\", // bolt11 invoice\n\"amount\": 123, // invoice amount in msats, optional\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"pay_invoice\",\n\"result\": {\n\"preimage\": \"0123456789abcdef...\", // preimage of the payment\n\"fees_paid\": 123, // value in msats, optional\n}\n}\n\nErrors:\n-PAYMENT_FAILED: The payment failed. This may be due to a timeout, exhausting all routes, insufficient capacity or similar."}
{"question": "What does multi_pay_invoice mean?", "answer": "Description: Requests payment of multiple invoices.\n\nRequest:jsonc\n{\n\"method\": \"multi_pay_invoice\",\n\"params\": {\n\"invoices\": [\n{\"id\":\"4da52c32a1\", \"invoice\": \"lnbc1...\", \"amount\": 123}, // bolt11 invoice and amount in msats, amount is optional\n{\"id\":\"3da52c32a1\", \"invoice\": \"lnbc50n1...\"},\n],\n}\n}\n\nResponse:\n\nFor every invoice in the request, a separate response event is sent. To differentiate between the responses, each\nresponse event contains adtag with the id of the invoice it is responding to; if no id was given, then the\npayment hash of the invoice should be used.\n\njsonc\n{\n\"result_type\": \"multi_pay_invoice\",\n\"result\": {\n\"preimage\": \"0123456789abcdef...\", // preimage of the payment\n\"fees_paid\": 123, // value in msats, optional\n}\n}\n\nErrors:\n-PAYMENT_FAILED: The payment failed. This may be due to a timeout, exhausting all routes, insufficient capacity or similar."}
{"question": "What does pay_keysend mean?", "answer": "Request:jsonc\n{\n\"method\": \"pay_keysend\",\n\"params\": {\n\"amount\": 123, // invoice amount in msats, required\n\"pubkey\": \"03...\", // payee pubkey, required\n\"preimage\": \"0123456789abcdef...\", // preimage of the payment, optional\n\"tlv_records\": [ // tlv records, optional\n{\n\"type\": 5482373484, // tlv type\n\"value\": \"0123456789abcdef\" // hex encoded tlv value\n}\n]\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"pay_keysend\",\n\"result\": {\n\"preimage\": \"0123456789abcdef...\", // preimage of the payment\n\"fees_paid\": 123, // value in msats, optional\n}\n}\n\nErrors:\n-PAYMENT_FAILED: The payment failed. This may be due to a timeout, exhausting all routes, insufficient capacity or similar."}
{"question": "What does multi_pay_keysend mean?", "answer": "Description: Requests multiple keysend payments.\n\nHas an array of keysends, these follow the same semantics aspay_keysend, just done in a batch\n\nRequest:jsonc\n{\n\"method\": \"multi_pay_keysend\",\n\"params\": {\n\"keysends\": [\n{\"id\": \"4c5b24a351\", \"pubkey\": \"03...\", \"amount\": 123},\n{\"id\": \"3da52c32a1\", \"pubkey\": \"02...\", \"amount\": 567, \"preimage\": \"abc123..\", \"tlv_records\": [{\"type\": 696969, \"value\": \"77616c5f6872444873305242454d353736\"}]},\n],\n}\n}\n\nResponse:\n\nFor every keysend in the request, a separate response event is sent. To differentiate between the responses, each\nresponse event contains adtag with the id of the keysend it is responding to; if no id was given, then the\npubkey should be used.\n\njsonc\n{\n\"result_type\": \"multi_pay_keysend\",\n\"result\": {\n\"preimage\": \"0123456789abcdef...\", // preimage of the payment\n\"fees_paid\": 123, // value in msats, optional\n}\n}\n\nErrors:\n-PAYMENT_FAILED: The payment failed. This may be due to a timeout, exhausting all routes, insufficient capacity or similar."}
{"question": "What does make_invoice mean?", "answer": "Request:jsonc\n{\n\"method\": \"make_invoice\",\n\"params\": {\n\"amount\": 123, // value in msats\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"expiry\": 213 // expiry in seconds from time invoice is created, optional\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"make_invoice\",\n\"result\": {\n\"type\": \"incoming\", // \"incoming\" for invoices, \"outgoing\" for payments\n\"invoice\": \"string\", // encoded invoice, optional\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"preimage\": \"string\", // payment's preimage, optional if unpaid\n\"payment_hash\": \"string\", // Payment hash for the payment\n\"amount\": 123, // value in msats\n\"fees_paid\": 123, // value in msats\n\"created_at\": unixtimestamp, // invoice/payment creation time\n\"expires_at\": unixtimestamp, // invoice expiration time, optional if not applicable\n\"metadata\": {} // generic metadata that can be used to add things like zap/boostagram details for a payer name/comment/etc.\n}\n}"}
{"question": "What does lookup_invoice mean?", "answer": "Request:jsonc\n{\n\"method\": \"lookup_invoice\",\n\"params\": {\n\"payment_hash\": \"31afdf1..\", // payment hash of the invoice, one of payment_hash or invoice is required\n\"invoice\": \"lnbc50n1...\" // invoice to lookup\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"lookup_invoice\",\n\"result\": {\n\"type\": \"incoming\", // \"incoming\" for invoices, \"outgoing\" for payments\n\"invoice\": \"string\", // encoded invoice, optional\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"preimage\": \"string\", // payment's preimage, optional if unpaid\n\"payment_hash\": \"string\", // Payment hash for the payment\n\"amount\": 123, // value in msats\n\"fees_paid\": 123, // value in msats\n\"created_at\": unixtimestamp, // invoice/payment creation time\n\"expires_at\": unixtimestamp, // invoice expiration time, optional if not applicable\n\"settled_at\": unixtimestamp, // invoice/payment settlement time, optional if unpaid\n\"metadata\": {} // generic metadata that can be used to add things like zap/boostagram details for a payer name/comment/etc.\n}\n}\n\nErrors:\n-NOT_FOUND: The invoice could not be found by the given parameters."}
{"question": "What does list_transactions mean?", "answer": "Lists invoices and payments. Iftypeis not specified, both invoices and payments are returned.\nThefromanduntilparameters are timestamps in seconds since epoch. Iffromis not specified, it defaults to 0.\nIfuntilis not specified, it defaults to the current time. Transactions are returned in descending order of creation\ntime.\n\nRequest:jsonc\n{\n\"method\": \"list_transactions\",\n\"params\": {\n\"from\": 1693876973, // starting timestamp in seconds since epoch (inclusive), optional\n\"until\": 1703225078, // ending timestamp in seconds since epoch (inclusive), optional\n\"limit\": 10, // maximum number of invoices to return, optional\n\"offset\": 0, // offset of the first invoice to return, optional\n\"unpaid\": true, // include unpaid invoices, optional, default false\n\"type\": \"incoming\", // \"incoming\" for invoices, \"outgoing\" for payments, undefined for both\n}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"list_transactions\",\n\"result\": {\n\"transactions\": [\n{\n\"type\": \"incoming\", // \"incoming\" for invoices, \"outgoing\" for payments\n\"invoice\": \"string\", // encoded invoice, optional\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"preimage\": \"string\", // payment's preimage, optional if unpaid\n\"payment_hash\": \"string\", // Payment hash for the payment\n\"amount\": 123, // value in msats\n\"fees_paid\": 123, // value in msats\n\"created_at\": unixtimestamp, // invoice/payment creation time\n\"expires_at\": unixtimestamp, // invoice expiration time, optional if not applicable\n\"settled_at\": unixtimestamp, // invoice/payment settlement time, optional if unpaid\n\"metadata\": {} // generic metadata that can be used to add things like zap/boostagram details for a payer name/comment/etc.\n}\n],\n},\n}"}
{"question": "What does get_balance mean?", "answer": "Request:jsonc\n{\n\"method\": \"get_balance\",\n\"params\": {}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"get_balance\",\n\"result\": {\n\"balance\": 10000, // user's balance in msats\n}\n}"}
{"question": "What does get_info mean?", "answer": "Request:jsonc\n{\n\"method\": \"get_info\",\n\"params\": {}\n}\n\nResponse:jsonc\n{\n\"result_type\": \"get_info\",\n\"result\": {\n\"alias\": \"string\",\n\"color\": \"hex string\",\n\"pubkey\": \"hex string\",\n\"network\": \"string\", // mainnet, testnet, signet, or regtest\n\"block_height\": 1,\n\"block_hash\": \"hex string\",\n\"methods\": [\"pay_invoice\", \"get_balance\", \"make_invoice\", \"lookup_invoice\", \"list_transactions\", \"get_info\"], // list of supported methods for this connection\n\"notifications\": [\"payment_received\", \"payment_sent\"], // list of supported notifications for this connection, optional.\n}\n}"}
{"question": "What does payment_received mean?", "answer": "Description: A payment was successfully received by the wallet.\n\nNotification:jsonc\n{\n\"notification_type\": \"payment_received\",\n\"notification\": {\n\"type\": \"incoming\",\n\"invoice\": \"string\", // encoded invoice\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"preimage\": \"string\", // payment's preimage\n\"payment_hash\": \"string\", // Payment hash for the payment\n\"amount\": 123, // value in msats\n\"fees_paid\": 123, // value in msats\n\"created_at\": unixtimestamp, // invoice/payment creation time\n\"expires_at\": unixtimestamp, // invoice expiration time, optional if not applicable\n\"settled_at\": unixtimestamp, // invoice/payment settlement time\n\"metadata\": {} // generic metadata that can be used to add things like zap/boostagram details for a payer name/comment/etc.\n}\n}"}
{"question": "What does payment_sent mean?", "answer": "Description: A payment was successfully sent by the wallet.\n\nNotification:jsonc\n{\n\"notification_type\": \"payment_sent\",\n\"notification\": {\n\"type\": \"outgoing\",\n\"invoice\": \"string\", // encoded invoice\n\"description\": \"string\", // invoice's description, optional\n\"description_hash\": \"string\", // invoice's description hash, optional\n\"preimage\": \"string\", // payment's preimage\n\"payment_hash\": \"string\", // Payment hash for the payment\n\"amount\": 123, // value in msats\n\"fees_paid\": 123, // value in msats\n\"created_at\": unixtimestamp, // invoice/payment creation time\n\"expires_at\": unixtimestamp, // invoice expiration time, optional if not applicable\n\"settled_at\": unixtimestamp, // invoice/payment settlement time\n\"metadata\": {} // generic metadata that can be used to add things like zap/boostagram details for a payer name/comment/etc.\n}\n}"}
{"question": "What does Example pay invoice flow mean?", "answer": "- The user scans the QR code generated by thewallet servicewith theirclientapplication, they follow anostr+walletconnect://deeplink or configure the connection details manually.\n- clientsends an event to thewallet servicewith kind23194. The content is apay_invoicerequest. The private key is the secret from the connection string above.\n- wallet serviceverifies that the author's key is authorized to perform the payment, decrypts the payload and sends the payment.\n- wallet serviceresponds to the event by sending an event with kind23195and content being a response either containing an error message or a preimage."}
{"question": "What does Using a dedicated relay mean?", "answer": "This NIP does not specify any requirements on the type of relays used. However, if the user is using a custodial service it might make sense to use a relay that is hosted by the custodial service. The relay may then enforce authentication to prevent metadata leaks. Not depending on a 3rd party relay would also improve reliability in this case."}
{"question": "What does Example NIP-47 info event mean?", "answer": "jsonc\n{\n\"id\": \"df467db0a9f9ec77ffe6f561811714ccaa2e26051c20f58f33c3d66d6c2b4d1c\",\n\"pubkey\": \"c04ccd5c82fc1ea3499b9c6a5c0a7ab627fbe00a0116110d4c750faeaecba1e2\",\n\"created_at\": 1713883677,\n\"kind\": 13194,\n\"tags\": [\n[\n\"notifications\",\n\"payment_received payment_sent\"\n]\n],\n\"content\": \"pay_invoice pay_keysend get_balance get_info make_invoice lookup_invoice list_transactions multi_pay_invoice multi_pay_keysend sign_message notifications\",\n\"sig\": \"31f57b369459b5306a5353aa9e03be7fbde169bc881c3233625605dd12f53548179def16b9fe1137e6465d7e4d5bb27ce81fd6e75908c46b06269f4233c845d8\"\n}"}
{"question": "What does Proxy Tags mean?", "answer": "draftoptional\n\nNostr events bridged from other protocols such as ActivityPub can link back to the source object by including a\"proxy\"tag, in the form:\n\n[\"proxy\", <id>, <protocol>]\n\nWhere:\n\n- <id>is the ID of the source object. The ID format varies depending on the protocol. The ID must be universally unique, regardless of the protocol.\n- <protocol>is the name of the protocol, e.g.\"activitypub\".\n\nClients may use this information to reconcile duplicated content bridged from other protocols, or to display a link to the source object.\n\nProxy tags may be added to any event kind, and doing so indicates that the event did not originate on the Nostr protocol, and instead originated elsewhere on the web."}
{"question": "What does Supported protocols mean?", "answer": "This list may be extended in the future.\n\n| Protocol | ID format | Example |\n| -------- | --------- | ------- |\n|activitypub| URL |https://gleasonator.com/objects/9f524868-c1a0-4ee7-ad51-aaa23d68b526|\n|atproto| AT URI |at://did:plc:zhbjlbmir5dganqhueg7y4i3/app.bsky.feed.post/3jt5hlibeol2i|\n|rss| URL with guid fragment |https://soapbox.pub/rss/feed.xml#https%3A%2F%2Fsoapbox.pub%2Fblog%2Fmostr-fediverse-nostr-bridge|\n|web| URL |https://twitter.com/jack/status/20|"}
{"question": "What does See also mean?", "answer": "- FEP-fffd: Proxy Objects\n- Mostr bridge"}
{"question": "What does Private Key Encryption mean?", "answer": "draftoptional\n\nThis NIP defines a method by which clients can encrypt (and decrypt) a user's private key with a password."}
{"question": "What does Symmetric Encryption Key derivation mean?", "answer": "PASSWORD = Read from the user. The password should be unicode normalized to NFKC format to ensure that the password can be entered identically on other computers/clients.\n\nLOG_N = Let the user or implementer choose one byte representing a power of 2 (e.g. 18 represents 262,144) which is used as the number of rounds for scrypt. Larger numbers take more time and more memory, and offer better protection:\n\n```\n| LOG_N | MEMORY REQUIRED | APPROX TIME ON FAST COMPUTER |\n|-------|-----------------|----------------------------- |\n| 16    | 64 MiB          | 100 ms                       |\n| 18    | 256 MiB         |                              |\n| 20    | 1 GiB           | 2 seconds                    |\n| 21    | 2 GiB           |                              |\n| 22    | 4 GiB           |                              |\n```\n\nSALT = 16 random bytes\n\nSYMMETRIC_KEY = scrypt(password=PASSWORD, salt=SALT, log_n=LOG_N, r=8, p=1)\n\nThe symmetric key should be 32 bytes long.\n\nThis symmetric encryption key is temporary and should be zeroed and discarded after use and not stored or reused for any other purpose."}
{"question": "What does Encrypting a private key mean?", "answer": "The private key encryption process is as follows:\n\nPRIVATE_KEY = User's private (secret) secp256k1 key as 32 raw bytes (not hex or bech32 encoded!)\n\nKEY_SECURITY_BYTE = one of:\n\n- 0x00 - if the key has been known to have been handled insecurely (stored unencrypted, cut and paste unencrypted, etc)\n- 0x01 - if the key has NOT been known to have been handled insecurely (stored unencrypted, cut and paste unencrypted, etc)\n- 0x02 - if the client does not track this data\n\nASSOCIATED_DATA = KEY_SECURITY_BYTE\n\nNONCE = 24 byte random nonce\n\nCIPHERTEXT = XChaCha20-Poly1305(\nplaintext=PRIVATE_KEY,\nassociated_data=ASSOCIATED_DATA,\nnonce=NONCE,\nkey=SYMMETRIC_KEY\n)\n\nVERSION_NUMBER = 0x02\n\nCIPHERTEXT_CONCATENATION = concat(\nVERSION_NUMBER,\nLOG_N,\nSALT,\nNONCE,\nASSOCIATED_DATA,\nCIPHERTEXT\n)\n\nENCRYPTED_PRIVATE_KEY = bech32_encode('ncryptsec', CIPHERTEXT_CONCATENATION)\n\nThe output prior to bech32 encoding should be 91 bytes long.\n\nThe decryption process operates in the reverse."}
{"question": "What does Password Unicode Normalization mean?", "answer": "The following password input: \"ÅΩẛ̣\"\n- Unicode Codepoints: U+212B U+2126 U+1E9B U+0323\n- UTF-8 bytes: [0xE2, 0x84, 0xAB, 0xE2, 0x84, 0xA6, 0xE1, 0xBA, 0x9B, 0xCC, 0xA3]\n\nShould be converted into the unicode normalized NFKC format prior to use in scrypt: \"ÅΩẛ̣\"\n- Unicode Codepoints: U+00C5 U+03A9 U+1E69\n- UTF-8 bytes: [0xC3, 0x85, 0xCE, 0xA9, 0xE1, 0xB9, 0xA9]"}
{"question": "What does On Key Derivation mean?", "answer": "Passwords make poor cryptographic keys. Prior to use as a cryptographic key, two things need to happen:\n\n- An encryption key needs to be deterministically created from the password such that is has a uniform functionally random distribution of bits, such that the symmetric encryption algorithm's assumptions are valid, and\n- A slow irreversible algorithm should be injected into the process, so that brute-force attempts to decrypt by trying many passwords are severely hampered.\n\nThese are achieved using a password-based key derivation function. We use scrypt, which has been proven to be maximally memory hard and which several cryptographers have indicated to the author is better than argon2 even though argon2 won a competition in 2015."}
{"question": "What does On the symmetric encryption algorithm mean?", "answer": "XChaCha20-Poly1305 is typically favored by cryptographers over AES and is less associated with the U.S. government.  It (or it's earlier variant without the 'X') is gaining wide usage, is used in TLS and OpenSSH, and is available in most modern crypto libraries."}
{"question": "What does Recommendations mean?", "answer": "It is not recommended that users publish these encrypted private keys to nostr, as cracking a key may become easier when an attacker can amass many encrypted private keys.\n\nIt is recommended that clients zero out the memory of passwords and private keys before freeing that memory."}
{"question": "What does Search Capability mean?", "answer": "draftoptional"}
{"question": "What does searchfilter field mean?", "answer": "A newsearchfield is introduced forREQmessages from clients:jsonc\n{\n// other fields on filter object...\n\"search\": <string>\n}searchfield is a string describing a query in a human-readable form, i.e. \"best nostr apps\".\nRelays SHOULD interpret the query to the best of their ability and return events that match it.\nRelays SHOULD perform matching againstcontentevent field, and MAY perform\nmatching against other fields if that makes sense in the context of a specific kind.\n\nResults SHOULD be returned in descending order by quality of search result (as defined by the implementation),\nnot by the usual.created_at. Thelimitfilter SHOULD be applied after sorting by matching score.\nA query string may containkey:valuepairs (two words separated by colon), these are extensions, relays SHOULD ignore\nextensions they don't support.\n\nClients may specify several search filters, i.e.[\"REQ\", \"\", { \"search\": \"orange\" }, { \"kinds\": [1, 2], \"search\": \"purple\" }]. Clients may\nincludekinds,idsand other filter field to restrict the search results to particular event kinds.\n\nClients SHOULD use the supported_nips field to learn if a relay supportssearchfilter. Clients MAY sendsearchfilter queries to any relay, if they are prepared to filter out extraneous responses from relays that do not support this NIP.\n\nClients SHOULD query several relays supporting this NIP to compensate for potentially different\nimplementation details between relays.\n\nClients MAY verify that events returned by a relay match the specified query in a way that suits the\nclient's use case, and MAY stop querying relays that have low precision.\n\nRelays SHOULD exclude spam from search results by default if they support some form of spam filtering."}
{"question": "What does Extensions mean?", "answer": "Relay MAY support these extensions:\n-include:spam- turn off spam filtering, if it was enabled by default\n-domain:<domain>- include only events from users whose valid nip05 domain matches the domain\n-language:<two letter ISO 639-1 language code>- include only events of a specified language\n-sentiment:<negative/neutral/positive>- include only events of a specific sentiment\n-nsfw:<true/false>- include or exclude nsfw events (default: true)"}
{"question": "What does Lists mean?", "answer": "draftoptional\n\nThis NIP defines lists of things that users can create. Lists can contain references to anything, and these references can bepublicorprivate.\n\nPublic items in a list are specified in the eventtagsarray, while private items are specified in a JSON array that mimics the structure of the eventtagsarray, but stringified and encrypted using the same scheme fromNIP-04(the shared key is computed using the author's public and private key) and stored in the.content.\n\nWhen new items are added to an existing list, clients SHOULD append them to the end of the list, so they are stored in chronological order."}
{"question": "What does Standard lists mean?", "answer": "Standard lists use normal replaceable events, meaning users may only have a single list of each kind. They have special meaning and clients may rely on them to augment a user's profile or browsing experience.\n\nFor example,mute listcan contain the public keys of spammers and bad actors users don't want to see in their feeds or receive annoying notifications from.\n\n| name              | kind  | description                                                 | expected tag items                                                                                  |\n| ---               | ---   | ---                                                         | ---                                                                                                 |\n| Follow list       |     3 | microblogging basic follow list, seeNIP-02|\"p\"(pubkeys -- with optional relay hint and petname)                                             |\n| Mute list         | 10000 | things the user doesn't want to see in their feeds          |\"p\"(pubkeys),\"t\"(hashtags),\"word\"(lowercase string),\"e\"(threads)                     |\n| Pinned notes      | 10001 | events the user intends to showcase in their profile page   |\"e\"(kind:1 notes)                                                                                |\n| Read/write relays | 10002 | where a user publishes to and where they expect mentions    | seeNIP-65|\n| Bookmarks         | 10003 | uncategorized, \"global\" list of things a user wants to save |\"e\"(kind:1 notes),\"a\"(kind:30023 articles),\"t\"(hashtags),\"r\"(URLs)                   |\n| Communities       | 10004 |NIP-72communities the user belongs to             |\"a\"(kind:34550 community definitions)                                                            |\n| Public chats      | 10005 |NIP-28chat channels the user is in                |\"e\"(kind:40 channel definitions)                                                                 |\n| Blocked relays    | 10006 | relays clients should never connect to                      |\"relay\"(relay URLs)                                                                              |\n| Search relays     | 10007 | relays clients should use when performing search queries    |\"relay\"(relay URLs)                                                                              |\n| Simple groups     | 10009 |NIP-29groups the user is in                       |\"group\"(NIP-29group id + relay URL + optional group name),\"r\"for each relay in use |\n| Favorite relays   | 10012 | user favorite relays and pointers to relay sets             |\"relay\"(relay URLs) and\"a\"(kind:30002 relay set)                                             |\n| Interests         | 10015 | topics a user may be interested in and pointers             |\"t\"(hashtags) and\"a\"(kind:30015 interest set)                                                |\n| Media follows     | 10020 | multimedia (photos, short video) follow list                |\"p\"(pubkeys -- with optional relay hint and petname)                                             |\n| Emojis            | 10030 | user preferred emojis and pointers to emoji sets            |\"emoji\"(seeNIP-30) and\"a\"(kind:30030 emoji set)                                    |\n| DM relays         | 10050 | Where to receiveNIP-17direct messages            |\"relay\"(seeNIP-17)                                                                     |\n| Good wiki authors | 10101 |NIP-54user recommended wiki authors               |\"p\"(pubkeys)                                                                                     |\n| Good wiki relays  | 10102 |NIP-54relays deemed to only host useful articles  |\"relay\"(relay URLs)                                                                              |"}
{"question": "What does Sets mean?", "answer": "Sets are lists with well-defined meaning that can enhance the functionality and the UI of clients that rely on them. Unlike standard lists, users are expected to have more than one set of each kind, therefore each of them must be assigned a different\"d\"identifier.\n\nFor example,relay setscan be displayed in a dropdown UI to give users the option to switch to which relays they will publish an event or from which relays they will read the replies to an event;curation setscan be used by apps to showcase curations made by others tagged to different topics.\n\nAside from their main identifier, the\"d\"tag, sets can optionally have a\"title\", an\"image\"and a\"description\"tags that can be used to enhance their UI.\n\n| name                  | kind  | description                                                                                  | expected tag items                                                                  |\n| ---                   | ---   | ---                                                                                          | ---                                                                                 |\n| Follow sets           | 30000 | categorized groups of users a client may choose to check out in different circumstances      |\"p\"(pubkeys)                                                                     |\n| Relay sets            | 30002 | user-defined relay groups the user can easily pick and choose from during various operations |\"relay\"(relay URLs)                                                              |\n| Bookmark sets         | 30003 | user-defined bookmarks categories , for when bookmarks must be in labeled separate groups    |\"e\"(kind:1 notes),\"a\"(kind:30023 articles),\"t\"(hashtags),\"r\"(URLs)   |\n| Curation sets         | 30004 | groups of articles picked by users as interesting and/or belonging to the same category      |\"a\"(kind:30023 articles),\"e\"(kind:1 notes)                                   |\n| Curation sets         | 30005 | groups of videos picked by users as interesting and/or belonging to the same category        |\"a\"(kind:21 videos)                                                              |\n| Kind mute sets        | 30007 | mute pubkeys by kinds\"d\"tag MUST be the kind string                                   |\"p\"(pubkeys)                                                                     |\n| Interest sets         | 30015 | interest topics represented by a bunch of \"hashtags\"                                         |\"t\"(hashtags)                                                                    |\n| Emoji sets            | 30030 | categorized emoji groups                                                                     |\"emoji\"(seeNIP-30)                                                     |\n| Release artifact sets | 30063 | group of artifacts of a software release                                                     |\"e\"(kind:1063file metadataevents),\"a\"(software application event) |\n| App curation sets     | 30267 | references to multiple software applications                                                 |\"a\"(software application event)                                                  |\n| Calendar              | 31924 | a set of events categorized in any way                                                       |\"a\"(calendar event event)                                                        |\n| Starter packs         | 39089 | a named set of profiles to be shared around with the goal of being followed together         |\"p\"(pubkeys)                                                                     |\n| Media starter packs   | 39092 | same as above, but specific to multimedia (photos, short video) clients                      |\"p\"(pubkeys)                                                                     |"}
{"question": "What does Deprecated standard lists mean?", "answer": "Some clients have used these lists in the past, but they should work on transitioning to thestandard formatsabove.\n\n| kind  | \"d\" tag         | use instead                   |\n| ---   | ---             | ---                           |\n| 30000 |\"mute\"| kind 10000mute list|\n| 30001 |\"pin\"| kind 10001pin list|\n| 30001 |\"bookmark\"| kind 10003bookmarks list|\n| 30001 |\"communities\"| kind 10004communities list|"}
{"question": "What does Amute listwith some public items and some encrypted items mean?", "answer": "json\n{\n\"id\": \"a92a316b75e44cfdc19986c634049158d4206fcc0b7b9c7ccbcdabe28beebcd0\",\n\"pubkey\": \"854043ae8f1f97430ca8c1f1a090bdde6488bd5115c7a45307a2a212750ae4cb\",\n\"created_at\": 1699597889,\n\"kind\": 10000,\n\"tags\": [\n[\"p\", \"07caba282f76441955b695551c3c5c742e5b9202a3784780f8086fdcdc1da3a9\"],\n[\"p\", \"a55c15f5e41d5aebd236eca5e0142789c5385703f1a7485aa4b38d94fd18dcc4\"]\n],\n\"content\": \"TJob1dQrf2ndsmdbeGU+05HT5GMnBSx3fx8QdDY/g3NvCa7klfzgaQCmRZuo1d3WQjHDOjzSY1+MgTK5WjewFFumCcOZniWtOMSga9tJk1ky00tLoUUzyLnb1v9x95h/iT/KpkICJyAwUZ+LoJBUzLrK52wNTMt8M5jSLvCkRx8C0BmEwA/00pjOp4eRndy19H4WUUehhjfV2/VV/k4hMAjJ7Bb5Hp9xdmzmCLX9+64+MyeIQQjQAHPj8dkSsRahP7KS3MgMpjaF8nL48Bg5suZMxJayXGVp3BLtgRZx5z5nOk9xyrYk+71e2tnP9IDvSMkiSe76BcMct+m7kGVrRcavDI4n62goNNh25IpghT+a1OjjkpXt9me5wmaL7fxffV1pchdm+A7KJKIUU3kLC7QbUifF22EucRA9xiEyxETusNludBXN24O3llTbOy4vYFsq35BeZl4v1Cse7n2htZicVkItMz3wjzj1q1I1VqbnorNXFgllkRZn4/YXfTG/RMnoK/bDogRapOV+XToZ+IvsN0BqwKSUDx+ydKpci6htDRF2WDRkU+VQMqwM0CoLzy2H6A2cqyMMMD9SLRRzBg==?iv=S3rFeFr1gsYqmQA7bNnNTQ==\",\n\"sig\": \"1173822c53261f8cffe7efbf43ba4a97a9198b3e402c2a1df130f42a8985a2d0d3430f4de350db184141e45ca844ab4e5364ea80f11d720e36357e1853dba6ca\"\n}"}
{"question": "What does Acuration setof articles and notes about yaks mean?", "answer": "json\n{\n\"id\": \"567b41fc9060c758c4216fe5f8d3df7c57daad7ae757fa4606f0c39d4dd220ef\",\n\"pubkey\": \"d6dc95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c\",\n\"created_at\": 1695327657,\n\"kind\": 30004,\n\"tags\": [\n[\"d\", \"jvdy9i4\"],\n[\"title\", \"Yaks\"],\n[\"image\", \"https://cdn.britannica.com/40/188540-050-9AC748DE/Yak-Himalayas-Nepal.jpg\"],\n[\"description\", \"The domestic yak, also known as the Tartary ox, grunting ox, or hairy cattle, is a species of long-haired domesticated cattle found throughout the Himalayan region of the Indian subcontinent, the Tibetan Plateau, Gilgit-Baltistan, Tajikistan and as far north as Mongolia and Siberia.\"],\n[\"a\", \"30023:26dc95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c:95ODQzw3ajNoZ8SyMDOzQ\"],\n[\"a\", \"30023:54af95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c:1-MYP8dAhramH9J5gJWKx\"],\n[\"a\", \"30023:f8fe95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c:D2Tbd38bGrFvU0bIbvSMt\"],\n[\"e\", \"d78ba0d5dce22bfff9db0a9e996c9ef27e2c91051de0c4e1da340e0326b4941e\"]\n],\n\"content\": \"\",\n\"sig\": \"a9a4e2192eede77e6c9d24ddfab95ba3ff7c03fbd07ad011fff245abea431fb4d3787c2d04aad001cb039cb8de91d83ce30e9a94f82ac3c5a2372aa1294a96bd\"\n}"}
{"question": "What does Arelease artifact setof an Example App mean?", "answer": "jsonc\n{\n\"id\": \"567b41fc9060c758c4216fe5f8d3df7c57daad7ae757fa4606f0c39d4dd220ef\",\n\"pubkey\": \"d6dc95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c\",\n\"created_at\": 1695327657,\n\"kind\": 30063,\n\"content\": \"Release notes in markdown\",\n\"tags\": [\n[\"d\", \"com.example.app@0.0.1\"],\n[\"e\", \"d78ba0d5dce22bfff9db0a9e996c9ef27e2c91051de0c4e1da340e0326b4941e\"], // Windows exe\n[\"e\", \"f27e2c91051de0c4e1da0d5dce22bfff9db0a9340e0326b4941ed78bae996c9e\"], // MacOS dmg\n[\"e\", \"9d24ddfab95ba3ff7c03fbd07ad011fff245abea431fb4d3787c2d04aad02332\"], // Linux AppImage\n[\"e\", \"340e0326b340e0326b4941ed78ba340e0326b4941ed78ba340e0326b49ed78ba\"], // PWA\n[\"a\", \"32267:d6dc95542e18b8b7aec2f14610f55c335abebec76f3db9e58c254661d0593a0c:com.example.app\"] // Reference to parent software application\n],\n\"content\": \"Example App is a decentralized marketplace for apps\",\n\"sig\": \"a9a4e2192eede77e6c9d24ddfab95ba3ff7c03fbd07ad011fff245abea431fb4d3787c2d04aad001cb039cb8de91d83ce30e9a94f82ac3c5a2372aa1294a96bd\"\n}"}
{"question": "What does Anapp curation set mean?", "answer": "jsonc\n{\n\"id\": \"d8037fa866eb5acd2159960b3ada7284172f7d687b5289cc72a96ca2b431b611\",\n\"pubkey\": \"78ce6faa72264387284e647ba6938995735ec8c7d5c5a65737e55130f026307d\",\n\"sig\": \"c1ce0a04521c020ae7485307cd86285530c1f778766a3fd594d662a73e7c28f307d7cd9a9ab642ae749fce62abbabb3a32facfe8d19a21fba551b60fae863d95\",\n\"kind\": 30267,\n\"created_at\": 1729302793,\n\"content\": \"My nostr app selection\",\n\"tags\": [\n[\"d\", \"nostr\"],\n[\"a\", \"32267:7579076d9aff0a4cfdefa7e2045f2486c7e5d8bc63bfc6b45397233e1bbfcb19:com.example.app1\"],\n[\"a\", \"32267:045f2486c7e5d8bc63bfc6b45397233e1bbfcb197579076d9aff0a4cfdefa7e2:net.example.app2\"],\n[\"a\", \"32267:264387284e647ba6938995735ec8c7d5c5a6f026307d78ce6faa725737e55130:pl.code.app3\"]\n]\n}"}
{"question": "What does Encryption process pseudocode mean?", "answer": "scala\nval private_items = [\n[\"p\", \"07caba282f76441955b695551c3c5c742e5b9202a3784780f8086fdcdc1da3a9\"],\n[\"a\", \"a55c15f5e41d5aebd236eca5e0142789c5385703f1a7485aa4b38d94fd18dcc4\"],\n]\nval base64blob = nip04.encrypt(json.encode_to_string(private_items))\nevent.content = base64blob"}
{"question": "What does Calendar Events mean?", "answer": "draftoptional\n\nThis specification defines calendar events representing an occurrence at a specific moment or between moments. These calendar events areaddressableand deletable perNIP-09.\n\nUnlike the termcalendar eventspecific to this NIP, the termeventis used broadly in all the NIPs to describe any Nostr event. The distinction is being made here to discern between the two terms."}
{"question": "What does Date-Based Calendar Event mean?", "answer": "This kind of calendar event starts on a date and ends before a different date in the future. Its use is appropriate for all-day or multi-day events where time and time zone hold no significance. e.g., anniversary, public holidays, vacation days.\n\nIt's anaddressable eventofkind:31922.\n\nThe.contentof these events SHOULD be a description of the calendar event.\n\nAside from the common tags, this also takes the following tags:\n\n- start(required) inclusive start date in ISO 8601 format (YYYY-MM-DD). Must be less thanend, if it exists.\n- end(optional) exclusive end date in ISO 8601 format (YYYY-MM-DD). If omitted, the calendar event ends on the same date asstart.\n\nExample:\n\n```yaml\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\":,\n\"kind\": 31922,\n\"content\": \"\",\n\"tags\": [\n[\"d\", \"\"],\n\n```\n[\"title\", \"<title of calendar event>\"],\n\n// dates\n[\"start\", \"<YYYY-MM-DD>\"],\n[\"end\", \"<YYYY-MM-DD>\"],\n\n// location\n[\"location\", \"<location>\"],\n[\"g\", \"<geohash>\"],\n\n// participants\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\", \"<role>\"],\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\", \"<role>\"],\n```\n\n]\n}\n```"}
{"question": "What does Time-Based Calendar Event mean?", "answer": "This kind of calendar event spans between a start time and end time.\n\nIt's anaddressable eventofkind:31923.\n\nThe.contentof these events should be a description of the calendar event. It is required but can be an empty string.\n\nAside from the common tags, this also takes the following tags:\n\n- start(required) inclusive start Unix timestamp in seconds. Must be less thanend, if it exists.\n- end(optional) exclusive end Unix timestamp in seconds. If omitted, the calendar event ends instantaneously.\n- start_tzid(optional) time zone of the start timestamp, as defined by the IANA Time Zone Database. e.g.,America/Costa_Rica\n- end_tzid(optional) time zone of the end timestamp, as defined by the IANA Time Zone Database. e.g.,America/Costa_Rica. If omitted andstart_tzidis provided, the time zone of the end timestamp is the same as the start timestamp.\n\n```yaml\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\":,\n\"kind\": 31923,\n\"content\": \"\",\n\"tags\": [\n[\"d\", \"\"],\n\n```\n[\"title\", \"<title of calendar event>\"],\n[\"summary\", \"<brief description of the calendar event>\"],\n[\"image\", \"<string with image URI>\"],\n\n// timestamps\n[\"start\", \"<unix timestamp in seconds>\"],\n[\"end\", \"<unix timestamp in seconds>\"],\n\n[\"start_tzid\", \"<IANA Time Zone Database identifier>\"],\n[\"end_tzid\", \"<IANA Time Zone Database identifier>\"],\n\n// location\n[\"location\", \"<location>\"],\n[\"g\", \"<geohash>\"],\n\n// participants\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\", \"<role>\"],\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\", \"<role>\"],\n```\n\n]\n}\n```"}
{"question": "What does Calendar mean?", "answer": "A calendar is a collection of calendar events, represented as a customaddressable listevent using kind31924. A user can have multiple calendars. One may create a calendar to segment calendar events for specific purposes. e.g., personal, work, travel, meetups, and conferences.\n\nThe.contentof these events should be a detailed description of the calendar. It is required but can be an empty string.\n\n- d(required) universally unique identifier. Generated by the client creating the calendar.\n- title(required) calendar title\n- a(repeated) reference tag to kind31922or31923calendar event being responded to\n\nyaml\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\": <unix timestamp in seconds>,\n\"kind\": 31924,\n\"content\": \"<description of calendar>\",\n\"tags\": [\n[\"d\", \"<random-identifier>\"],\n[\"title\", \"<calendar title>\"],\n[\"a\", \"<31922 or 31923>:<calendar event author pubkey>:<d-identifier of calendar event>\", \"<optional relay url>\"],\n[\"a\", \"<31922 or 31923>:<calendar event author pubkey>:<d-identifier of calendar event>\", \"<optional relay url>\"]\n]\n}"}
{"question": "What does Calendar Event RSVP mean?", "answer": "A calendar event RSVP is a response to a calendar event to indicate a user's attendance intention.\n\nIf a calendar event tags a pubkey, that can be interpreted as the calendar event creator inviting that user to attend. Clients MAY choose to prompt the user to RSVP for the calendar event.\n\nAny user may RSVP, even if they were not tagged on the calendar event. Clients MAY choose to prompt the calendar event creator to invite the user who RSVP'd. Clients also MAY choose to ignore these RSVPs.\n\nThis NIP is intentionally not defining who is authorized to attend a calendar event if the user who RSVP'd has not been tagged. It is up to the calendar event creator to determine the semantics.\n\nThis NIP is also intentionally not defining what happens if a calendar event changes after an RSVP is submitted.\n\nThe RSVP MUST have anatag of the event coordinates to the calendar event, and optionally anetag of the id of the specific calendar event revision. If anetag is present, clients SHOULD interpret it as an indication that the RSVP is a response to that revision of the calendar event, and MAY interpret it to not necessarily apply to other revisions of the calendar event.\n\nThe RSVP MAY tag the author of the calendar event it is in response to using aptag so that clients can easily query all RSVPs that pertain to the author.\n\nThe RSVP is anaddressable eventofkind:31925.\n\nThe.contentof these events is optional and should be a free-form note that adds more context to this calendar event response.\n\nThe list of tags is as follows:\n\n- a(required) coordinates to a kind31922or31923calendar event being responded to.\n- e(optional) event id of a kind31922or31923calendar event being responded to.\n- d(required) universally unique identifier. Generated by the client creating the calendar event RSVP.\n- status(required)accepted,declined, ortentative. Determines attendance status to the referenced calendar event.\n- fb(optional)freeorbusy. Determines if the user would be free or busy for the duration of the calendar event. This tag must be omitted or ignored if thestatuslabel is set todeclined.\n- p(optional) pubkey of the author of the calendar event being responded to.\n\nyaml\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\": <unix timestamp in seconds>,\n\"kind\": 31925,\n\"content\": \"<note>\",\n\"tags\": [\n[\"e\", \"<kind 31922 or 31923 event id\", \"<optional recommended relay URL>\"]\n[\"a\", \"<31922 or 31923>:<calendar event author pubkey>:<d-identifier of calendar event>\", \"<optional recommended relay URL>\"],\n[\"d\", \"<random-identifier>\"],\n[\"status\", \"<accepted/declined/tentative>\"],\n[\"fb\", \"<free/busy>\"],\n[\"p\", \"<hex pubkey of kind 31922 or 31923 event>\", \"<optional recommended relay URL>\"]\n]\n}"}
{"question": "What does Unsolved Limitations mean?", "answer": "- No private events"}
{"question": "What does Recurring Calendar Events mean?", "answer": "Recurring calendar events come with a lot of complexity, making it difficult for software and humans to deal with. This complexity includes time zone differences between invitees, daylight savings, leap years, multiple calendar systems, one-off changes in schedule or other metadata, etc.\n\nThis NIP intentionally omits support for recurring calendar events and pushes that complexity up to clients to manually implement if they desire. i.e., individual calendar events with duplicated metadata represent recurring calendar events."}
{"question": "What does Live Activities mean?", "answer": "draftoptional\n\nService providers want to offer live activities to the Nostr network in such a way that participants can easily log and query by clients. This NIP describes a general framework to advertise the involvement of pubkeys in such live activities."}
{"question": "What does Live Event mean?", "answer": "A special event withkind:30311\"Live Event\" is defined as anaddressable eventof publicptags. Eachptag SHOULD have adisplayablemarker name for the current role (e.g.Host,Speaker,Participant) of the user in the event and the relay information MAY be empty. This event will be constantly updated as participants join and leave the activity.\n\nFor example:\n\njsonc\n{\n\"kind\": 30311,\n\"tags\": [\n[\"d\", \"<unique identifier>\"],\n[\"title\", \"<name of the event>\"],\n[\"summary\", \"<description>\"],\n[\"image\", \"<preview image url>\"],\n[\"t\", \"hashtag\"]\n[\"streaming\", \"<url>\"],\n[\"recording\", \"<url>\"], // used to place the edited video once the activity is over\n[\"starts\", \"<unix timestamp in seconds>\"],\n[\"ends\", \"<unix timestamp in seconds>\"],\n[\"status\", \"<planned, live, ended>\"],\n[\"current_participants\", \"<number>\"],\n[\"total_participants\", \"<number>\"],\n[\"p\", \"91cf9..4e5ca\", \"wss://provider1.com/\", \"Host\", \"<proof>\"],\n[\"p\", \"14aeb..8dad4\", \"wss://provider2.com/nostr\", \"Speaker\"],\n[\"p\", \"612ae..e610f\", \"ws://provider3.com/ws\", \"Participant\"],\n[\"relays\", \"wss://one.com\", \"wss://two.com\", /*...*/],\n[\"pinned\", \"<event id of pinned live chat message>\"],\n],\n\"content\": \"\",\n// other fields...\n}\n\nA distinctdtag should be used for each activity. All other tags are optional.\n\nProviders SHOULD keep the participant list small (e.g. under 1000 users) and, when limits are reached, Providers SHOULD select which participants get named in the event. Clients should not expect a comprehensive list. Once the activity ends, the event can be deleted or updated to summarize the activity and provide async content (e.g. recording of the event).\n\nClients are expected to subscribe tokind:30311events in general or for given follow lists and statuses. Clients MAY display participants' roles in activities as well as access points to join the activity.\n\nLive Activity management clients are expected to constantly updatekind:30311during the event. Clients MAY choose to considerstatus=liveevents after 1hr without any update asended. Thestartsandendstimestamp SHOULD be updated when the status changes to and fromlive\n\nThe activity MUST be linked to using theNIP-19naddrcode along with theatag."}
{"question": "What does Proof of Agreement to Participate mean?", "answer": "Event owners can add proof as the 5th term in eachptag to clarify the participant's agreement in joining the event. The proof is a signed SHA256 of the completeaTag of the event (kind:pubkey:dTag) by eachp's private key, encoded in hex.\n\nClients MAY only display participants if the proof is available or MAY display participants as \"invited\" if the proof is not available.\n\nThis feature is important to avoid malicious event owners adding large account holders to the event, without their knowledge, to lure their followers into the malicious owner's trap."}
{"question": "What does Live Chat Message mean?", "answer": "Eventkind:1311is live chat's channel message. Clients MUST include theatag of the activity. Anetag denotes the direct parent message this post is replying to.\n\njsonc\n{\n\"kind\": 1311,\n\"tags\": [\n[\"a\", \"30311:<Community event author pubkey>:<d-identifier of the community>\", \"<Optional relay url>\", \"root\"],\n],\n\"content\": \"Zaps to live streams is beautiful.\",\n// other fields...\n}\n\nqtags MAY be used when citing events in the.contentwithNIP-21.\n\njson\n[\"q\", \"<event-id> or <event-address>\", \"<relay-url>\", \"<pubkey-if-a-regular-event>\"]\n\nHosts may choose to pin one or more live chat messages by updating thepinnedtags in the live event kind30311."}
{"question": "What does Live Streaming mean?", "answer": "json\n{\n\"id\": \"57f28dbc264990e2c61e80a883862f7c114019804208b14da0bff81371e484d2\",\n\"pubkey\": \"1597246ac22f7d1375041054f2a4986bd971d8d196d7997e48973263ac9879ec\",\n\"created_at\": 1687182672,\n\"kind\": 30311,\n\"tags\": [\n[\"d\", \"demo-cf-stream\"],\n[\"title\", \"Adult Swim Metalocalypse\"],\n[\"summary\", \"Live stream from IPTV-ORG collection\"],\n[\"streaming\", \"https://adultswim-vodlive.cdn.turner.com/live/metalocalypse/stream.m3u8\"],\n[\"starts\", \"1687182672\"],\n[\"status\", \"live\"],\n[\"t\", \"animation\"],\n[\"t\", \"iptv\"],\n[\"image\", \"https://i.imgur.com/CaKq6Mt.png\"]\n],\n\"content\": \"\",\n\"sig\": \"5bc7a60f5688effa5287244a24768cbe0dcd854436090abc3bef172f7f5db1410af4277508dbafc4f70a754a891c90ce3b966a7bc47e7c1eb71ff57640f3d389\"\n}"}
{"question": "What does Live Streaming chat message mean?", "answer": "json\n{\n\"id\": \"97aa81798ee6c5637f7b21a411f89e10244e195aa91cb341bf49f718e36c8188\",\n\"pubkey\": \"3f770d65d3a764a9c5cb503ae123e62ec7598ad035d836e2a810f3877a745b24\",\n\"created_at\": 1687286726,\n\"kind\": 1311,\n\"tags\": [\n[\"a\", \"30311:1597246ac22f7d1375041054f2a4986bd971d8d196d7997e48973263ac9879ec:demo-cf-stream\", \"\", \"root\"]\n],\n\"content\": \"Zaps to live streams is beautiful.\",\n\"sig\": \"997f62ddfc0827c121043074d50cfce7a528e978c575722748629a4137c45b75bdbc84170bedc723ef0a5a4c3daebf1fef2e93f5e2ddb98e5d685d022c30b622\"\n}"}
{"question": "What does Wiki mean?", "answer": "draftoptional\n\nThis NIP defineskind:30818(anaddressable event) for descriptions (or encyclopedia entries) of particular subjects, and it's expected that multiple people will write articles about the exact same subjects, with either small variations or completely independent content.\n\nArticles are identified by lowercase, normalized asciidtags."}
{"question": "What does Articles mean?", "answer": "json\n{\n\"content\": \"A wiki is a hypertext publication collaboratively edited and managed by its own audience.\",\n\"tags\": [\n[\"d\", \"wiki\"],\n[\"title\", \"Wiki\"],\n]\n}"}
{"question": "What does dtag normalization rules mean?", "answer": "- Any non-letter character MUST be converted to a-.\n- All letters MUST be converted to lowercase."}
{"question": "What does Optional extra tags mean?", "answer": "- title: for when the display title should be different from thedtag.\n- summary: for display in lists.\n- aande: for referencing the original event a wiki article was forked from."}
{"question": "What does Merge Requests mean?", "answer": "Eventkind:818represents a request to merge from a forked article into the source. It is directed to a pubkey and references the original article and the modified event.\n\n[INSERT EVENT EXAMPLE]"}
{"question": "What does Redirects mean?", "answer": "Eventkind:30819is also defined to stand for \"wiki redirects\", i.e. if one thinksShell structureshould redirect toThin-shell structurethey can issue one of these events instead of replicating the content. These events can be used for automatically redirecting between articles on a client, but also for generating crowdsourced \"disambiguation\" pages (common in Wikipedia).\n\n[INSERT EVENT EXAMPLE]"}
{"question": "What does How to decide what article to display mean?", "answer": "As there could be many articles for each given name, some kind of prioritization must be done by clients. Criteria for this should vary between users and clients, but some means that can be used are described below:"}
{"question": "What does Contact lists mean?", "answer": "NIP-02contact lists can form the basis of a recommendation system that is then expanded with relay lists and reaction lists through nested queries. These lists form a good starting point only because they are so widespread."}
{"question": "What does Wiki-related contact lists mean?", "answer": "NIP-51lists can also be used to create a list of users that are trusted only in the context of wiki authorship or wiki curationship."}
{"question": "What does Forks mean?", "answer": "Wiki-events can tag other wiki-events with aforkmarker to specify that this event came from a different version. Bothaandetags SHOULD be used and have theforkmarker applied, to identify the exact version it was forked from."}
{"question": "What does Deference mean?", "answer": "Wiki-events can tag other wiki-events with adefermarker to indicate that it considers someone else's entry as a \"better\" version of itself. If using adefermarker bothaandetags SHOULD be used.\n\nThis is a stronger signal of trust than a+reaction.\n\nThis marker is useful when a user edits someone else's entry; if the original author includes the editor's changes and the editor doesn't want to keep/maintain an independent version, thelinktag could effectively be a considered a \"deletion\" of the editor's version and putting that pubkey's WoT weight behind the original author's version."}
{"question": "What does Why Asciidoc? mean?", "answer": "Wikitext isgarbageand Markdown is not powerful enough (besides being too freeform and unspecified and prone to generate incompatibilities in the future).\n\nAsciidoc has a strict spec, multiple implementations in many languages, and support for features that are very much necessary in a wiki article, likesidebars,tables(with rich markup inside cells), many levels ofheadings,footnotes,superscriptandsubscriptmarkup anddescription lists. It is also arguably easier to read in its plaintext format than Markdown (and certainly much better than Wikitext)."}
{"question": "What does Appendix 1: Merge requests mean?", "answer": "Users can request other users to get their entries merged into someone else's entry by creating akind:818event.\n\njson\n{\n\"content\": \"I added information about how to make hot ice-creams\",\n\"kind\": 818,\n\"tags\": [\n[ \"a\", \"30818:<destination-pubkey>:hot-ice-creams\", \"<relay-url>\" ],\n[ \"e\", \"<version-against-which-the-modification-was-made>\", \"<relay-url>\" ],\n[ \"p\", \"<destination-pubkey>\" ],\n[ \"e\", \"<version-to-be-merged>\", \"<relay-url>\", \"source\" ]\n]\n}\n\n.content: an optional explanation detailing why this merge is being requested.atag: tag of the article which should be modified (i.e. the target of this merge request).etag: optional version of the article in which this modifications is basedetag withsourcemarker: the ID of the event that should be merged. This event id MUST be of akind:30818as defined in this NIP.\n\nThe destination-pubkey is the pubkey being requested to merge something into their article can create [[NIP-25]] reactions that tag thekind:818event with+or-"}
{"question": "What does Android Signer Application mean?", "answer": "draftoptional\n\nThis NIP describes a method for 2-way communication between an Android signer and any Nostr client on Android. The Android signer is an Android Application and the client can be a web client or an Android application."}
{"question": "What does Usage for Android applications mean?", "answer": "The Android signer uses Intents (to accept/reject permissions manually) and Content Resolvers (to accept/reject permissions automatically in background if the user allowed it) to communicate between applications.\n\nTo be able to use the Android signer in your application you should add this to your AndroidManifest.xml:\n\nxml\n<queries>\n<intent>\n<action android:name=\"android.intent.action.VIEW\" />\n<category android:name=\"android.intent.category.BROWSABLE\" />\n<data android:scheme=\"nostrsigner\" />\n</intent>\n</queries>\n\nThen you can use this function to check if there's a signer application installed:\n\nkotlin\nfun isExternalSignerInstalled(context: Context): Boolean {\nval intent =\nIntent().apply {\naction = Intent.ACTION_VIEW\ndata = Uri.parse(\"nostrsigner:\")\n}\nval infos = context.packageManager.queryIntentActivities(intent, 0)\nreturn infos.size > 0\n}"}
{"question": "What does Using Intents mean?", "answer": "To get the result back from the Signer Application you should useregisterForActivityResultorrememberLauncherForActivityResultin Kotlin. If you are using another framework check the documentation of your framework or a third party library to get the result.\n\nkotlin\nval launcher = rememberLauncherForActivityResult(\ncontract = ActivityResultContracts.StartActivityForResult(),\nonResult = { result ->\nif (result.resultCode != Activity.RESULT_OK) {\nToast.makeText(\ncontext,\n\"Sign request rejected\",\nToast.LENGTH_SHORT\n).show()\n} else {\nval result = activityResult.data?.getStringExtra(\"result\")\n// Do something with result ...\n}\n}\n)\n\nCreate the Intent using thenostrsignerscheme:\n\nkotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$content\"))\n\nSet the Signer package name after you receive the response fromget_public_keymethod:\n\nkotlin\nintent.`package` = \"com.example.signer\"\n\nIf you are sending multiple intents without awaiting you can add some intent flags to sign all events without opening multiple times the signer\n\nkotlin\nintent.addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP or Intent.FLAG_ACTIVITY_CLEAR_TOP)\n\nIf you are developing a signer application them you need to add this to your AndroidManifest.xml so clients can use the intent flags above\n\nkotlin\nandroid:launchMode=\"singleTop\"\n\nSigner MUST answer multiple permissions with an array of results\n\n```kotlin\n\nval results = listOf(\nResult(\npackage = signerPackageName,\nresult = eventSignture,\nid = intentId\n)\n)\n\nval json = results.toJson()\n\nintent.putExtra(\"results\", json)\n```\n\nSend the Intent:\n\nkotlin\nlauncher.launch(intent)"}
{"question": "What does Methods mean?", "answer": "- get_public_key\n- params:kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:\"))\nintent.putExtra(\"type\", \"get_public_key\")\n// You can send some default permissions for the user to authorize for ever\nval permissions = listOf(\nPermission(\ntype = \"sign_event\",\nkind = 22242\n),\nPermission(\ntype = \"nip44_decrypt\"\n)\n)\nintent.putExtra(\"permissions\", permissions.toJson())\ncontext.startActivity(intent)- result:\n- If the user approved the intent it will return thepubkeyin the result field and the signer packageName in thepackagefieldkotlin\nval pubkey = intent.data?.getStringExtra(\"result\")\n// The package name of the signer application\nval packageName = intent.data?.getStringExtra(\"package\")\n- sign_event\n- params:``kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$eventJson\"))\nintent.package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"sign_event\")\n// To handle results when not waiting between intents\nintent.putExtra(\"id\", event.id)\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", pubkey)context.startActivity(intent)\n```\n- result:\n- If the user approved intent it will return theresult,idandeventfieldskotlin\nval signature = intent.data?.getStringExtra(\"result\")\n// The id you sent\nval id = intent.data?.getStringExtra(\"id\")\nval signedEventJson = intent.data?.getStringExtra(\"event\")\n- nip04_encrypt\n- params:``kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$plaintext\"))\nintent.package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"nip04_encrypt\")\n// to control the result in your application in case you are not waiting the result before sending another intent\nintent.putExtra(\"id\", \"some_id\")\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", account.keyPair.pubkey)\n// Send the hex pubkey that will be used for encrypting the data\nintent.putExtra(\"pubkey\", pubkey)context.startActivity(intent)\n```\n- result:\n- If the user approved intent it will return theresultandidfieldskotlin\nval encryptedText = intent.data?.getStringExtra(\"result\")\n// the id you sent\nval id = intent.data?.getStringExtra(\"id\")\n- nip44_encrypt\n- params:``kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$plaintext\"))\nintent.package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"nip44_encrypt\")\n// to control the result in your application in case you are not waiting the result before sending another intent\nintent.putExtra(\"id\", \"some_id\")\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", account.keyPair.pubkey)\n// Send the hex pubkey that will be used for encrypting the data\nintent.putExtra(\"pubkey\", pubkey)context.startActivity(intent)\n```\n- result:\n- If the user approved intent it will return thesignatureandidfieldskotlin\nval encryptedText = intent.data?.getStringExtra(\"signature\")\n// the id you sent\nval id = intent.data?.getStringExtra(\"id\")\n- nip04_decrypt\n- params:``kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$encryptedText\"))\nintent.package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"nip04_decrypt\")\n// to control the result in your application in case you are not waiting the result before sending another intent\nintent.putExtra(\"id\", \"some_id\")\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", account.keyPair.pubkey)\n// Send the hex pubkey that will be used for decrypting the data\nintent.putExtra(\"pubkey\", pubkey)context.startActivity(intent)\n```\n- result:\n- If the user approved intent it will return theresultandidfieldskotlin\nval plainText = intent.data?.getStringExtra(\"result\")\n// the id you sent\nval id = intent.data?.getStringExtra(\"id\")\n- nip44_decrypt\n- params:``kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$encryptedText\"))\nintent.package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"nip04_decrypt\")\n// to control the result in your application in case you are not waiting the result before sending another intent\nintent.putExtra(\"id\", \"some_id\")\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", account.keyPair.pubkey)\n// Send the hex pubkey that will be used for decrypting the data\nintent.putExtra(\"pubkey\", pubkey)context.startActivity(intent)\n```\n- result:\n- If the user approved intent it will return theresultandidfieldskotlin\nval plainText = intent.data?.getStringExtra(\"result\")\n// the id you sent\nval id = intent.data?.getStringExtra(\"id\")\n- decrypt_zap_event\n- params:kotlin\nval intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"nostrsigner:$eventJson\"))\nintent.`package` = \"com.example.signer\"\nintent.putExtra(\"type\", \"decrypt_zap_event\")\n// to control the result in your application in case you are not waiting the result before sending another intent\nintent.putExtra(\"id\", \"some_id\")\n// Send the current logged in user pubkey\nintent.putExtra(\"current_user\", account.keyPair.pubkey)\ncontext.startActivity(intent)- result:\n- If the user approved intent it will return theresultandidfieldskotlin\nval eventJson = intent.data?.getStringExtra(\"result\")\n// the id you sent\nval id = intent.data?.getStringExtra(\"id\")"}
{"question": "What does Using Content Resolver mean?", "answer": "To get the result back from Signer Application you should use contentResolver.query in Kotlin. If you are using another framework check the documentation of your framework or a third party library to get the result.\n\nIf the user did not check the \"remember my choice\" option, the pubkey is not in Signer Application or the signer type is not recognized thecontentResolverwill return null\n\nFor the SIGN_EVENT type Signer Application returns two columns \"result\" and \"event\". The column event is the signed event json\n\nFor the other types Signer Application returns the column \"result\"\n\nIf the user chose to always reject the event, signer application will return the column \"rejected\" and you should not open signer application"}
{"question": "What does Usage for Web Applications mean?", "answer": "You should consider usingNIP-46: Nostr Connectfor a better experience for web applications. When using this approach, the web app can't call the signer in the background, so the user will see a popup for every event you try to sign.\n\nSince web applications can't receive a result from the intent, you should add a modal to paste the signature or the event json or create a callback url.\n\nIf you send the callback url parameter, Signer Application will send the result to the url.\n\nIf you don't send a callback url, Signer Application will copy the result to the clipboard.\n\nYou can configure thereturnTypeto besignatureorevent.\n\nAndroid intents and browser urls have limitations, so if you are using thereturnTypeofeventconsider using the parametercompressionType=gzipthat will return \"Signer1\" + Base64 gzip encoded event json"}
{"question": "What does Reporting mean?", "answer": "optional\n\nA report is akind 1984event that signals to users and relays that\nsome referenced content is objectionable. The definition of objectionable is\nobviously subjective and all agents on the network (users, apps, relays, etc.)\nmay consume and take action on them as they see fit.\n\nThecontentMAY contain additional information submitted by the entity\nreporting the content."}
{"question": "What does Relay behavior mean?", "answer": "It is not recommended that relays perform automatic moderation using reports,\nas they can be easily gamed. Admins could use reports from trusted moderators to\ntakedown illegal or explicit content if the relay does not allow such things."}
{"question": "What does Lightning Zaps mean?", "answer": "draftoptional\n\nThis NIP defines two new event types for recording lightning payments between users.9734is azap request, representing a payer's request to a recipient's lightning wallet for an invoice.9735is azap receipt, representing the confirmation by the recipient's lightning wallet that the invoice issued in response to azap requesthas been paid.\n\nHaving lightning receipts on nostr allows clients to display lightning payments from entities on the network. These can be used for fun or for spam deterrence."}
{"question": "What does Appendix A: Zap Request Event mean?", "answer": "Azap requestis an event of kind9734that isnotpublished to relays, but is instead sent to a recipient's lnurl paycallbackurl. This event'scontentMAY be an optional message to send along with the payment. The event MUST include the following tags:\n\n- relaysis a list of relays the recipient's wallet should publish itszap receiptto. Note that relays should not be nested in an additional list, but should be included as shown in the example below.\n- amountis the amount inmillisatsthe sender intends to pay, formatted as a string. This is recommended, but optional.\n- lnurlis the lnurl pay url of the recipient, encoded using bech32 with the prefixlnurl. This is recommended, but optional.\n- pis the hex-encoded pubkey of the recipient.\n\nIn addition, the event MAY include the following tags:\n\n- eis an optional hex-encoded event id. Clients MUST include this if zapping an event rather than a person.\n- ais an optional event coordinate that allows tipping addressable events such as NIP-23 long-form notes.\n\nExample:\n\njson\n{\n\"kind\": 9734,\n\"content\": \"Zap!\",\n\"tags\": [\n[\"relays\", \"wss://nostr-pub.wellorder.com\", \"wss://anotherrelay.example.com\"],\n[\"amount\", \"21000\"],\n[\"lnurl\", \"lnurl1dp68gurn8ghj7um5v93kketj9ehx2amn9uh8wetvdskkkmn0wahz7mrww4excup0dajx2mrv92x9xp\"],\n[\"p\", \"04c915daefee38317fa734444acee390a8269fe5810b2241e5e6dd343dfbecc9\"],\n[\"e\", \"9ae37aa68f48645127299e9453eb5d908a0cbb6058ff340d528ed4d37c8994fb\"]\n],\n\"pubkey\": \"97c70a44366a6535c145b333f973ea86dfdc2d7a99da618c40c64705ad98e322\",\n\"created_at\": 1679673265,\n\"id\": \"30efed56a035b2549fcaeec0bf2c1595f9a9b3bb4b1a38abaf8ee9041c4b7d93\",\n\"sig\": \"f2cb581a84ed10e4dc84937bd98e27acac71ab057255f6aa8dfa561808c981fe8870f4a03c1e3666784d82a9c802d3704e174371aa13d63e2aeaf24ff5374d9d\"\n}"}
{"question": "What does Appendix B: Zap Request HTTP Request mean?", "answer": "A signedzap requestevent is not published, but is instead sent using a HTTP GET request to the recipient'scallbackurl, which was provided by the recipient's lnurl pay endpoint. This request should have the following query parameters defined:\n\n- amountis the amount inmillisatsthe sender intends to pay\n- nostris the9734zap requestevent, JSON encoded then URI encoded\n- lnurlis the lnurl pay url of the recipient, encoded using bech32 with the prefixlnurl\n\nThis request should return a JSON response with aprkey, which is the invoice the sender must pay to finalize their zap. Here is an example flow in javascript:\n\n```javascript\nconst senderPubkey // The sender's pubkey\nconst recipientPubkey = // The recipient's pubkey\nconst callback = // The callback received from the recipients lnurl pay endpoint\nconst lnurl = // The recipient's lightning address, encoded as a lnurl\nconst sats = 21\n\nconst amount = sats * 1000\nconst relays = ['wss://nostr-pub.wellorder.net']\nconst event = encodeURI(JSON.stringify(await signEvent({\nkind: 9734,\ncontent: \"\",\npubkey: senderPubkey,\ncreated_at: Math.round(Date.now() / 1000),\ntags: [\n[\"relays\", ...relays],\n[\"amount\", amount.toString()],\n[\"lnurl\", lnurl],\n[\"p\", recipientPubkey],\n],\n})))\n\nconst {pr: invoice} = await fetchJson(${callback}?amount=${amount}&nostr=${event}&lnurl=${lnurl})\n```"}
{"question": "What does Appendix C: LNURL Server Configuration mean?", "answer": "The lnurl server will need some additional pieces of information so that clients can know that zap invoices are supported:\n\n- Add anostrPubkeyto the lnurl-pay static endpoint/.well-known/lnurlp/<user>, wherenostrPubkeyis the nostr pubkey your server will use to signzap receiptevents. Clients will use this to validatezap receipts.\n- Add anallowsNostrfield and set it to true."}
{"question": "What does Appendix D: LNURL Server Zap Request Validation mean?", "answer": "When a client sends azap requestevent to a server's lnurl-pay callback URL, there will be anostrquery parameter whose value is that event which is URI- and JSON-encoded. If present, thezap requestevent must be validated in the following ways:\n\n- It MUST have a valid nostr signature\n- It MUST have tags\n- It MUST have only oneptag\n- It MUST have 0 or 1etags\n- There should be arelaystag with the relays to send thezap receiptto.\n- If there is anamounttag, it MUST be equal to theamountquery parameter.\n- If there is anatag, it MUST be a valid event coordinate\n- There MUST be 0 or 1Ptags. If there is one, it MUST be equal to thezap receipt'spubkey.\n\nThe event MUST then be stored for use later, when the invoice is paid."}
{"question": "What does Appendix E: Zap Receipt Event mean?", "answer": "Azap receiptis created by a lightning node when an invoice generated by azap requestis paid.Zap receipts are only created when the invoice description (committed to the description hash) contains azap requestnote.\n\nWhen receiving a payment, the following steps are executed:\n\n- Get the description for the invoice. This needs to be saved somewhere during the generation of the description hash invoice. It is saved automatically for you with CLN, which is the reference implementation used here.\n- Parse the bolt11 description as a JSON nostr event. This SHOULD be validated based on the requirements in Appendix D, either when it is received, or before the invoice is paid.\n- Create a nostr event of kind9735as described below, and publish it to therelaysdeclared in thezap request.\n\nThe following should be true of thezap receiptevent:\n\n- ThecontentSHOULD be empty.\n- Thecreated_atdate SHOULD be set to the invoicepaid_atdate for idempotency.\n- tagsMUST include theptag (zap recipient) AND optionaletag from thezap requestAND optionalatag from thezap requestAND optionalPtag from the pubkey of the zap request (zap sender).\n- Thezap receiptMUST have abolt11tag containing the description hash bolt11 invoice.\n- Thezap receiptMUST contain adescriptiontag which is the JSON-encoded zap request.\n- SHA256(description)SHOULD match the description hash in the bolt11 invoice.\n- Thezap receiptMAY contain apreimagetag to match against the payment hash of the bolt11 invoice. This isn't really a payment proof, there is no real way to prove that the invoice is real or has been paid. You are trusting the author of thezap receiptfor the legitimacy of the payment.\n\nThezap receiptis not a proof of payment, all it proves is that some nostr user fetched an invoice. The existence of thezap receiptimplies the invoice as paid, but it could be a lie given a rogue implementation.\n\nA reference implementation for a zap-enabled lnurl server can be foundhere.\n\nExamplezap receipt:\n\njson\n{\n\"id\": \"67b48a14fb66c60c8f9070bdeb37afdfcc3d08ad01989460448e4081eddda446\",\n\"pubkey\": \"9630f464cca6a5147aa8a35f0bcdd3ce485324e732fd39e09233b1d848238f31\",\n\"created_at\": 1674164545,\n\"kind\": 9735,\n\"tags\": [\n[\"p\", \"32e1827635450ebb3c5a7d12c1f8e7b2b514439ac10a67eef3d9fd9c5c68e245\"],\n[\"P\", \"97c70a44366a6535c145b333f973ea86dfdc2d7a99da618c40c64705ad98e322\"],\n[\"e\", \"3624762a1274dd9636e0c552b53086d70bc88c165bc4dc0f9e836a1eaf86c3b8\"],\n[\"bolt11\", \"lnbc10u1p3unwfusp5t9r3yymhpfqculx78u027lxspgxcr2n2987mx2j55nnfs95nxnzqpp5jmrh92pfld78spqs78v9euf2385t83uvpwk9ldrlvf6ch7tpascqhp5zvkrmemgth3tufcvflmzjzfvjt023nazlhljz2n9hattj4f8jq8qxqyjw5qcqpjrzjqtc4fc44feggv7065fqe5m4ytjarg3repr5j9el35xhmtfexc42yczarjuqqfzqqqqqqqqlgqqqqqqgq9q9qxpqysgq079nkq507a5tw7xgttmj4u990j7wfggtrasah5gd4ywfr2pjcn29383tphp4t48gquelz9z78p4cq7ml3nrrphw5w6eckhjwmhezhnqpy6gyf0\"],\n[\"description\", \"{\\\"pubkey\\\":\\\"97c70a44366a6535c145b333f973ea86dfdc2d7a99da618c40c64705ad98e322\\\",\\\"content\\\":\\\"\\\",\\\"id\\\":\\\"d9cc14d50fcb8c27539aacf776882942c1a11ea4472f8cdec1dea82fab66279d\\\",\\\"created_at\\\":1674164539,\\\"sig\\\":\\\"77127f636577e9029276be060332ea565deaf89ff215a494ccff16ae3f757065e2bc59b2e8c113dd407917a010b3abd36c8d7ad84c0e3ab7dab3a0b0caa9835d\\\",\\\"kind\\\":9734,\\\"tags\\\":[[\\\"e\\\",\\\"3624762a1274dd9636e0c552b53086d70bc88c165bc4dc0f9e836a1eaf86c3b8\\\"],[\\\"p\\\",\\\"32e1827635450ebb3c5a7d12c1f8e7b2b514439ac10a67eef3d9fd9c5c68e245\\\"],[\\\"relays\\\",\\\"wss://relay.damus.io\\\",\\\"wss://nostr-relay.wlvs.space\\\",\\\"wss://nostr.fmt.wiz.biz\\\",\\\"wss://relay.nostr.bg\\\",\\\"wss://nostr.oxtr.dev\\\",\\\"wss://nostr.v0l.io\\\",\\\"wss://brb.io\\\",\\\"wss://nostr.bitcoiner.social\\\",\\\"ws://monad.jb55.com:8080\\\",\\\"wss://relay.snort.social\\\"]]}\"],\n[\"preimage\", \"5d006d2cf1e73c7148e7519a4c68adc81642ce0e25a432b2434c99f97344c15f\"]\n],\n\"content\": \"\",\n}"}
{"question": "What does Appendix F: Validating Zap Receipts mean?", "answer": "A client can retrievezap receipts on events and pubkeys using a NIP-01 filter, for example{\"kinds\": [9735], \"#e\": [...]}. Zaps MUST be validated using the following steps:\n\n- Thezap receiptevent'spubkeyMUST be the same as the recipient's lnurl provider'snostrPubkey(retrieved in step 1 of the protocol flow).\n- TheinvoiceAmountcontained in thebolt11tag of thezap receiptMUST equal theamounttag of thezap request(if present).\n- Thelnurltag of thezap request(if present) SHOULD equal the recipient'slnurl."}
{"question": "What does Appendix G:zaptag on other events mean?", "answer": "When an event includes one or morezaptags, clients wishing to zap it SHOULD calculate the lnurl pay request based on the tags value instead of the event author's profile field. The tag's second argument is thehexstring of the receiver's pub key and the third argument is the relay to download the receiver's metadata (Kind-0). An optional fourth parameter specifies the weight (a generalization of a percentage) assigned to the respective receiver. Clients should parse all weights, calculate a sum, and then a percentage to each receiver. If weights are not present, CLIENTS should equally divide the zap amount to all receivers. If weights are only partially present, receivers without a weight should not be zapped (weight = 0).\n\njsonc\n{\n\"tags\": [\n[ \"zap\", \"82341f882b6eabcd2ba7f1ef90aad961cf074af15b9ef44a09f9d2a8fbfbe6a2\", \"wss://nostr.oxtr.dev\", \"1\" ],  // 25%\n[ \"zap\", \"fa984bd7dbb282f07e16e7ae87b26a2a7b9b90b7246a44771f0cf5ae58018f52\", \"wss://nostr.wine/\",    \"1\" ],  // 25%\n[ \"zap\", \"460c25e682fda7832b52d1f22d3d22b3176d972f60dcdc3212ed8c92ef85065c\", \"wss://nos.lol/\",       \"2\" ]   // 50%\n]\n}\n\nClients MAY display the zap split configuration in the note."}
{"question": "What does Future Work mean?", "answer": "Zaps can be extended to be more private by encryptingzap requestnotes to the target user, but for simplicity it has been left out of this initial draft."}
{"question": "What does Badges mean?", "answer": "draftoptional\n\nThree special events are used to define, award and display badges in\nuser profiles:\n\n- A \"Badge Definition\" event is defined as an addressable event with kind30009having adtag with a value that uniquely identifies the badge (e.g.bravery) published by the badge issuer. Badge definitions can be updated.\n- A \"Badge Award\" event is a kind8event with a singleatag referencing a \"Badge Definition\" event and one or moreptags, one for each pubkey the badge issuer wishes to award. Awarded badges are immutable and non-transferrable.\n- A \"Profile Badges\" event is defined as anaddressable eventwith kind30008with adtag with the valueprofile_badges.\nProfile badges contain an ordered list of pairs ofaandetags referencing aBadge Definitionand aBadge Awardfor each badge to be displayed."}
{"question": "What does Badge Definition event mean?", "answer": "The following tags MUST be present:\n\n- dtag with the unique name of the badge.\n\nThe following tags MAY be present:\n\n- Anametag with a short name for the badge.\n- imagetag whose value is the URL of a high-resolution image representing the badge. The second value optionally specifies the dimensions of the image aswidthxheightin pixels. Badge recommended dimensions is 1024x1024 pixels.\n- Adescriptiontag whose value MAY contain a textual representation of the\nimage, the meaning behind the badge, or the reason of its issuance.\n- One or morethumbtags whose first value is an URL pointing to a thumbnail version of the image referenced in theimagetag. The second value optionally specifies the dimensions of the thumbnail aswidthxheightin pixels."}
{"question": "What does Badge Award event mean?", "answer": "The following tags MUST be present:\n\n- Anatag referencing a kind30009Badge Definition event.\n- One or moreptags referencing each pubkey awarded."}
{"question": "What does Profile Badges Event mean?", "answer": "The number of badges a pubkey can be awarded is unbounded. The Profile Badge\nevent allows individual users to accept or reject awarded badges, as well\nas choose the display order of badges on their profiles.\n\nThe following tags MUST be present:\n\n- Adtag with the unique identifierprofile_badges\n\nThe following tags MAY be present:\n\n- Zero or more ordered consecutive pairs ofaandetags referencing a kind30009Badge Definition and kind8Badge Award, respectively. Clients SHOULD\nignoreawithout correspondingetag and viceversa. Badge Awards referenced\nby theetags should contain the sameatag."}
{"question": "What does Example of a Badge Definition event mean?", "answer": "jsonc\n{\n\"pubkey\": \"alice\",\n\"kind\": 30009,\n\"tags\": [\n[\"d\", \"bravery\"],\n[\"name\", \"Medal of Bravery\"],\n[\"description\", \"Awarded to users demonstrating bravery\"],\n[\"image\", \"https://nostr.academy/awards/bravery.png\", \"1024x1024\"],\n[\"thumb\", \"https://nostr.academy/awards/bravery_256x256.png\", \"256x256\"]\n],\n// other fields...\n}"}
{"question": "What does Example of Badge Award event mean?", "answer": "jsonc\n{\n\"id\": \"<badge award event id>\",\n\"kind\": 8,\n\"pubkey\": \"alice\",\n\"tags\": [\n[\"a\", \"30009:alice:bravery\"],\n[\"p\", \"bob\", \"wss://relay\"],\n[\"p\", \"charlie\", \"wss://relay\"]\n],\n// other fields...\n}"}
{"question": "What does Example of a Profile Badges event mean?", "answer": "Honorable Bob The Brave:jsonc\n{\n\"kind\": 30008,\n\"pubkey\": \"bob\",\n\"tags\": [\n[\"d\", \"profile_badges\"],\n[\"a\", \"30009:alice:bravery\"],\n[\"e\", \"<bravery badge award event id>\", \"wss://nostr.academy\"],\n[\"a\", \"30009:alice:honor\"],\n[\"e\", \"<honor badge award event id>\", \"wss://nostr.academy\"]\n],\n// other fields...\n}"}
{"question": "What does Gift Wrap mean?", "answer": "optional\n\nThis NIP defines a protocol for encapsulating any nostr event. This makes it possible to obscure most metadata\nfor a given event, perform collaborative signing, and more.\n\nThis NIPdoes notdefine any messaging protocol. Applications of this NIP should be defined separately.\n\nThis NIP relies onNIP-44's versioned encryption algorithms."}
{"question": "What does 1. The Rumor Event Kind mean?", "answer": "Arumoris the same thing as an unsigned event. Any event kind can be made arumorby removing the signature."}
{"question": "What does 2. The Seal Event Kind mean?", "answer": "Asealis akind:13event that wraps arumorwith the sender's regular key. Thesealisalwaysencrypted\nto a receiver's pubkey but there is noptag pointing to the receiver. There is no way to know who the rumor is for\nwithout the receiver's or the sender's private key. The only public information in this event is who is signing it.\n\njson\n{\n\"id\": \"<id>\",\n\"pubkey\": \"<real author's pubkey>\",\n\"content\": \"<encrypted rumor>\",\n\"kind\": 13,\n\"created_at\": 1686840217,\n\"tags\": [],\n\"sig\": \"<real author's pubkey signature>\"\n}\n\nTags MUST always be empty in akind:13. The inner event MUST always be unsigned."}
{"question": "What does 3. Gift Wrap Event Kind mean?", "answer": "Agift wrapevent is akind:1059event that wraps any other event.tagsSHOULD include any information\nneeded to route the event to its intended recipient, including the recipient'sptag orNIP-13proof of work.\n\njson\n{\n\"id\": \"<id>\",\n\"pubkey\": \"<random, one-time-use pubkey>\",\n\"content\": \"<encrypted kind 13>\",\n\"kind\": 1059,\n\"created_at\": 1686840217,\n\"tags\": [[\"p\", \"<recipient pubkey>\"]],\n\"sig\": \"<random, one-time-use pubkey signature>\"\n}"}
{"question": "What does Encrypting Payloads mean?", "answer": "Encryption is done followingNIP-44on the JSON-encoded event. Place the encryption payload in the.contentof the wrapper event (either asealor agift wrap)."}
{"question": "What does Other Considerations mean?", "answer": "If arumoris intended for more than one party, or if the author wants to retain an encrypted copy, a singlerumormay be wrapped and addressed for each recipient individually.\n\nThe canonicalcreated_attime belongs to therumor. All other timestamps SHOULD be tweaked to thwart\ntime-analysis attacks. Note that some relays don't serve events dated in the future, so all timestamps\nSHOULD be in the past.\n\nRelays may choose not to store gift wrapped events due to them not being publicly useful. Clients MAY choose\nto attach a certain amount of proof-of-work to the wrapper event perNIP-13in a bid to demonstrate that\nthe event is not spam or a denial-of-service attack.\n\nTo protect recipient metadata, relays SHOULD guard access tokind 1059events based on user AUTH. When\npossible, clients should only send wrapped events to relays that offer this protection.\n\nTo protect recipient metadata, relays SHOULD only servekind 1059events intended for the marked recipient.\nWhen possible, clients should only send wrapped events toreadrelays for the recipient that implement\nAUTH, and refuse to serve wrapped events to non-recipients."}
{"question": "What does An Example mean?", "answer": "Let's send a wrappedkind 1message between two parties asking \"Are you going to the party tonight?\"\n\n- Author private key:0beebd062ec8735f4243466049d7747ef5d6594ee838de147f8aab842b15e273\n- Recipient private key:e108399bd8424357a710b606ae0c13166d853d327e47a6e5e038197346bdbf45\n- Ephemeral wrapper key:4f02eac59266002db5801adc5270700ca69d5b8f761d8732fab2fbf233c90cbd\n\nNote that this messaging protocol should not be used in practice, this is just an example. Refer to other\nNIPs for concrete messaging protocols that depend on gift wraps."}
{"question": "What does 1. Create an event mean?", "answer": "Create akind 1event with the message, the receivers, and any other tags you want, signed by the author.\nDo not sign the event.\n\njson\n{\n\"created_at\": 1691518405,\n\"content\": \"Are you going to the party tonight?\",\n\"tags\": [],\n\"kind\": 1,\n\"pubkey\": \"611df01bfcf85c26ae65453b772d8f1dfd25c264621c0277e1fc1518686faef9\",\n\"id\": \"9dd003c6d3b73b74a85a9ab099469ce251653a7af76f523671ab828acd2a0ef9\"\n}"}
{"question": "What does 2. Seal the rumor mean?", "answer": "Encrypt the JSON-encodedrumorwith a conversation key derived using the author's private key and\nthe recipient's public key. Place the result in thecontentfield of akind 13sealevent. Sign\nit with the author's key.\n\njson\n{\n\"content\": \"AqBCdwoS7/tPK+QGkPCadJTn8FxGkd24iApo3BR9/M0uw6n4RFAFSPAKKMgkzVMoRyR3ZS/aqATDFvoZJOkE9cPG/TAzmyZvr/WUIS8kLmuI1dCA+itFF6+ULZqbkWS0YcVU0j6UDvMBvVlGTzHz+UHzWYJLUq2LnlynJtFap5k8560+tBGtxi9Gx2NIycKgbOUv0gEqhfVzAwvg1IhTltfSwOeZXvDvd40rozONRxwq8hjKy+4DbfrO0iRtlT7G/eVEO9aJJnqagomFSkqCscttf/o6VeT2+A9JhcSxLmjcKFG3FEK3Try/WkarJa1jM3lMRQqVOZrzHAaLFW/5sXano6DqqC5ERD6CcVVsrny0tYN4iHHB8BHJ9zvjff0NjLGG/v5Wsy31+BwZA8cUlfAZ0f5EYRo9/vKSd8TV0wRb9DQ=\",\n\"kind\": 13,\n\"created_at\": 1703015180,\n\"pubkey\": \"611df01bfcf85c26ae65453b772d8f1dfd25c264621c0277e1fc1518686faef9\",\n\"tags\": [],\n\"id\": \"28a87d7c074d94a58e9e89bb3e9e4e813e2189f285d797b1c56069d36f59eaa7\",\n\"sig\": \"02fc3facf6621196c32912b1ef53bac8f8bfe9db51c0e7102c073103586b0d29c3f39bdaa1e62856c20e90b6c7cc5dc34ca8bb6a528872cf6e65e6284519ad73\"\n}"}
{"question": "What does 3. Wrap the seal mean?", "answer": "Encrypt the JSON-encodedkind 13event with your ephemeral, single-use random key. Place the result\nin thecontentfield of akind 1059. Add a singleptag containing the recipient's public key.\nSign thegift wrapusing the random key generated in the previous step.\n\njson\n{\n\"content\": \"AhC3Qj/QsKJFWuf6xroiYip+2yK95qPwJjVvFujhzSguJWb/6TlPpBW0CGFwfufCs2Zyb0JeuLmZhNlnqecAAalC4ZCugB+I9ViA5pxLyFfQjs1lcE6KdX3euCHBLAnE9GL/+IzdV9vZnfJH6atVjvBkNPNzxU+OLCHO/DAPmzmMVx0SR63frRTCz6Cuth40D+VzluKu1/Fg2Q1LSst65DE7o2efTtZ4Z9j15rQAOZfE9jwMCQZt27rBBK3yVwqVEriFpg2mHXc1DDwHhDADO8eiyOTWF1ghDds/DxhMcjkIi/o+FS3gG1dG7gJHu3KkGK5UXpmgyFKt+421m5o++RMD/BylS3iazS1S93IzTLeGfMCk+7IKxuSCO06k1+DaasJJe8RE4/rmismUvwrHu/HDutZWkvOAhd4z4khZo7bJLtiCzZCZ74lZcjOB4CYtuAX2ZGpc4I1iOKkvwTuQy9BWYpkzGg3ZoSWRD6ty7U+KN+fTTmIS4CelhBTT15QVqD02JxfLF7nA6sg3UlYgtiGw61oH68lSbx16P3vwSeQQpEB5JbhofW7t9TLZIbIW/ODnI4hpwj8didtk7IMBI3Ra3uUP7ya6vptkd9TwQkd/7cOFaSJmU+BIsLpOXbirJACMn+URoDXhuEtiO6xirNtrPN8jYqpwvMUm5lMMVzGT3kMMVNBqgbj8Ln8VmqouK0DR+gRyNb8fHT0BFPwsHxDskFk5yhe5c/2VUUoKCGe0kfCcX/EsHbJLUUtlHXmTqaOJpmQnW1tZ/siPwKRl6oEsIJWTUYxPQmrM2fUpYZCuAo/29lTLHiHMlTbarFOd6J/ybIbICy2gRRH/LFSryty3Cnf6aae+A9uizFBUdCwTwffc3vCBae802+R92OL78bbqHKPbSZOXNC+6ybqziezwG+OPWHx1Qk39RYaF0aFsM4uZWrFic97WwVrH5i+/Nsf/OtwWiuH0gV/SqvN1hnkxCTF/+XNn/laWKmS3e7wFzBsG8+qwqwmO9aVbDVMhOmeUXRMkxcj4QreQkHxLkCx97euZpC7xhvYnCHarHTDeD6nVK+xzbPNtzeGzNpYoiMqxZ9bBJwMaHnEoI944Vxoodf51cMIIwpTmmRvAzI1QgrfnOLOUS7uUjQ/IZ1Qa3lY08Nqm9MAGxZ2Ou6R0/Z5z30ha/Q71q6meAs3uHQcpSuRaQeV29IASmye2A2Nif+lmbhV7w8hjFYoaLCRsdchiVyNjOEM4VmxUhX4VEvw6KoCAZ/XvO2eBF/SyNU3Of4SO\",\n\"kind\": 1059,\n\"created_at\": 1703021488,\n\"pubkey\": \"18b1a75918f1f2c90c23da616bce317d36e348bcf5f7ba55e75949319210c87c\",\n\"id\": \"5c005f3ccf01950aa8d131203248544fb1e41a0d698e846bd419cec3890903ac\",\n\"sig\": \"35fabdae4634eb630880a1896a886e40fd6ea8a60958e30b89b33a93e6235df750097b04f9e13053764251b8bc5dd7e8e0794a3426a90b6bcc7e5ff660f54259\",\n\"tags\": [[\"p\", \"166bf3765ebd1fc55decfe395beff2ea3b2a4e0a8946e7eb578512b555737c99\"]],\n}"}
{"question": "What does 4. Broadcast Selectively mean?", "answer": "Broadcast thekind 1059event to the recipient's relays only. Delete all the other events."}
{"question": "What does JavaScript mean?", "answer": "```javascript\nimport {bytesToHex} from \"@noble/hashes/utils\"\nimport type {EventTemplate, UnsignedEvent, Event} from \"nostr-tools\"\nimport {getPublicKey, getEventHash, nip19, nip44, finalizeEvent, generateSecretKey} from \"nostr-tools\"\n\ntype Rumor = UnsignedEvent & {id: string}\n\nconst TWO_DAYS = 2 * 24 * 60 * 60\n\nconst now = () => Math.round(Date.now() / 1000)\nconst randomNow = () => Math.round(now() - (Math.random() * TWO_DAYS))\n\nconst nip44ConversationKey = (privateKey: Uint8Array, publicKey: string) =>\nnip44.v2.utils.getConversationKey(bytesToHex(privateKey), publicKey)\n\nconst nip44Encrypt = (data: EventTemplate, privateKey: Uint8Array, publicKey: string) =>\nnip44.v2.encrypt(JSON.stringify(data), nip44ConversationKey(privateKey, publicKey))\n\nconst nip44Decrypt = (data: Event, privateKey: Uint8Array) =>\nJSON.parse(nip44.v2.decrypt(data.content, nip44ConversationKey(privateKey, data.pubkey)))\n\nconst createRumor = (event: Partial, privateKey: Uint8Array) => {\nconst rumor = {\ncreated_at: now(),\ncontent: \"\",\ntags: [],\n...event,\npubkey: getPublicKey(privateKey),\n} as any\n\nrumor.id = getEventHash(rumor)\n\nreturn rumor as Rumor\n}\n\nconst createSeal = (rumor: Rumor, privateKey: Uint8Array, recipientPublicKey: string) => {\nreturn finalizeEvent(\n{\nkind: 13,\ncontent: nip44Encrypt(rumor, privateKey, recipientPublicKey),\ncreated_at: randomNow(),\ntags: [],\n},\nprivateKey\n) as Event\n}\n\nconst createWrap = (event: Event, recipientPublicKey: string) => {\nconst randomKey = generateSecretKey()\n\nreturn finalizeEvent(\n{\nkind: 1059,\ncontent: nip44Encrypt(event, randomKey, recipientPublicKey),\ncreated_at: randomNow(),\ntags: [[\"p\", recipientPublicKey]],\n},\nrandomKey\n) as Event\n}\n\n// Test case using the above example\nconst senderPrivateKey = nip19.decode(nsec1p0ht6p3wepe47sjrgesyn4m50m6avk2waqudu9rl324cg2c4ufesyp6rdg).data\nconst recipientPrivateKey = nip19.decode(nsec1uyyrnx7cgfp40fcskcr2urqnzekc20fj0er6de0q8qvhx34ahazsvs9p36).data\nconst recipientPublicKey = getPublicKey(recipientPrivateKey)\n\nconst rumor = createRumor(\n{\nkind: 1,\ncontent: \"Are you going to the party tonight?\",\n},\nsenderPrivateKey\n)\n\nconst seal = createSeal(rumor, senderPrivateKey, recipientPublicKey)\nconst wrap = createWrap(seal, recipientPublicKey)\n\n// Recipient unwraps with their private key.\n\nconst unwrappedSeal = nip44Decrypt(wrap, recipientPrivateKey)\nconst unsealedRumor = nip44Decrypt(unwrappedSeal, recipientPrivateKey)\n```"}
{"question": "What does Cashu Wallets mean?", "answer": "draftoptional\n\nThis NIP defines the operations of a cashu-based wallet.\n\nA cashu wallet is a wallet which information is stored in relays to make it accessible across applications.\n\nThe purpose of this NIP is:\n* ease-of-use: new users immediately are able to receive funds without creating accounts with other services.\n* interoperability: users' wallets follows them across applications.\n\nThis NIP doesn't deal with users'receivingmoney from someone else, it's just to keep state of the user's wallet."}
{"question": "What does High-level flow mean?", "answer": "- A user has akind:17375event that represents a wallet.\n- A user haskind:7375events that represent the unspent proofs of the wallet. -- The proofs are encrypted with the user's private key.\n- A user haskind:7376events that represent the spending history of the wallet -- This history is for informational purposes only and is completely optional."}
{"question": "What does Wallet Event mean?", "answer": "jsonc\n{\n\"kind\": 17375,\n\"content\": nip44_encrypt([\n[ \"privkey\", \"hexkey\" ],\n[ \"mint\", \"https://mint1\" ],\n[ \"mint\", \"https://mint2\" ]\n]),\n\"tags\": []\n}\n\nThe wallet event is an replaceable eventkind:17375.\n\nTags:\n*mint- Mint(s) this wallet uses -- there MUST be one or more mint tags.\n*privkey- Private key used to unlock P2PK ecash. MUST be stored encrypted in the.contentfield.This is a different private key exclusively used for the wallet, not associated in any way to the user's Nostr private key-- This is only used for receivingNIP-61nutzaps."}
{"question": "What does Token Event mean?", "answer": "Token events are used to record unspent proofs.\n\nThere can be multiplekind:7375events for the same mint, and multiple proofs inside eachkind:7375event.\n\njsonc\n{\n\"kind\": 7375,\n\"content\": nip44_encrypt({\n\"mint\": \"https://stablenut.umint.cash\",\n\"proofs\": [\n// one or more proofs in the default cashu format\n{\n\"id\": \"005c2502034d4f12\",\n\"amount\": 1,\n\"secret\": \"z+zyxAVLRqN9lEjxuNPSyRJzEstbl69Jc1vtimvtkPg=\",\n\"C\": \"0241d98a8197ef238a192d47edf191a9de78b657308937b4f7dd0aa53beae72c46\"\n}\n],\n// tokens that were destroyed in the creation of this token (helps on wallet state transitions)\n\"del\": [ \"token-event-id-1\", \"token-event-id-2\" ]\n}),\n\"tags\": []\n}\n\n- .contentis aNIP-44encrypted payload:\n- mint: The mint the proofs belong to.\n- proofs: unencoded proofs\n- del: token-ids that were destroyed by the creation of this token. This assists with state transitions.\n\nWhen one or more proofs of a token are spent, the token event should beNIP-09-deleted and, if some proofs are unspent from the same token event, a new token event should be created rolling over the unspent proofs and adding any change outputs to the new token event (the change output should include adelfield).\n\nThekind:5delete eventcreated in theNIP-09process MUST have a tag[\"k\", \"7375\"]to allow easy filtering by clients interested in state transitions."}
{"question": "What does Spending History Event mean?", "answer": "Clients SHOULD publishkind:7376events to create a transaction history when their balance changes.\n\njsonc\n{\n\"kind\": 7376,\n\"content\": nip44_encrypt([\n[ \"direction\", \"in\" ], // in = received, out = sent\n[ \"amount\", \"1\" ],\n[ \"e\", \"<event-id-of-created-token>\", \"\", \"created\" ]\n]),\n\"tags\": [\n[ \"e\", \"<event-id-of-created-token>\", \"\", \"redeemed\" ]\n]\n}\n\n- direction- The direction of the transaction;infor received funds,outfor sent funds.\n\nClients MUST addetags to create references of destroyed and created token events along with the marker of the meaning of the tag:\n*created- A new token event was created.\n*destroyed- A token event was destroyed.\n*redeemed- ANIP-61nutzap was redeemed.\n\nAll tags can beNIP-44encrypted. Clients SHOULD leaveetags with aredeemedmarker unencrypted.\n\nMultipleetags can be added, and should be encrypted, except for tags with theredeemedmarker."}
{"question": "What does Flow mean?", "answer": "A client that wants to check for user's wallets information starts by fetchingkind:10019events from the user's relays, if no event is found, it should fall back to using the user'sNIP-65relays."}
{"question": "What does Fetch wallet and token list mean?", "answer": "From those relays, the client should fetch wallet and token events.\n\n\"kinds\": [17375, 7375], \"authors\": [\"<my-pubkey>\"]"}
{"question": "What does Spending token mean?", "answer": "If Alice spends 4 sats from this token eventjsonc\n{\n\"kind\": 7375,\n\"id\": \"event-id-1\",\n\"content\": nip44_encrypt({\n\"mint\": \"https://stablenut.umint.cash\",\n\"proofs\": [\n{ \"id\": \"1\", \"amount\": 1 },\n{ \"id\": \"2\", \"amount\": 2 },\n{ \"id\": \"3\", \"amount\": 4 },\n{ \"id\": \"4\", \"amount\": 8 },\n]\n}),\n\"tags\": []\n}\n\nHer client:\n* MUST roll over the unspent proofs:jsonc\n{\n\"kind\": 7375,\n\"id\": \"event-id-2\",\n\"content\": nip44_encrypt({\n\"mint\": \"https://stablenut.umint.cash\",\n\"proofs\": [\n{ \"id\": \"1\", \"amount\": 1 },\n{ \"id\": \"2\", \"amount\": 2 },\n{ \"id\": \"4\", \"amount\": 8 },\n],\n\"del\": [ \"event-id-1\" ]\n}),\n\"tags\": []\n}* MUST delete eventevent-id-1* SHOULD add theevent-id-1to thedelarray of deleted token-ids.\n* SHOULD create akind:7376event to record the spendjsonc\n{\n\"kind\": 7376,\n\"content\": nip44_encrypt([\n[ \"direction\", \"out\" ],\n[ \"amount\", \"4\" ],\n[ \"e\", \"<event-id-1>\", \"\", \"destroyed\" ],\n[ \"e\", \"<event-id-2>\", \"\", \"created\" ],\n]),\n\"tags\": []\n}"}
{"question": "What does Redeeming a quote (optional) mean?", "answer": "When creating a quote at a mint, an event can be used to keep the state of the quote ID, which will be used to check when the quote has been paid. These events should be created with an expiration tagNIP-40of 2 weeks (which is around the maximum amount of time a Lightning payment may be in-flight).\n\nHowever, application developers SHOULD use local state when possible and only publish this event when it makes sense in the context of their application.\n\njsonc\n{\n\"kind\": 7374,\n\"content\": nip44_encrypt(\"quote-id\"),\n\"tags\": [\n[ \"expiration\", \"<expiration-timestamp>\" ],\n[ \"mint\", \"<mint-url>\" ]\n]\n}"}
{"question": "What does Appendix 1: Validating proofs mean?", "answer": "Clients can optionally validate proofs to make sure they are not working from an old state; this logic is left up to particular implementations to decide when and why to do it, but if some proofs are checked and deemed to have been spent, the client should delete the token and roll over any unspent proof."}
{"question": "What does Nutzaps mean?", "answer": "draftoptional\n\nA Nutzap is a P2PK Cashu token in which the payment itself is the receipt."}
{"question": "What does Alice nutzaps Bob mean?", "answer": "- Alice fetches eventkind:10019from Bob to see the mints Bob trusts.\n- She mints a token at that mint (or swaps some tokens she already had in that mint) P2PK-locked to the pubkey Bob has listed in hiskind:10019.\n- She publishes akind:9321event to the relays Bob indicated with the proofs she minted."}
{"question": "What does Bob receives the nutzap mean?", "answer": "- At some point, Bob's client fetcheskind:9321events p-tagging him from his relays.\n- Bob's client swaps the token into his wallet."}
{"question": "What does Nutzap informational event mean?", "answer": "jsonc\n{\n\"kind\": 10019,\n\"tags\": [\n[ \"relay\", \"wss://relay1\" ],\n[ \"relay\", \"wss://relay2\" ],\n[ \"mint\", \"https://mint1\", \"usd\", \"sat\" ],\n[ \"mint\", \"https://mint2\", \"sat\" ],\n[ \"pubkey\", \"<p2pk-pubkey>\" ]\n]\n}\n\n- kind:10019is an event that is useful for others to know how to send money to the user.\n- relay: relays where the user will be reading token events from. If a user wants to send money to the user, they should write to these relays.\n- mint: mints the user is explicitly agreeing to use to receive funds on. Clients SHOULD not send money on mints not listed here or risk burning their money. Additional markers can be used to list the supported base units of the mint.\n- pubkey: Public key that MUST be used to P2PK-lock receiving nutzaps -- implementations MUST NOT use the target user's main Nostr public key. This public key corresponds to theprivkeyfield encrypted in a user'snip-60wallet event."}
{"question": "What does Nutzap event mean?", "answer": "Eventkind:9321is a nutzap event published by the sender, p-tagging the recipient. The outputs are P2PK-locked to the public key the recipient indicated in theirkind:10019event.\n\nClients MUST prefix the public key they P2PK-lock with\"02\"(for nostr<>cashu compatibility).\n\njsonc\n{\n\"kind\": 9321,\n\"content\": \"Thanks for this great idea.\",\n\"pubkey\": \"<sender-pubkey>\",\n\"tags\": [\n[ \"proof\", \"{\\\"amount\\\":1,\\\"C\\\":\\\"02277c66191736eb72fce9d975d08e3191f8f96afb73ab1eec37e4465683066d3f\\\",\\\"id\\\":\\\"000a93d6f8a1d2c4\\\",\\\"secret\\\":\\\"[\\\\\\\"P2PK\\\\\\\",{\\\\\\\"nonce\\\\\\\":\\\\\\\"b00bdd0467b0090a25bdf2d2f0d45ac4e355c482c1418350f273a04fedaaee83\\\\\\\",\\\\\\\"data\\\\\\\":\\\\\\\"02eaee8939e3565e48cc62967e2fde9d8e2a4b3ec0081f29eceff5c64ef10ac1ed\\\\\\\"}]\\\"}\" ],\n[ \"u\", \"https://stablenut.umint.cash\" ],\n[ \"e\", \"<nutzapped-event-id>\", \"<relay-hint>\" ],\n[ \"p\", \"e9fbced3a42dcf551486650cc752ab354347dd413b307484e4fd1818ab53f991\" ], // recipient of nutzap\n]\n}\n\n- .contentis an optional comment for the nutzap\n- .tags:\n- proofis one or more proofs P2PK-locked to the public key the recipient specified in theirkind:10019event and including a DLEQ proof.\n- uis the mint the URL of the mint EXACTLY as specified by the recipient'skind:10019.\n- pis the Nostr identity public key of nutzap recipient.\n- eis the event that is being nutzapped, if any."}
{"question": "What does Sending a nutzap mean?", "answer": "- The sender fetches the recipient'skind:10019.\n- The sender mints/swaps ecash on one of the recipient's listed mints.\n- The sender P2PK-locks to the recipient's specified public key in theirkind:10019"}
{"question": "What does Receiving nutzaps mean?", "answer": "Clients should REQ for nutzaps:\n* Filtering with#ufor mints they expect to receive ecash from.\n* this is to prevent even interacting with mints the user hasn't explicitly signaled.\n* Filtering withsinceof the most recentkind:7376event the same user has created.\n* this can be used as a marker of the nutzaps that have already been swaped by the user -- clients might choose to use other kinds of markers, including internal state -- this is just a guidance of one possible approach.\n\n{ \"kinds\": [9321], \"#p\": [\"my-pubkey\"], \"#u\": [\"<mint-1>\", \"<mint-2>\"], \"since\": <latest-created_at-of-kind-7376> }.\n\nUpon receiving a new nutzap, the client should swap the tokens into a wallet the user controls, either aNIP-60wallet, their own LN wallet or anything else."}
{"question": "What does Updating nutzap-redemption history mean?", "answer": "When claiming a token the client SHOULD create akind:7376event andetag the original nutzap event. This is to record that this token has already been claimed (and shouldn't be attempted again) and as signaling to the recipient that the ecash has been redeemed.\n\nMultiplekind:9321events can be tagged in the samekind:7376event.\n\njsonc\n{\n\"kind\": 7376,\n\"content\": nip44_encrypt([\n[ \"direction\", \"in\" ], // in = received, out = sent\n[ \"amount\", \"1\" ],\n[ \"e\", \"<7375-event-id>\", \"<relay-hint>\", \"created\" ] // new token event that was created\n]),\n\"tags\": [\n[ \"e\", \"<9321-event-id>\", \"<relay-hint>\", \"redeemed\" ], // nutzap event that has been redeemed\n[ \"p\", \"<sender-pubkey>\" ] // pubkey of the author of the 9321 event (nutzap sender)\n]\n}\n\nEvents that redeem a nutzap SHOULD be published to the sender'sNIP-65\"read\" relays."}
{"question": "What does Verifying a Cashu Zap mean?", "answer": "When listing or counting zaps received by any given event, observer clients SHOULD:\n\n- check that the receiving user has issued akind:10019tagging the mint where the cashu has been minted.\n- check that the token is locked to the pubkey the user has listed in theirkind:10019.\n- look at theutag and check that the token is issued in one of the mints listed in thekind:10019.\n- locally verify the DLEQ proof of the tokens being sent.\n\nAll these checks can be done offline (as long as the observer has the receiver mints' keyset and theirkind:10019event), so the process should be reasonably fast."}
{"question": "What does Final Considerations mean?", "answer": "- Clients SHOULD guide their users to use NUT-11 (P2PK) and NUT-12 (DLEQ proofs) compatible-mints in theirkind:10019event to avoid receiving nutzaps anyone can spend.\n- Clients SHOULD normalize and deduplicate mint URLs as described in NIP-65.\n- A nutzap event MUST include proofs in one of the mints the recipient has listed in theirkind:10019and published to the NIP-65 relays of the recipient, failure to do so may result in the recipient donating the tokens to the mint since the recipient might never see the event."}
{"question": "What does Request to Vanish mean?", "answer": "draftoptional\n\nThis NIP offers a Nostr-native way to request a complete reset of a key's fingerprint on the web. This procedure is legally binding in some jurisdictions, and thus, supporters of this NIP should truly delete events from their database."}
{"question": "What does Request to Vanish from Relay mean?", "answer": "Kind62requests a specific relay to delete everything, includingNIP-09Deletion Events, from the.pubkeyuntil its.created_at.\n\njsonc\n{\n\"kind\": 62,\n\"pubkey\": <32-byte hex-encoded public key of the event creator>,\n\"tags\": [\n[\"relay\", \"<relay url>\"]\n],\n\"content\": \"<reason or note>\",\n//...other fields\n}\n\nThe tag list MUST include at least onerelayvalue.\n\nContent MAY include a reason or a legal notice to the relay operator.\n\nRelays MUST fully delete any events from the.pubkeyif their service URL is tagged in the event.\n\nRelays SHOULD delete allNIP-59Gift Wraps that p-tagged the.pubkeyif their service URL is tagged in the event, deleting all DMs to the pubkey.\n\nRelays MUST ensure the deleted events cannot be re-broadcasted into the relay.\n\nRelays MAY store the signed request to vanish for bookkeeping.\n\nPaid relays or relays that restrict who can post MUST also follow the request to vanish regardless of the user's status.\n\nPublishing a deletion request event (Kind5) against a request to vanish has no effect. Clients and relays are not obliged to support \"unrequest vanish\" functionality.\n\nClients SHOULD send this event to the target relays only."}
{"question": "What does Global Request to Vanish mean?", "answer": "To request ALL relays to delete everything, the event MUST include arelaytag with the valueALL_RELAYSin uppercase.\n\njsonc\n{\n\"kind\": 62,\n\"pubkey\": <32-byte hex-encoded public key of the event creator>,\n\"tags\": [\n[\"relay\", \"ALL_RELAYS\"]\n],\n\"content\": \"<reason>\",\n//...other fields\n}\n\nClients SHOULD broadcast this event to as many relays as possible."}
{"question": "What does Chess (Portable Game Notation) mean?", "answer": "draftoptional\n\nThis NIP defineskind:64notes representing chess games inPGNformat, which can be read by humans and is also supported by most chess software."}
{"question": "What does Resources mean?", "answer": "- PGN Specification: PGN (Portable Game Notation) specification\n- PGN Specification Supplement: Addition for adding graphical elements, clock values, eval, ...\n- PGN Formal Syntax\n- PGN Seven Tag Roster\n- PGN Import Format\n- PGN Export Format\n- lichess / pgn-viewer (GitHub): PGN viewer widget, designed to be embedded in content pages"}
{"question": "What does Relay List Metadata mean?", "answer": "draftoptional\n\nDefines a replaceable event usingkind:10002to advertise relays where the user generallywritesto and relays where the user generallyreadsmentions.\n\nThe event MUST include a list ofrtags with relay URLs as value and an optionalreadorwritemarker. If the marker is omitted, the relay is bothreadandwrite.\n\njsonc\n{\n\"kind\": 10002,\n\"tags\": [\n[\"r\", \"wss://alicerelay.example.com\"],\n[\"r\", \"wss://brando-relay.com\"],\n[\"r\", \"wss://expensive-relay.example2.com\", \"write\"],\n[\"r\", \"wss://nostr-relay.example.com\", \"read\"]\n],\n\"content\": \"\",\n// other fields...\n}\n\nWhen downloading eventsfroma user, clients SHOULD use thewriterelays of that user.\n\nWhen downloading eventsabouta user, where the user was tagged (mentioned), clients SHOULD use the user'sreadrelays.\n\nWhen publishing an event, clients SHOULD:\n\n- Send the event to thewriterelays of the author\n- Send the event to allreadrelays of each tagged user\n- Send the author'skind:10002event to all relays the event was published to"}
{"question": "What does Size mean?", "answer": "Clients SHOULD guide users to keepkind:10002lists small (2-4 relays of each category)."}
{"question": "What does Discoverability mean?", "answer": "Clients SHOULD spread an author'skind:10002event to as many relays as viable, paying attention to relays that, at any moment, serve naturally as well-known public indexers for these relay lists (where most other clients and users are connecting to in order to publish and fetch those)."}
{"question": "What does Relay Discovery and Liveness Monitoring mean?", "answer": "draftoptional\n\nYou want to find relays. You may want to discover relays based on criteria that's up to date. You may even want to ensure that you have a complete dataset. You probably want to filter relays based on their reported liveness.\n\nIn its purest form:\n\njson\n{\n\"kind\": 30166,\n\"created_at\": 1722173222,\n\"content\": \"{}\",\n\"tags\": [\n[ \"d\", \"wss://somerelay.abc/\" ]\n],\n\"pubkey\": \"<pubkey>\",\n\"sig\": \"<signature>\",\n\"id\": \"<eventid>\"\n}\n\nThis event signals that the relay atwss://somerelay.abc/was reported \"online\" by<pubkey>at timestamp1722173222. This eventMAYbe extended upon to include more information."}
{"question": "What does Ontology mean?", "answer": "- Relay Operator: someone who operates a relay\n- Monitor: A pubkey that monitors relays and publishes30166events at the frequency specified in their10166event.\n- Ad-hoc Monitor: A pubkey that monitors relays and publishes30166events at an irregular frequency.\n- Monitor Service: A group or individual that monitors relays using one or moreMonitors.\n- Check: a specific data point that is tested or aggregated by a monitor."}
{"question": "What does Summary mean?", "answer": "30166is aNIP-33addressable event, referred to as a \"Relay Discovery\" event. These events are optimized with a small footprint for protocol-level relay Discovery."}
{"question": "What does Purpose mean?", "answer": "Discovery of relays over nostr."}
{"question": "What does created_at mean?", "answer": "Thecreated_atfield in a NIP-66 event should reflect the time when the relay liveness (and potentially other data points) was checked."}
{"question": "What does Meta Tags (unindexed) mean?", "answer": "- rtt-openThe relay's openround-trip timein milliseconds.\n- rtt-readThe relay's readround-trip timein milliseconds.\n- rtt-writeThe relay's writeround-trip timein milliseconds.\n\nOtherrttvaluesMAYbe present. This NIP should be updated if there is value found in morerttvalues."}
{"question": "What does Single Letter Tags (indexed) mean?", "answer": "- dThe relay URL/URI. The#dtagmustbe included in theevent.tags[]array. Index position1mustbe the relay websocket URL/URI. If a URL itSHOULDbenormalized. For relays not accessible via conventional means but rather by an npub/pubkey, an npub/pubkeyMAYbe used in place of a URL.json\n[ \"d\", \"wss://somerelay.abc/\"]\n- n: Networkjson\n[ \"n\", \"clearnet\" ]\n- T: Relay Type. Enumeratedrelay typeformatted asPascalCasejson\n[\"T\", \"PrivateInbox\" ]\n- N: Supported NipsFrom NIP-11 \"Informational Document\"nip11.supported_nips[]json\n[ \"N\", \"42\" ]\n- R: RequirementsNIP-11 \"Informational Document\"nip11.limitations.payment_required,nip11.limitations.auth_requiredand/or any other boolean value withinnip11.limitations[]that is added in the futurejson\n[ \"R\", \"payment\" ],\n[ \"R\", \"auth\" ],Since the nostr protocol does not currently support filtering on whether an indexed tagisoris notset, to make \"public\" and \"no auth\" relays discoverable requires a!flag\n\njson\n[ \"R\", \"!payment\" ], //no payment required, is public\n[ \"R\", \"!auth\" ], //no authentication required\n\n- t: \"Topics\"From NIP-11 \"Informational Document\"nip11.tags[]json\n[ \"t\", \"nsfw\" ]\n- k: Accepted/Blocked Kinds [NIP-22]json\n[ \"k\", \"0\" ],\n[ \"k\", \"3\" ],\n[ \"k\", \"10002\" ]\n\nor for blocked kinds\n\njson\n[ \"k\", \"!0\" ]\n[ \"k\", \"!3\" ],\n[ \"k\", \"!10002\" ]\n\n- g:NIP-52gtags (geohash)json\n[ \"g\", \"9r1652whz\" ]\n- 30166MAYbe extended with global tags defined by other NIPs that do no collide with locally defined indices, including but not limited to:p,t,e,a,iandl/L."}
{"question": "What does Robust Example of a30166Event mean?", "answer": "Relay was online, and you can filter on a number of different tagsjson\n{\n\"id\": \"<eventid>\",\n\"pubkey\": \"<monitor's pubkey>\",\n\"created_at\": \"<created_at  [some recent date ...]>\",\n\"signature\": \"<signature>\",\n\"content\": \"{}\",\n\"kind\": 30166,\n\"tags\": [\n[\"d\",\"wss://some.relay/\"],\n[\"n\", \"clearnet\"],\n[\"N\", \"40\"],\n[\"N\", \"33\"],\n[\"R\", \"!payment\"],\n[\"R\", \"auth\"],\n[\"g\", \"ww8p1r4t8\"],\n[\"p\", \"somehexkey...\"],\n[\"l\", \"en\", \"ISO-639-1\"],\n[\"t\", \"nsfw\" ],\n[\"rtt-open\", 234 ]\n]\n}"}
{"question": "What does Standard Tags mean?", "answer": "- frequencyThe frequencyin secondsat which the monitor publishes events. A string-integer at index1represents the expected frequency the monitor will publish30166events. There should only be1frequency per monitor.\n\njson\n[ \"frequency\", \"3600\" ]\n\n- timeout(optional) The timeout values for various checks conducted by a monitor. Index1is the monitor's timeout in milliseconds. Index2describes what test the timeout is used for. If no index2is provided, it is inferred that the timeout provided applies to all tests. These values can assist relay operators in understanding data signaled by the monitor inRelay Discovery Events.json\n[ \"timeout\", \"2000\", \"open\" ],\n[ \"timeout\", \"2000\", \"read\" ],\n[ \"timeout\", \"3000\", \"write\" ],\n[ \"timeout\", \"2000\", \"nip11\" ],\n[ \"timeout\", \"4000\", \"ssl\" ]"}
{"question": "What does Indexed Tags mean?", "answer": "- c\"Checks\"SHOULDbe a lowercase string describing the check(s) conducted by a monitor. Due to the rapidly evolving nature of relays, enumeration is organic and not strictly defined. But examples of some checks could be websocketopen/read/write/auth,nip11checks,dnsandgeochecks, and and any other checks the monitor may deem useful.. Other checksMAYbe included. New types of checksSHOULDbe added to this NIP as they are needed.json\n[ \"c\", \"ws\" ],\n[ \"c\", \"nip11\" ],\n[ \"c\", \"dns\" ],\n[ \"c\", \"geo\" ],\n[ \"c\", \"ssl\" ],\n- g:NIP-52gtags (geohash)json\n[ \"g\", \"9r1652whz\" ]\n- Any other globally defined indexable tagsMAYbe included as found necessary."}
{"question": "What does Other Requirements mean?", "answer": "MonitorsSHOULDhave the following\n- A published0(NIP-1) event\n- A published10002(NIP-65) event that defines the relays the monitor publishes to."}
{"question": "What does Robust Example of a10166Event mean?", "answer": "```json\n{\n\"id\": \"\",\n\"pubkey\": \"\",\n\"created_at\": \"\",\n\"signature\": \"\",\n\"content\": \"\",\n\"tags\": [\n\n```\n[ \"timeout\", \"open\", \"5000\"  ],\n[ \"timeout\", \"read\", \"3000\"  ],\n[ \"timeout\", \"write\", \"3000\" ],\n[ \"timeout\", \"nip11\", \"3000\" ],\n\n[ \"frequency\", \"3600\" ],\n\n[ \"c\", \"ws\" ],\n[ \"c\", \"nip11\" ],\n[ \"c\", \"ssl\" ],\n[ \"c\", \"dns\" ],\n[ \"c\", \"geo\" ]\n\n[ \"g\", \"ww8p1r4t8\" ]\n```\n\n]\n}\n```"}
{"question": "What does Monitors mean?", "answer": "- ARelay Monitorchecks the liveness and potentially other attributes of a relay.\n- Relay Monitorpublishes a kind30166note when a relay it is monitoring is online. If the monitor has a10166event, events should be published at the frequency defined in their10166note.\n\nAny pubkey that publishes30166eventsSHOULDat a minimum be checking that the relay is available by websocket and behaves like a relay"}
{"question": "What does Clients mean?", "answer": "- In most cases, a clientSHOULDfilter on30166events using either a statically or dynamically defined monitor'spubkeyand acreated_atvalue respective of the monitor's publishedfrequency. If the monitor has no stated frequency, other mechanisms should be employed to determine data integrity.\n- Relay Livenessis subjectively determined by the client, starting with thefrequencyvalue of a monitor.\n- The liveness of aRelay Monitorcan be subjectively determined by detecting whether theRelay Monitorhas published events with respect tofrequencyvalue of any particular monitor.\n- The reliability and trustworthiness of aRelay Monitorcould be established via web-of-trust, reviews or similar mechanisms."}
{"question": "What does Risk Mitigation mean?", "answer": "- When a client implementsNIP-66events, the client should have a fallback ifNIP-66events cannot be located.\n- AMonitororAd-hoc Monitormay publish erroneous30166events, intentionally or otherwise. Therefor, it's important to program defensively to limit the impact of such events. This can be achieved with web-of-trust, reviews, fallbacks and/or data-aggregation for example."}
{"question": "What does Picture-first feeds mean?", "answer": "draftoptional\n\nThis NIP defines event kind20for picture-first clients. Images must be self-contained. They are hosted externally and referenced usingimetatags.\n\nThe idea is for this type of event to cater to Nostr clients resembling platforms like Instagram, Flickr, Snapchat, or 9GAG, where the picture itself takes center stage in the user experience."}
{"question": "What does Picture Events mean?", "answer": "Picture events contain atitletag and description in the.content.\n\nThey may contain multiple images to be displayed as a single post.\n\n```jsonc\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\":,\n\"kind\": 20,\n\"content\": \"\",\n\"tags\": [\n[\"title\", \"\"],\n\n```\n// Picture Data\n[\n\"imeta\",\n\"url https://nostr.build/i/my-image.jpg\",\n\"m image/jpeg\",\n\"blurhash eVF$^OI:${M{o#*0-nNFxakD-?xVM}WEWB%iNKxvR-oetmo#R-aen$\",\n\"dim 3024x4032\",\n\"alt A scenic photo overlooking the coast of Costa Rica\",\n\"x <sha256 hash as specified in NIP 94>\",\n\"fallback https://nostrcheck.me/alt1.jpg\",\n\"fallback https://void.cat/alt1.jpg\"\n],\n[\n\"imeta\",\n\"url https://nostr.build/i/my-image2.jpg\",\n\"m image/jpeg\",\n\"blurhash eVF$^OI:${M{o#*0-nNFxakD-?xVM}WEWB%iNKxvR-oetmo#R-aen$\",\n\"dim 3024x4032\",\n\"alt Another scenic photo overlooking the coast of Costa Rica\",\n\"x <sha256 hash as specified in NIP 94>\",\n\"fallback https://nostrcheck.me/alt2.jpg\",\n\"fallback https://void.cat/alt2.jpg\",\n\n\"annotate-user <32-bytes hex of a pubkey>:<posX>:<posY>\" // Tag users in specific locations in the picture\n],\n\n[\"content-warning\", \"<reason>\"], // if NSFW\n\n// Tagged users\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\"],\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\"],\n\n// Specify the media type for filters to allow clients to filter by supported kinds\n[\"m\", \"image/jpeg\"],\n\n// Hashes of each image to make them queryable\n[\"x\", \"<sha256>\"]\n\n// Hashtags\n[\"t\", \"<tag>\"],\n[\"t\", \"<tag>\"],\n\n// location\n[\"location\", \"<location>\"], // city name, state, country\n[\"g\", \"<geohash>\"],\n\n// When text is written in the image, add the tag to represent the language\n[\"L\", \"ISO-639-1\"],\n[\"l\", \"en\", \"ISO-639-1\"]\n```\n\n]\n}\n```\n\nTheimetatagannotate-userplaces a user link in the specific position in the image.\n\nOnly the following media types are accepted:\n-image/apng: Animated Portable Network Graphics (APNG)\n-image/avif: AV1 Image File Format (AVIF)\n-image/gif: Graphics Interchange Format (GIF)\n-image/jpeg: Joint Photographic Expert Group image (JPEG)\n-image/png: Portable Network Graphics (PNG)\n-image/webp: Web Picture format (WEBP)\n\nPicture events might be used withNIP-71's kind22to display short vertical videos in the same feed."}
{"question": "What does Peer-to-peer Order events mean?", "answer": "draftoptional"}
{"question": "What does The event mean?", "answer": "Events areaddressable eventsand use38383as event kind, a p2p event look like this:\n\njson\n{\n\"id\": \"84fad0d29cb3529d789faeff2033e88fe157a48e071c6a5d1619928289420e31\",\n\"pubkey\": \"dbe0b1be7aafd3cfba92d7463edbd4e33b2969f61bd554d37ac56f032e13355a\",\n\"created_at\": 1702548701,\n\"kind\": 38383,\n\"tags\": [\n[\"d\", \"ede61c96-4c13-4519-bf3a-dcf7f1e9d842\"],\n[\"k\", \"sell\"],\n[\"f\", \"VES\"],\n[\"s\", \"pending\"],\n[\"amt\", \"0\"],\n[\"fa\", \"100\"],\n[\"pm\", \"face to face\", \"bank transfer\"],\n[\"premium\", \"1\"],\n[\n\"rating\",\n\"{\\\"total_reviews\\\":1,\\\"total_rating\\\":3.0,\\\"last_rating\\\":3,\\\"max_rate\\\":5,\\\"min_rate\\\":1}\"\n],\n[\"source\", \"https://t.me/p2plightning/xxxxxxx\"],\n[\"network\", \"mainnet\"],\n[\"layer\", \"lightning\"],\n[\"name\", \"Nakamoto\"],\n[\"g\", \"<geohash>\"],\n[\"bond\", \"0\"],\n[\"expiration\", \"1719391096\"],\n[\"y\", \"lnp2pbot\"],\n[\"z\", \"order\"]\n],\n\"content\": \"\",\n\"sig\": \"7e8fe1eb644f33ff51d8805c02a0e1a6d034e6234eac50ef7a7e0dac68a0414f7910366204fa8217086f90eddaa37ded71e61f736d1838e37c0b73f6a16c4af2\"\n}"}
{"question": "What does Protected Events mean?", "answer": "draftoptional\n\nWhen the\"-\"tag is present, that means the event is \"protected\".\n\nA protected event is an event that can only be published to relays by its author. This is achieved by relays ensuring that the author isauthenticatedbefore publishing their own events or by just rejecting events with[\"-\"]outright.\n\nThe default behavior of a relay MUST be to reject any event that contains[\"-\"].\n\nRelays that want to accept such events MUST first require that the client perform theNIP-42AUTHflow and then check if the authenticated client has the same pubkey as the event being published and only accept the event in that case."}
{"question": "What does The tag mean?", "answer": "The tag is a simple tag with a single item:[\"-\"]. It may be added to any event."}
{"question": "What does Example flow mean?", "answer": "- User79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798connects to relaywss://example.com:\n\njsonc\n/* client: */\n[\"EVENT\",{\"id\":\"cb8feca582979d91fe90455867b34dbf4d65e4b86e86b3c68c368ca9f9eef6f2\",\"pubkey\":\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"created_at\":1707409439,\"kind\":1,\"tags\":[[\"-\"]],\"content\":\"hello members of the secret group\",\"sig\":\"fa163f5cfb75d77d9b6269011872ee22b34fb48d23251e9879bb1e4ccbdd8aaaf4b6dc5f5084a65ef42c52fbcde8f3178bac3ba207de827ec513a6aa39fa684c\"}]\n/* relay: */\n[\"AUTH\", \"<challenge>\"]\n[\"OK\", \"cb8feca582979d91fe90455867b34dbf4d65e4b86e86b3c68c368ca9f9eef6f2\", false, \"auth-required: this event may only be published by its author\"]\n/* client: */\n[\"AUTH\", {}]\n[\"EVENT\",{\"id\":\"cb8feca582979d91fe90455867b34dbf4d65e4b86e86b3c68c368ca9f9eef6f2\",\"pubkey\":\"79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798\",\"created_at\":1707409439,\"kind\":1,\"tags\":[[\"-\"]],\"content\":\"hello members of the secret group\",\"sig\":\"fa163f5cfb75d77d9b6269011872ee22b34fb48d23251e9879bb1e4ccbdd8aaaf4b6dc5f5084a65ef42c52fbcde8f3178bac3ba207de827ec513a6aa39fa684c\"}]\n[\"OK\", \"cb8feca582979d91fe90455867b34dbf4d65e4b86e86b3c68c368ca9f9eef6f2\", true, \"\"]"}
{"question": "What does Why mean?", "answer": "There are multiple circumstances in which it would be beneficial to prevent the unlimited spreading of an event through all relays imaginable and restrict some to only a certain demographic or to a semi-closed community relay. Even when the information is public it may make sense to keep it compartimentalized across different relays.\n\nIt's also possible to create closed access feeds with this when the publisher has some relationship with the relay and trusts the relay to not release their published events to anyone.\n\nEven though it's ultimately impossible to restrict the spread of information on the internet (for example, one of the members of the closed group may want to take an event intended to be restricted and republish it to other relays), most relays would be happy to not facilitate the acts of these so-called \"pirates\", in respect to the original decision of the author and therefore gladly reject these republish acts if given the means to.\n\nThis NIP gives these authors and relays the means to clearly signal when a given event is not intended to be republished by third parties."}
{"question": "What does Video Events mean?", "answer": "draftoptional\n\nThis specification definesvideoevents representing a dedicated post of externally hosted content.\n\nUnlike akind:1event with a video attached, video events are meant to contain all additional metadata concerning the subject media and to be surfaced in video-specific clients rather than general micro-blogging clients. The thought is for events of this kind to be referenced in a Netflix, YouTube, or TikTok like nostr client where the video itself is at the center of the experience."}
{"question": "What does Other tags: mean?", "answer": "- title(required) title of the video\n- published_at, for the timestamp in unix seconds (stringified) of the first time the video was published\n- duration(optional) video duration in seconds\n- text-track(optional, repeated) link to WebVTT file for video, type of supplementary information (captions/subtitles/chapters/metadata), optional language code\n- content-warning(optional) warning about content of NSFW video\n- alt(optional) description for accessibility\n- segment(optional, repeated) start timestamp in formatHH:MM:SS.sss, end timestamp in formatHH:MM:SS.sss, chapter/segment title, chapter thumbnail-url\n- t(optional, repeated) hashtag to categorize video\n- p(optional, repeated) 32-bytes hex pubkey of a participant in the video, optional recommended relay URL\n- r(optional, repeated) references / links to web pages\n\n```jsonc\n{\n\"id\": <32-bytes lowercase hex-encoded SHA-256 of the the serialized event data>,\n\"pubkey\": <32-bytes lowercase hex-encoded public key of the event creator>,\n\"created_at\":,\n\"kind\": 21 | 22,\n\"content\": \"\",\n\"tags\": [\n[\"title\", \"\"],\n[\"published_at\", \"\"],\n[\"alt\",],\n\n```\n// video Data\n[\"imeta\",\n\"dim 1920x1080\",\n\"url https://myvideo.com/1080/12345.mp4\",\n\"x 3093509d1e0bc604ff60cb9286f4cd7c781553bc8991937befaacfdc28ec5cdc\",\n\"m video/mp4\",\n\"image https://myvideo.com/1080/12345.jpg\",\n\"image https://myotherserver.com/1080/12345.jpg\",\n\"fallback https://myotherserver.com/1080/12345.mp4\",\n\"fallback https://andanotherserver.com/1080/12345.mp4\",\n\"service nip96\",\n],\n\n[\"duration\", <duration of video in seconds>],\n[\"text-track\", \"<encoded `kind 6000` event>\", \"<recommended relay urls>\"],\n[\"content-warning\", \"<reason>\"],\n[\"segment\", <start>, <end>, \"<title>\", \"<thumbnail URL>\"],\n\n// participants\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\"],\n[\"p\", \"<32-bytes hex of a pubkey>\", \"<optional recommended relay URL>\"],\n\n// hashtags\n[\"t\", \"<tag>\"],\n[\"t\", \"<tag>\"],\n\n// reference links\n[\"r\", \"<url>\"],\n[\"r\", \"<url>\"]\n```\n\n]\n}\n```"}
{"question": "What does Moderated Communities (Reddit Style) mean?", "answer": "draftoptional\n\nThe goal of this NIP is to enable public communities. It defines the replaceable eventkind:34550to define the community and the current list of moderators/administrators. Users that want to post into the community, simply tag any Nostr event with the community'satag. Moderators may issue an approval eventkind:4550."}
{"question": "What does Community Definition mean?", "answer": "Kind:34550SHOULD include any field that helps define the community and the set of moderators.relaytags MAY be used to describe the preferred relay to download requests and approvals. A community definition event'sdtag MAY double as its name, but if anametag is provided, it SHOULD be displayed instead of thedtag.\n\n```jsonc\n{\n\"created_at\":,\n\"kind\": 34550,\n\"tags\": [\n[\"d\", \"\"],\n[\"name\", \"\"],\n[\"description\", \"\"],\n[\"image\", \"\", \"x\"],\n\n```\n//.. other tags relevant to defining the community\n\n// moderators\n[\"p\", \"<32-bytes hex of a pubkey1>\", \"<optional recommended relay URL>\", \"moderator\"],\n[\"p\", \"<32-bytes hex of a pubkey2>\", \"<optional recommended relay URL>\", \"moderator\"],\n[\"p\", \"<32-bytes hex of a pubkey3>\", \"<optional recommended relay URL>\", \"moderator\"],\n\n// relays used by the community (w/optional marker)\n[\"relay\", \"<relay hosting author kind 0>\", \"author\"],\n[\"relay\", \"<relay where to send and receive requests>\", \"requests\"],\n[\"relay\", \"<relay where to send and receive approvals>\", \"approvals\"],\n[\"relay\", \"<relay where to post requests to and fetch approvals from>\"]\n```\n\n],\n// other fields...\n}\n```"}
{"question": "What does Posting to a community mean?", "answer": "Any Nostr event can be posted to a community. Clients MUST add one or more communityatags, each with a recommended relay.\n\njsonc\n{\n\"kind\": 1,\n\"tags\": [\n[\"a\", \"34550:<community event author pubkey>:<community-d-identifier>\", \"<optional-relay-url>\"],\n],\n\"content\": \"hello world\",\n// other fields...\n}"}
{"question": "What does Moderation mean?", "answer": "Anyone may issue an approval event to express their opinion that a post is appropriate for a community. Clients MAY choose which approval events to honor, but SHOULD at least use ones published by the group's defined moderators.\n\nAn approval event MUST include one or more communityatags, aneoratag pointing to the post, and theptag of the author of the post (for approval notifications).atag prefixes can be used to disambiguate between community and replaceable event pointers (communityatags always begin with34550).\n\nThe event SHOULD also include the JSON-stringifiedpost requestevent inside the.content, and aktag with the original post's event kind to allow filtering of approved posts by kind.\n\nModerators MAY request deletion of their approval of a post at any time usingNIP-09 event deletion requests.\n\njsonc\n{\n\"pubkey\": \"<32-bytes lowercase hex-encoded public key of the event creator>\",\n\"kind\": 4550,\n\"tags\": [\n[\"a\", \"34550:<event-author-pubkey>:<community-d-identifier>\", \"<optional-relay-url>\"],\n[\"e\", \"<post-id>\", \"<optional-relay-url>\"],\n[\"p\", \"<port-author-pubkey>\", \"<optional-relay-url>\"],\n[\"k\", \"<post-request-kind>\"]\n],\n\"content\": \"<the full approved event, JSON-encoded>\",\n// other fields...\n}\n\nIt's recommended that multiple moderators approve posts to avoid deleting them from the community when a moderator is removed from the owner's list. In case the full list of moderators must be rotated, the new moderator set must sign new approvals for posts in the past or the community will restart. The owner can also periodically copy and re-sign of each moderator's approval events to make sure posts don't disappear with moderators.\n\nApprovals of replaceable events can be created in three ways:\n\n- By tagging the replaceable event as anetag if moderators want to approve each individual change to the replaceable event\n- By tagging the replaceable event as anatag if the moderator authorizes the replaceable event author to make changes without additional approvals and\n- By tagging the replaceable event with both itseandatag which empowers clients to display the original and updated versions of the event, with appropriate remarks in the UI.\n\nSince relays are instructed to delete old versions of a replaceable event, thecontentof an approval using anetag MUST have the specific version of the event or clients might not be able to find that version of the content anywhere.\n\nClients SHOULD evaluate any non-34550:*atag as posts to be approved for all34550:*atags."}
{"question": "What does Cross-posting mean?", "answer": "Clients MAY support cross-posting between communities by posting a NIP 18kind 6orkind 16repost to one or more communities usingatags as described above. Thecontentof the repost MUST be the original event, not the approval event."}
{"question": "What does External Content IDs mean?", "answer": "draftoptional\n\nThere are certain established global content identifiers such asBook ISBNs,Podcast GUIDs, andMovie ISANsthat are useful to reference in nostr events so that clients can query all the events assosiated with these ids.\n\nitags are used for referencing these external content ids, withktags representing the external content id kind so that clients can query all the events for a specific kind."}
{"question": "What does Supported IDs mean?", "answer": "| Type                   |itag                                                    |ktag                  |\n| ---                    | ---                                                        | ---                      |\n| URLs                   | \"<URL, normalized, no fragment>\"                         | \"web\"                    |\n| Books                  | \"isbn:<id, without hyphens>\"                             | \"isbn\"                   |\n| Geohashes              | \"geo:<geohash, lowercase>\"                               | \"geo\"                    |\n| Movies                 | \"isan:<id, without version part>\"                        | \"isan\"                   |\n| Papers                 | \"doi:<id, lowercase>\"                                    | \"doi\"                    |\n| Hashtags               | \"#<topic, lowercase>\"                                    | \"#\"                      |\n| Podcast Feeds          | \"podcast:guid:<guid>\"                                    | \"podcast:guid\"           |\n| Podcast Episodes       | \"podcast:item:guid:<guid>\"                               | \"podcast:item:guid\"      |\n| Podcast Publishers     | \"podcast:publisher:guid:<guid>\"                          | \"podcast:publisher:guid\" |\n| Blockchain Transaction | \"<blockchain>:[<chainId>:]tx:<txid, hex, lowercase>\" | \"<blockchain>:tx\"      |\n| Blockchain Address     | \"<blockchain>:[<chainId>:]address:<address>\"         | \"<blockchain>:address\" |"}
{"question": "What does Webpages mean?", "answer": "For the webpage \"https://myblog.example.com/post/2012-03-27/hello-world\" the \"i\" and \"k\" tags are:\n\njsonc\n[\n[\"i\", \"https://myblog.example.com/post/2012-03-27/hello-world\"],\n[\"k\", \"web\"]\n]"}
{"question": "What does Books: mean?", "answer": "- Book ISBN:[\"i\", \"isbn:9780765382030\"]- https://isbnsearch.org/isbn/9780765382030\n\nBook ISBNs MUST be referencedwithout hyphensas many book search APIs return the ISBNs without hyphens. Removing hypens from ISBNs is trivial, whereas adding the hyphens back in is non-trivial requiring a library."}
{"question": "What does Podcasts: mean?", "answer": "- Podcast RSS Feed GUID:[\"i\", \"podcast:guid:c90e609a-df1e-596a-bd5e-57bcc8aad6cc\"]- https://podcastindex.org/podcast/c90e609a-df1e-596a-bd5e-57bcc8aad6cc\n- Podcast RSS Item GUID:[\"i\", \"podcast:item:guid:d98d189b-dc7b-45b1-8720-d4b98690f31f\"]\n- Podcast RSS Publisher GUID:[\"i\", \"podcast:publisher:guid:18bcbf10-6701-4ffb-b255-bc057390d738\"]"}
{"question": "What does Movies: mean?", "answer": "- Movie ISAN:[\"i\", \"isan:0000-0000-401A-0000-7\"]- https://web.isan.org/public/en/isan/0000-0000-401A-0000-7\n\nMovie ISANs SHOULD be referencedwithout the version partas the versions / edits of movies are not relevant. More info on ISAN parts here -  https://support.isan.org/hc/en-us/articles/360002783131-Records-relations-and-hierarchies-in-the-ISAN-Registry"}
{"question": "What does Blockchain mean?", "answer": "<blockchain>can be any layer 1 chain (bitcoin,ethereum,solana, ...). If necessary (e.g. for ethereum), you can specify a<chainId>."}
{"question": "What does Bitcoin mean?", "answer": "bitcoin:address:<bech32, lowercase | base58, case sensitive>\nbitcoin:tx:<txid, hex, lowercase>\n\nE.g. https://blockstream.info/tx/a1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\n\njsonc\n[\n[\"i\", \"bitcoin:tx:a1075db55d416d3ca199f55b6084e2115b9345e16c5cf302fc80e9d5fbf5d48d\"],\n[\"k\", \"bitcoin:tx\"]\n]\n\nE.g. https://blockstream.info/address/1HQ3Go3ggs8pFnXuHVHRytPCq5fGG8Hbhx\n\njsonc\n[\n[\"i\", \"bitcoin:address:1HQ3Go3ggs8pFnXuHVHRytPCq5fGG8Hbhx\"],\n[\"k\", \"bitcoin:address\"]\n]"}
{"question": "What does Ethereum (and other EVM chains) mean?", "answer": "ethereum:<chainId, integer>:tx:<txHash, hex, lowercase>\nethereum:<chainId, integer>:address:<hex, lowercase>\n\nE.g. https://etherscan.io/address/0xd8dA6BF26964aF9D7eEd9e03E53415D37aA96045\n\njsonc\n[\n[\"i\", \"ethereum:1:address:0xd8da6bf26964af9d7eed9e03e53415d37aa96045\"],\n[\"k\", \"ethereum:address\"]\n]\n\nE.g. https://gnosisscan.io/tx/0x98f7812be496f97f80e2e98d66358d1fc733cf34176a8356d171ea7fbbe97ccd\n\njsonc\n[\n[\"i\", \"ethereum:100:tx:0x98f7812be496f97f80e2e98d66358d1fc733cf34176a8356d171ea7fbbe97ccd\"],\n[\"k\", \"ethereum:tx\"]\n]"}
{"question": "What does Optional URL Hints mean?", "answer": "Eachitag MAY have a url hint as the second argument to redirect people to a website if the client isn't opinionated about how to interpret the id:\n\n[\"i\", \"podcast:item:guid:d98d189b-dc7b-45b1-8720-d4b98690f31f\", https://fountain.fm/episode/z1y9TMQRuqXl2awyrQxg]\n\n[\"i\", \"isan:0000-0000-401A-0000-7\", https://www.imdb.com/title/tt0120737]"}
{"question": "What does Zap Goals mean?", "answer": "draftoptional\n\nThis NIP defines an event for creating fundraising goals. Users can contribute funds towards the goal by zapping the goal event."}
{"question": "What does Nostr Event mean?", "answer": "Akind:9041event is used.\n\nThe.contentcontains a human-readable description of the goal.\n\nThe following tags are defined as REQUIRED.\n\n- amount- target amount in milisats.\n- relays- a list of relays the zaps to this goal will be sent to and tallied from.\n\nExample event:\n\njsonc\n{\n\"kind\": 9041,\n\"tags\": [\n[\"relays\", \"wss://alicerelay.example.com\", \"wss://bobrelay.example.com\", /*...*/],\n[\"amount\", \"210000\"],\n],\n\"content\": \"Nostrasia travel expenses\",\n// other fields...\n}\n\nThe following tags are OPTIONAL.\n\n- closed_at- timestamp for determining which zaps are included in the tally. Zap receipts published after theclosed_attimestamp SHOULD NOT count towards the goal progress.\n- image- an image for the goal\n- summary- a brief description\n\njsonc\n{\n\"kind\": 9041,\n\"tags\": [\n[\"relays\", \"wss://alicerelay.example.com\", \"wss://bobrelay.example.com\", /*...*/],\n[\"amount\", \"210000\"],\n[\"closed_at\", \"<unix timestamp in seconds>\"],\n[\"image\", \"<image URL>\"],\n[\"summary\", \"<description of the goal>\"],\n],\n\"content\": \"Nostrasia travel expenses\",\n// other fields...\n}\n\nThe goal MAY include anroratag linking to a URL or addressable event.\n\nThe goal MAY include multiple beneficiary pubkeys by specifyingzaptags.\n\nAddressable events can link to a goal by using agoaltag specifying the event id and an optional relay hint.\n\njsonc\n{\n\"kind\": 3xxxx,\n\"tags\": [\n[\"goal\", \"<event id>\", \"<Relay URL (optional)>\"],\n// rest of tags...\n],\n// other fields...\n}"}
{"question": "What does Use cases mean?", "answer": "- Fundraising clients\n- Adding funding goals to events such as long form posts, badges or live streams"}
{"question": "What does Arbitrary custom app data mean?", "answer": "draftoptional\n\nThe goal of this NIP is to enableremoteStorage-like capabilities for custom applications that do not care about interoperability.\n\nEven though interoperability is great, some apps do not want or do not need interoperability, and it wouldn't make sense for them. Yet Nostr can still serve as a generalized data storage for these apps in a \"bring your own database\" way, for example: a user would open an app and somehow input their preferred relay for storage, which would then enable these apps to store application-specific data there."}
{"question": "What does Nostr event mean?", "answer": "This NIP specifies the use of event kind30078(anaddressableevent) with adtag containing some reference to the app name and context -- or any other arbitrary string.contentand othertagscan be anything or in any format."}
{"question": "What does Some use cases mean?", "answer": "- User personal settings on Nostr clients (and other apps unrelated to Nostr)\n- A way for client developers to propagate dynamic parameters to users without these having to update\n- Personal private data generated by apps that have nothing to do with Nostr, but allow users to use Nostr relays as their personal database"}
{"question": "What does Threads mean?", "answer": "draftoptional\n\nA thread is akind 11event.  Threads SHOULD include atitle.\n\njson\n{\n\"kind\": 11,\n\"content\": \"Good morning\",\n\"tags\": [\n[\"title\", \"GM\"]\n]\n}\n\nReplies tokind 11MUST useNIP-22kind 1111comments. Replies should\nalways be to the rootkind 11to avoid arbitrarily nested reply hierarchies.\n\njson\n{\n\"kind\": 1111,\n\"content\": \"Cool beans\",\n\"tags\": [\n[\"K\", \"11\"],\n[\"E\", <event-id>, <relay-url>, <pubkey>]\n]\n}"}
{"question": "What does Highlights mean?", "answer": "draftoptional\n\nThis NIP defineskind:9802, a \"highlight\" event, to signal content a user finds valuable."}
{"question": "What does Attribution mean?", "answer": "Clients MAY include one or moreptags, tagging the original authors of the material being highlighted; this is particularly\nuseful when highlighting non-nostr content for which the client might be able to get a nostr pubkey somehow\n(e.g. prompting the user or reading a<link rel=\"me\" href=\"nostr:nprofile1...\" />tag on the document). A role MAY be included as the\nlast value of the tag.\n\njsonc\n{\n\"tags\": [\n[\"p\", \"<pubkey-hex>\", \"<relay-url>\", \"author\"],\n[\"p\", \"<pubkey-hex>\", \"<relay-url>\", \"author\"],\n[\"p\", \"<pubkey-hex>\", \"<relay-url>\", \"editor\"]\n],\n// other fields...\n}"}
{"question": "What does Context mean?", "answer": "Clients MAY include acontexttag, useful when the highlight is a subset of a paragraph and displaying the\nsurrounding content might be beneficial to give context to the highlight."}
{"question": "What does Quote Highlights mean?", "answer": "Acommenttag may be added to create a quote highlight. This MUST be rendered like a quote repost with the highlight as the quoted note.\n\nThis is to prevent the creation and multiple notes (highlight + kind 1) for a single highlight action, which looks bad in micro-blogging clients where these notes may appear in succession.\n\np-tag mentions MUST have amentionattribute to distinguish it from authors and editors.\n\nr-tag urls from the comment MUST have amentionattribute to distinguish from the highlighted source url. The source url MUST have thesourceattribute."}
{"question": "What does Relay Management API mean?", "answer": "draftoptional\n\nRelays may provide an API for performing management tasks. This is made available as a JSON-RPC-like request-response protocol over HTTP, on the same URI as the relay's websocket.\n\nWhen a relay receives an HTTP(s) request with aContent-Typeheader ofapplication/nostr+json+rpcto a URI supporting WebSocket upgrades, it should parse the request as a JSON document with the following fields:\n\njson\n{\n\"method\": \"<method-name>\",\n\"params\": [\"<array>\", \"<of>\", \"<parameters>\"]\n}\n\nThen it should return a response in the format\n\njson\n{\n\"result\": {\"<arbitrary>\": \"<value>\"},\n\"error\": \"<optional error message, if the call has errored>\"\n}\n\nThis is the list ofmethodsthat may be supported:\n\n- supportedmethods:\n- params:[]\n- result:[\"<method-name>\", \"<method-name>\", ...](an array with the names of all the other supported methods)\n- banpubkey:\n- params:[\"<32-byte-hex-public-key>\", \"<optional-reason>\"]\n- result:true(a boolean always set totrue)\n- listbannedpubkeys:\n- params:[]\n- result:[{\"pubkey\": \"<32-byte-hex>\", \"reason\": \"<optional-reason>\"}, ...], an array of objects\n- allowpubkey:\n- params:[\"<32-byte-hex-public-key>\", \"<optional-reason>\"]\n- result:true(a boolean always set totrue)\n- listallowedpubkeys:\n- params:[]\n- result:[{\"pubkey\": \"<32-byte-hex>\", \"reason\": \"<optional-reason>\"}, ...], an array of objects\n- listeventsneedingmoderation:\n- params:[]\n- result:[{\"id\": \"<32-byte-hex>\", \"reason\": \"<optional-reason>\"}], an array of objects\n- allowevent:\n- params:[\"<32-byte-hex-event-id>\", \"<optional-reason>\"]\n- result:true(a boolean always set totrue)\n- banevent:\n- params:[\"<32-byte-hex-event-id>\", \"<optional-reason>\"]\n- result:true(a boolean always set totrue)\n- listbannedevents:\n- params:[]\n- result:[{\"id\": \"<32-byte hex>\", \"reason\": \"<optional-reason>\"}, ...], an array of objects\n- changerelayname:\n- params:[\"<new-name>\"]\n- result:true(a boolean always set totrue)\n- changerelaydescription:\n- params:[\"<new-description>\"]\n- result:true(a boolean always set totrue)\n- changerelayicon:\n- params:[\"<new-icon-url>\"]\n- result:true(a boolean always set totrue)\n- allowkind:\n- params:[<kind-number>]\n- result:true(a boolean always set totrue)\n- disallowkind:\n- params:[<kind-number>]\n- result:true(a boolean always set totrue)\n- listallowedkinds:\n- params:[]\n- result:[<kind-number>, ...], an array of numbers\n- blockip:\n- params:[\"<ip-address>\", \"<optional-reason>\"]\n- result:true(a boolean always set totrue)\n- unblockip:\n- params:[\"<ip-address>\"]\n- result:true(a boolean always set totrue)\n- listblockedips:\n- params:[]\n- result:[{\"ip\": \"<ip-address>\", \"reason\": \"<optional-reason>\"}, ...], an array of objects"}
{"question": "What does Authorization mean?", "answer": "The request must contain anAuthorizationheader with a validNIP-98event, except thepayloadtag is required. Theutag is the relay URL.\n\nIfAuthorizationis not provided or is invalid, the endpoint should return a 401 response."}
{"question": "What does Polls mean?", "answer": "draftoptional\n\nThis NIP defines the event scheme that describe Polls on nostr."}
{"question": "What does Poll Event mean?", "answer": "The poll event is defined as akind:1068event.\n\n- contentkey holds the label for the poll.\n\nMajor tags in the poll event are:\n\n- option: The option tags contain an OptionId(any alphanumeric) field, followed by an option label field.\n- relay: One or multiple tags that the poll is expecting respondents to respond on.\n- polltype: can be \"singlechoice\" or \"multiplechoice\". Polls that do not have a polltype should be considered a \"singlechoice\" poll.\n- endsAt: signifying at which unix timestamp the poll is meant to end.\n\nExample Event\n\njson\n{\n\"content\": \"Pineapple on pizza\",\n\"created_at\": 1719888496,\n\"id\": \"9d1b6b9562e66f2ecf35eb0a3c2decc736c47fddb13d6fb8f87185a153ea3634\",\n\"kind\": 1068,\n\"pubkey\": \"dee45a23c4f1d93f3a2043650c5081e4ac14a778e0acbef03de3768e4f81ac7b\",\n\"sig\": \"7fa93bf3c430eaef784b0dacc217d3cd5eff1c520e7ef5d961381bc0f014dde6286618048d924808e54d1be03f2f2c2f0f8b5c9c2082a4480caf45a565ca9797\",\n\"tags\": [\n[\"option\", \"qj518h583\", \"Yay\"],\n[\"option\", \"gga6cdnqj\", \"Nay\"],\n[\"relay\", \"<relay url1>\"],\n[\"relay\", \"<relay url2>\"],\n[\"polltype\", \"singlechoice\"],\n[\"endsAt\", \"<unix timestamp in seconds>\"]\n]\n}"}
{"question": "What does Responses mean?", "answer": "The response event is akind:1018event. It contains an e tag with the poll event it is referencing, followed by one or more response tags.\n\n- response: The tag contains \"response\" as it's first positional argument followed by the option Id selected.\n\nThe responses are meant to be published to the relays specified in the poll event.\n\nExample Response Event\n\njson\n{\n\"content\": \"\",\n\"created_at\": 1720097117,\n\"id\": \"60a005e32e9596c3f544a841a9bc4e46d3020ca3650d6a739c95c1568e33f6d8\",\n\"kind\": 1018,\n\"pubkey\": \"1bc70a0148b3f316da33fe7e89f23e3e71ac4ff998027ec712b905cd24f6a411\",\n\"sig\": \"30071a633c65db8f3a075c7a8de757fbd8ce65e3607f4ba287fe6d7fbf839a380f94ff4e826fbba593f6faaa13683b7ea9114ade140720ecf4927010ebf3e44f\",\n\"tags\": [\n[\"e\", \"1fc80cf813f1af33d5a435862b7ef7fb96b47e68a48f1abcadf8081f5a545550\"],\n[\"response\", \"gga6cdnqj\"],\n[\"response\", \"m3agjsdq1\"]\n]\n}"}
{"question": "What does Poll Types mean?", "answer": "The polltype setting dictates how multiple response tags are handled in thekind:1018event.\n\n- polltype: singlechoice: The first response tag is to be considered the actual response.\n- polltype: multiplechoice: The first response tag pointing to each id is considered the actual response, without considering the order of the response tags."}
{"question": "What does Counting Results mean?", "answer": "Results can be queried by fetchingkind:1018events from the relays specified in the poll.\nThe results displayed should only be 1 vote event per pubkey.\nIn case of multiple events for a pubkey, the event with the largest timestamp within the poll limits should be considered.\n\nExample for querying polls.\n\nts\nconst fetchVoteEvents = (filterPubkeys: string[]) => {\nlet resultFilter: Filter = {\n\"#e\": [pollEvent.id],\nkinds: [1018],\n};\nif (filterPubkeys?.length) {\nresultFilter.authors = filterPubkeys;\n}\nif (pollExpiration) {\nresultFilter.until = Number(pollExpiration);\n}\npool.subscribeMany(relays, [resultFilter], {\nonevent: handleResultEvent,\n});\n};\n\nExample for maintaining OneVotePerPubkey\n\n```ts\nconst oneVotePerPubkey = (events: Event[]) => {\nconst eventMap = new Map();\n\nevents.forEach((event) => {\nif (\n!eventMap.has(event.pubkey) ||\nevent.created_at > eventMap.get(event.pubkey)!.created_at\n) {\neventMap.set(event.pubkey, event);\n}\n});\n\nreturn Array.from(eventMap.values());\n};\n```"}
{"question": "What does Curation mean?", "answer": "The clients may configure fetching results by specific people. This can be achieved by creatingkind:30000follow sets, and fetching results only from the follow set.\nClients can also employ other curation algorithms, like Proof Of Work and Web of Trust scores for result curations."}
{"question": "What does Recommended Application Handlers mean?", "answer": "draftoptional\n\nThis NIP describeskind:31989andkind:31990: a way to discover applications that can handle unknown event-kinds."}
{"question": "What does Parties involved mean?", "answer": "There are three actors to this workflow:\n\n- application that handles a specific event kind (note that an application doesn't necessarily need to be a distinct entity and it could just be the same pubkey as user A)Publisheskind:31990, detailing how apps should redirect to it\n- Publisheskind:31990, detailing how apps should redirect to it\n- user A, who recommends an app that handles a specific event kindPublisheskind:31989\n- Publisheskind:31989\n- user B, who seeks a recommendation for an app that handles a specific event kindQueries forkind:31989and, based on results, queries forkind:31990\n- Queries forkind:31989and, based on results, queries forkind:31990"}
{"question": "What does Recommendation event mean?", "answer": "jsonc\n{\n\"kind\": 31989,\n\"pubkey\": <recommender-user-pubkey>,\n\"tags\": [\n[\"d\", <supported-event-kind>],\n[\"a\", \"31990:app1-pubkey:<d-identifier>\", \"wss://relay1\", \"ios\"],\n[\"a\", \"31990:app2-pubkey:<d-identifier>\", \"wss://relay2\", \"web\"]\n],\n// other fields...\n}\n\nThedtag inkind:31989is the supported event kind this event is recommending.\n\nMultipleatags can appear on the samekind:31989.\n\nThe second value of the tag SHOULD be a relay hint.\nThe third value of the tag SHOULD be the platform where this recommendation might apply."}
{"question": "What does Handler information mean?", "answer": "jsonc\n{\n\"kind\": 31990,\n\"pubkey\": \"<application-pubkey>\",\n\"content\": \"<optional-kind:0-style-metadata>\",\n\"tags\": [\n[\"d\", <random-id>],\n[\"k\", <supported-event-kind>],\n[\"web\", \"https://..../a/<bech32>\", \"nevent\"],\n[\"web\", \"https://..../p/<bech32>\", \"nprofile\"],\n[\"web\", \"https://..../e/<bech32>\"],\n[\"ios\", \".../<bech32>\"]\n],\n// other fields...\n}\n\n- contentis an optionalmetadata-like stringified JSON object, as described in NIP-01. This content is useful when the pubkey creating thekind:31990is not an application. Ifcontentis empty, thekind:0of the pubkey should be used to display application information (e.g. name, picture, web, LUD16, etc.)\n- ktags' value is the event kind that is supported by thiskind:31990.\nUsing aktag(s) (instead of having the kind of thedtag) provides:Multiplektags can exist in the same event if the application supports more than one event kind and their handler URLs are the same.The same pubkey can have multiple events with different apps that handle the same event kind.\n- Multiplektags can exist in the same event if the application supports more than one event kind and their handler URLs are the same.\n- The same pubkey can have multiple events with different apps that handle the same event kind.\n- bech32in a URL MUST be replaced by clients with the NIP-19-encoded entity that should be loaded by the application.\n\nMultiple tags might be registered by the app, following NIP-19 nomenclature as the second value of the array.\n\nA tag without a second value in the array SHOULD be considered a generic handler for any NIP-19 entity that is not handled by a different tag."}
{"question": "What does Client tag mean?", "answer": "When publishing events, clients MAY include aclienttag. Identifying the client that published the note. This tag is a tuple ofname,addressidentifying a handler event and, a relayhintfor finding the handler event. This has privacy implications for users, so clients SHOULD allow users to opt-out of using this tag.\n\njsonc\n{\n\"kind\": 1,\n\"tags\": [\n[\"client\", \"My Client\", \"31990:app1-pubkey:<d-identifier>\", \"wss://relay1\"]\n]\n// other fields...\n}"}
{"question": "What does User flow mean?", "answer": "A user A who uses a non-kind:1-centric nostr app could choose to announce/recommend a certain kind-handler application.\n\nWhen user B sees an unknown event kind, e.g. in a social-media centric nostr client, the client would allow user B to interact with the unknown-kind event (e.g. tapping on it).\n\nThe client MIGHT query for the user's and the user's follows handler."}
{"question": "What does User A recommends akind:31337-handler mean?", "answer": "User A might be a user of Zapstr, akind:31337-centric client (tracks). Using Zapstr, user A publishes an event recommending Zapstr as akind:31337-handler.\n\njsonc\n{\n\"kind\": 31989,\n\"tags\": [\n[\"d\", \"31337\"],\n[\"a\", \"31990:1743058db7078661b94aaf4286429d97ee5257d14a86d6bfa54cb0482b876fb0:abcd\", <relay-url>, \"web\"]\n],\n// other fields...\n}"}
{"question": "What does User B interacts with akind:31337-handler mean?", "answer": "User B might see in their timeline an event referring to akind:31337event (e.g. akind:1tagging akind:31337).\n\nUser B's client, not knowing how to handle akind:31337might display the event using itsalttag (as described in NIP-31). When the user clicks on the event, the application queries for a handler for thiskind:\n\n[\"REQ\", <id>, { \"kinds\": [31989], \"#d\": [\"31337\"], \"authors\": [<user>, <users-contact-list>] }]\n\nUser B, who follows User A, sees thatkind:31989event and fetches thea-tagged event for the app and handler information.\n\nUser B's client sees the application'skind:31990which includes the information to redirect the user to the relevant URL with the desired entity replaced in the URL."}
{"question": "What does Alternative query bypassingkind:31989 mean?", "answer": "Alternatively, users might choose to query directly forkind:31990for an event kind. Clients SHOULD be careful doing this and use spam-prevention mechanisms or querying high-quality restricted relays to avoid directing users to malicious handlers.\n\n[\"REQ\", <id>, { \"kinds\": [31990], \"#k\": [<desired-event-kind>], \"authors\": [...] }]"}
{"question": "What does Data Vending Machine mean?", "answer": "draftoptional\n\nThis NIP defines the interaction between customers and Service Providers for performing on-demand computation.\n\nMoney in, data out."}
{"question": "What does Actors mean?", "answer": "There are two actors in the workflow described in this NIP:\n* Customers (npubs who request a job)\n* Service providers (npubs who fulfill jobs)"}
{"question": "What does Job request (kind:5000-5999) mean?", "answer": "A request to process data, published by a customer. This event signals that a customer is interested in receiving the result of some kind of compute.\n\njsonc\n{\n\"kind\": 5xxx, // kind in 5000-5999 range\n\"content\": \"\",\n\"tags\": [\n[ \"i\", \"<data>\", \"<input-type>\", \"<relay>\", \"<marker>\" ],\n[ \"output\", \"<mime-type>\" ],\n[ \"relays\", \"wss://...\" ],\n[ \"bid\", \"<msat-amount>\" ],\n[ \"t\", \"bitcoin\" ]\n],\n// other fields...\n}\n\nAll tags are optional.\n\n- itag: Input data for the job (zero or more inputs)<data>: The argument for the input<input-type>: The way this argument should be interpreted. MUST be one of:url: A URL to be fetched of the data that should be processed.event: A Nostr event ID.job: The output of a previous job with the specified event ID. The dermination of which output to build upon is up to the service provider to decide (e.g. waiting for a signaling from the customer, waiting for a payment, etc.)text:<data>is the value of the input, no resolution is needed<relay>: Ifeventorjobinput-type, the relay where the event/job was published, otherwise optional or empty string<marker>: An optional field indicating how this input should be used within the context of the job\n- <data>: The argument for the input\n- <input-type>: The way this argument should be interpreted. MUST be one of:url: A URL to be fetched of the data that should be processed.event: A Nostr event ID.job: The output of a previous job with the specified event ID. The dermination of which output to build upon is up to the service provider to decide (e.g. waiting for a signaling from the customer, waiting for a payment, etc.)text:<data>is the value of the input, no resolution is needed\n- url: A URL to be fetched of the data that should be processed.\n- event: A Nostr event ID.\n- job: The output of a previous job with the specified event ID. The dermination of which output to build upon is up to the service provider to decide (e.g. waiting for a signaling from the customer, waiting for a payment, etc.)\n- text:<data>is the value of the input, no resolution is needed\n- <relay>: Ifeventorjobinput-type, the relay where the event/job was published, otherwise optional or empty string\n- <marker>: An optional field indicating how this input should be used within the context of the job\n- output: Expected output format. Different job requestkinddefines this more precisely.\n- param: Optional parameters for the job as key (first argument)/value (second argument). Different job requestkinddefines this more precisely. (e.g.[ \"param\", \"lang\", \"es\" ])\n- bid: Customer MAY specify a maximum amount (in millisats) they are willing to pay\n- relays: List of relays where Service Providers SHOULD publish responses to\n- p: Service Providers the customer is interested in. Other SPs MIGHT still choose to process the job"}
{"question": "What does Encrypted Params mean?", "answer": "If the user wants to keep the input parameters a secret, they can encrypt theiandparamtags with the service provider's 'p' tag and add it to the content field. Add a tagencryptedas tags. Encryption for private tags will useNIP-04 - Encrypted Direct Message encryption, using the user's private and service provider's public key for the shared secret\n\njson\n[\n[\"i\", \"what is the capital of France? \", \"text\"],\n[\"param\", \"model\", \"LLaMA-2\"],\n[\"param\", \"max_tokens\", \"512\"],\n[\"param\", \"temperature\", \"0.5\"],\n[\"param\", \"top-k\", \"50\"],\n[\"param\", \"top-p\", \"0.7\"],\n[\"param\", \"frequency_penalty\", \"1\"]\n]\n\nThis param data will be encrypted and added to thecontentfield andptag should be present\n\njsonc\n{\n\"content\": \"BE2Y4xvS6HIY7TozIgbEl3sAHkdZoXyLRRkZv4fLPh3R7LtviLKAJM5qpkC7D6VtMbgIt4iNcMpLtpo...\",\n\"tags\": [\n[\"p\", \"04f74530a6ede6b24731b976b8e78fb449ea61f40ff10e3d869a3030c4edc91f\"],\n[\"encrypted\"]\n],\n// other fields...\n}"}
{"question": "What does Job result (kind:6000-6999) mean?", "answer": "Service providers publish job results, providing the output of the job result. They should tag the original job request event id as well as the customer's pubkey.\n\njsonc\n{\n\"pubkey\": \"<service-provider pubkey>\",\n\"content\": \"<payload>\",\n\"kind\": 6xxx,\n\"tags\": [\n[\"request\", \"<job-request>\"],\n[\"e\", \"<job-request-id>\", \"<relay-hint>\"],\n[\"i\", \"<input-data>\"],\n[\"p\", \"<customer's-pubkey>\"],\n[\"amount\", \"requested-payment-amount\", \"<optional-bolt11>\"]\n],\n// other fields...\n}\n\n- request: The job request event stringified-JSON.\n- amount: millisats that the Service Provider is requesting to be paid. An optional third value can be a bolt11 invoice.\n- i: The original input(s) specified in the request."}
{"question": "What does Encrypted Output mean?", "answer": "If the request has encrypted params, then output should be encrypted and placed incontentfield. If the output is encrypted, then avoid includingitag with input-data as clear text.\nAdd a tag encrypted to mark the output content asencrypted\n\njsonc\n{\n\"pubkey\": \"<service-provider pubkey>\",\n\"content\": \"<encrypted payload>\",\n\"kind\": 6xxx,\n\"tags\": [\n[\"request\", \"<job-request>\"],\n[\"e\", \"<job-request-id>\", \"<relay-hint>\"],\n[\"p\", \"<customer's-pubkey>\"],\n[\"amount\", \"requested-payment-amount\", \"<optional-bolt11>\"],\n[\"encrypted\"]\n],\n// other fields...\n}"}
{"question": "What does Job feedback mean?", "answer": "Service providers can give feedback about a job back to the customer.\n\njsonc\n{\n\"kind\": 7000,\n\"content\": \"<empty-or-payload>\",\n\"tags\": [\n[\"status\", \"<status>\", \"<extra-info>\"],\n[\"amount\", \"requested-payment-amount\", \"<bolt11>\"],\n[\"e\", \"<job-request-id>\", \"<relay-hint>\"],\n[\"p\", \"<customer's-pubkey>\"],\n],\n// other fields...\n}\n\n- content: Either empty or a job-result (e.g. for partial-result samples)\n- amounttag: as defined in theJob Resultsection.\n- statustag: Service Providers SHOULD indicate what this feedback status refers to.Job Feedback Statusdefines status. Extra human-readable information can be added as an extra argument.\n- NOTE: If the input params requires input to be encrypted, thencontentfield will have encrypted payload withptag as key."}
{"question": "What does Job feedback status mean?", "answer": "| status             | description                                                                                                 |\n| --------           | -------------                                                                                               |\n|payment-required| Service Provider requires payment before continuing.                                                        |\n|processing| Service Provider is processing the job.                                                                     |\n|error| Service Provider was unable to process the job.                                                             |\n|success| Service Provider successfully processed the job.                                                            |\n|partial| Service Provider partially processed the job. The.contentmight include a sample of the partial results. |\n\nAny job feedback event MIGHT include results in the.contentfield, as described in theJob Resultsection. This is useful for service providers to provide a sample of the results that have been processed so far."}
{"question": "What does Protocol Flow mean?", "answer": "- Customer publishes a job request (e.g.kind:5000speech-to-text).\n- Service Providers MAY submitkind:7000job-feedback events (e.g.payment-required,processing,error, etc.).\n- Upon completion, the service provider publishes the result of the job with akind:6000job-result event.\n- At any point, if there is anamountpending to be paid as instructed by the service provider, the user can pay the includedbolt11or zap the job result event the service provider has sent to the user.\n\nJob feedback (kind:7000) and Job Results (kind:6000-6999) events MAY include anamounttag, this can be interpreted as a suggestion to pay. Service Providers MUST use thepayment-requiredfeedback event to signal that a payment is required and no further actions will be performed until the payment is sent.\n\nCustomers can always either pay the includedbolt11invoice or zap the event requesting the payment and service providers should monitor for both if they choose to include a bolt11 invoice."}
{"question": "What does Notes about the protocol flow mean?", "answer": "The flow is deliberately ambiguous, allowing vast flexibility for the interaction between customers and service providers so that service providers can model their behavior based on their own decisions/perceptions of risk.\n\nSome service providers might choose to submit apayment-requiredas the first reaction before sending aprocessingor before delivering results, some might choose to serve partial results for the job (e.g. a sample), send apayment-requiredto deliver the rest of the results, and some service providers might choose to assess likelihood of payment based on an npub's past behavior and thus serve the job results before requesting payment for the best possible UX.\n\nIt's not up to this NIP to define how individual vending machines should choose to run their business."}
{"question": "What does Cancellation mean?", "answer": "A job request might be canceled by publishing akind:5delete request event tagging the job request event."}
{"question": "What does Appendix 1: Job chaining mean?", "answer": "A Customer MAY request multiple jobs to be processed as a chain, where the output of a job is the input of another job. (e.g. podcast transcription -> summarization of the transcription). This is done by specifying as input an event id of a different job with thejobtype.\n\nService Providers MAY begin processing a subsequent job the moment they see the prior job's result, but they will likely wait for a zap to be published first. This introduces a risk that Service Provider of job #1 might delay publishing the zap event in order to have an advantage. This risk is up to Service Providers to mitigate or to decide whether the service provider of job #1 tends to have good-enough results so as to not wait for an explicit zap to assume the job was accepted.\n\nThis gives a higher level of flexibility to service providers (which sophisticated service providers would take anyway)."}
{"question": "What does Appendix 2: Service provider discoverability mean?", "answer": "Service Providers MAY use NIP-89 announcements to advertise their support for job kinds:\n\njsonc\n{\n\"kind\": 31990,\n\"pubkey\": \"<pubkey>\",\n\"content\": \"{\n\\\"name\\\": \\\"Translating DVM\\\",\n\\\"about\\\": \\\"I'm a DVM specialized in translating Bitcoin content.\\\"\n}\",\n\"tags\": [\n[\"k\", \"5005\"], // e.g. translation\n[\"t\", \"bitcoin\"] // e.g. optionally advertises it specializes in bitcoin audio transcription that won't confuse \"Drivechains\" with \"Ridechains\"\n],\n// other fields...\n}\n\nCustomers can use NIP-89 to see what service providers their follows use."}
{"question": "What does Media Attachments mean?", "answer": "Media attachments (images, videos, and other files) may be added to events by including a URL in the event content, along with a matchingimetatag.\n\nimeta(\"inline metadata\") tags MAY add information about media URLs in the event's content. Eachimetatag SHOULD match a URL in the event content. Clients MAY replace imeta URLs with rich previews.\n\nTheimetatag is variadic, and each entry is a space-delimited key/value pair.\nEachimetatag MUST have aurl, and at least one other field.imetaMAY include\nany field specified byNIP 94. There SHOULD be only oneimetatag per URL."}
{"question": "What does Recommended client behavior mean?", "answer": "When uploading files during a new post, clients MAY include this metadata\nafter the file is uploaded and included in the post.\n\nWhen pasting URLs during post composition, the client MAY download the file\nand add this metadata before the post is sent.\n\nThe client MAY ignoreimetatags that do not match the URL in the event content."}
{"question": "What does File Metadata mean?", "answer": "draftoptional\n\nThe purpose of this NIP is to allow an organization and classification of shared files. So that relays can filter and organize in any way that is of interest. With that, multiple types of filesharing clients can be created. NIP-94 support is not expected to be implemented by \"social\" clients that deal withkind:1notes or by longform clients that deal withkind:30023articles."}
{"question": "What does Event format mean?", "answer": "This NIP specifies the use of the1063event kind, having incontenta description of the file content, and a list of tags described below:\n\n- urlthe url to download the file\n- ma string indicating the data type of the file. TheMIME typesformat must be used, and they should be lowercase.\n- xcontaining the SHA-256 hexencoded string of the file.\n- oxcontaining the SHA-256 hexencoded string of the original file, before any transformations done by the upload server\n- size(optional) size of file in bytes\n- dim(optional) size of file in pixels in the form<width>x<height>\n- magnet(optional) URI to magnet file\n- i(optional) torrent infohash\n- blurhash(optional) theblurhashto show while the file is being loaded by the client\n- thumb(optional) url of thumbnail with same aspect ratio\n- image(optional) url of preview image with same dimensions\n- summary(optional) text excerpt\n- alt(optional) description for accessibility\n- fallback(optional) zero or more fallback file sources in caseurlfails\n- service(optional) service type which is serving the file (eg.NIP-96)\n\njsonc\n{\n\"kind\": 1063,\n\"tags\": [\n[\"url\",<string with URI of file>],\n[\"m\", <MIME type>],\n[\"x\", <Hash SHA-256>],\n[\"ox\", <Hash SHA-256>],\n[\"size\", <size of file in bytes>],\n[\"dim\", <size of file in pixels>],\n[\"magnet\", <magnet URI> ],\n[\"i\", <torrent infohash>],\n[\"blurhash\", <value>],\n[\"thumb\", <string with thumbnail URI>, <Hash SHA-256>],\n[\"image\", <string with preview URI>, <Hash SHA-256>],\n[\"summary\", <excerpt>],\n[\"alt\", <description>]\n],\n\"content\": \"<caption>\",\n// other fields...\n}"}
{"question": "What does Suggested use cases mean?", "answer": "- A relay for indexing shared files. For example, to promote torrents.\n- A pinterest-like client where people can share their portfolio and inspire others.\n- A simple way to distribute configurations and software updates."}
{"question": "What does HTTP File Storage Integration mean?", "answer": "draftoptional"}
{"question": "What does Introduction mean?", "answer": "This NIP defines a REST API for HTTP file storage servers intended to be used in conjunction with the nostr network.\nThe API will enable nostr users to upload files and later reference them by url on nostr notes.\n\nThe spec DOES NOT use regular nostr events through websockets for\nstoring, requesting nor retrieving data because, for simplicity, the server\nwill not have to learn anything about nostr relays."}
{"question": "What does Server Adaptation mean?", "answer": "File storage servers wishing to be accessible by nostr users should opt-in by making available an https route at/.well-known/nostr/nip96.jsonwithapi_url:\n\njsonc\n{\n// Required\n// File upload and deletion are served from this url\n// Also downloads if \"download_url\" field is absent or empty string\n\"api_url\": \"https://your-file-server.example/custom-api-path\",\n// Optional\n// If absent, downloads are served from the api_url\n\"download_url\": \"https://a-cdn.example/a-path\",\n// Optional\n// Note: This field is not meant to be set by HTTP Servers.\n// Use this if you are a nostr relay using your /.well-known/nostr/nip96.json\n// just to redirect to someone else's http file storage server's /.well-known/nostr/nip96.json\n// In this case, \"api_url\" field must be an empty string\n\"delegated_to_url\": \"https://your-file-server.example\",\n// Optional\n\"supported_nips\": [60],\n// Optional\n\"tos_url\": \"https://your-file-server.example/terms-of-service\",\n// Optional\n\"content_types\": [\"image/jpeg\", \"video/webm\", \"audio/*\"],\n// Optional\n\"plans\": {\n// \"free\" is the only standardized plan key and\n// clients may use its presence to learn if server offers free storage\n\"free\": {\n\"name\": \"Free Tier\",\n// Default is true\n// All plans MUST support NIP-98 uploads\n// but some plans may also allow uploads without it\n\"is_nip98_required\": true,\n\"url\": \"https://...\", // plan's landing page if there is one\n\"max_byte_size\": 10485760,\n// Range in days / 0 for no expiration\n// [7, 0] means it may vary from 7 days to unlimited persistence,\n// [0, 0] means it has no expiration\n// early expiration may be due to low traffic or any other factor\n\"file_expiration\": [14, 90],\n\"media_transformations\": {\n\"image\": [\n\"resizing\"\n]\n}\n}\n}\n}"}
{"question": "What does Relay Hints mean?", "answer": "Note: This section is not meant to be used by HTTP Servers.\n\nA nostr relay MAY redirect to someone else's HTTP file storage server by\nadding a/.well-known/nostr/nip96.jsonwith \"delegated_to_url\" field\npointing to the url where the server hosts its own/.well-known/nostr/nip96.json. In this case, the \"api_url\" field must\nbe an empty string and all other fields must be absent.\n\nIf the nostr relay is also an HTTP file storage server,\nit must use the \"api_url\" field instead."}
{"question": "What does List of Supporting File Storage Servers mean?", "answer": "See https://github.com/aljazceru/awesome-nostr#nip-96-file-storage-servers."}
{"question": "What does Auth mean?", "answer": "When indicated,clientsmust add anNIP-98Authorizationheader (optionallywith the encodedpayloadtag set to the base64-encoded 256-bit SHA-256 hash of the file - not the hash of the whole request body)."}
{"question": "What does Upload mean?", "answer": "POST $api_urlasmultipart/form-data.\n\nAUTH required\n\nList of form fields:\n\n- file:REQUIREDthe file to upload\n- caption:RECOMMENDEDloose description;\n- expiration: UNIX timestamp in seconds. Empty string if file should be stored forever. The server isn't required to honor this.\n- size: File byte size. This is just a value the server can use to reject early if the file size exceeds the server limits.\n- alt:RECOMMENDEDstrict description text for visibility-impaired users.\n- media_type: \"avatar\" or \"banner\". Informs the server if the file will be used as an avatar or banner. If absent, the server will interpret it as a normal upload, without special treatment.\n- content_type: mime type such as \"image/jpeg\". This is just a value the server can use to reject early if the mime type isn't supported.\n- no_transform: \"true\" asks server not to transform the file and serve the uploaded file as is, may be rejected.\n\nOthers custom form data fields may be used depending on specificserversupport.\nTheserverisn't required to store any metadata sent byclients.\n\nThefilenameembedded in the file may not be honored by theserver, which could internally store just the SHA-256 hash value as the file name, ignoring extra metadata.\nThe hash is enough to uniquely identify a file, that's why it will be used on thedownloadanddeleteroutes.\n\nTheserverMUST link the user'spubkeystring as the owner of the file so to later allow them to delete the file.\n\nno_transformcan be used to replicate a file to multiple servers for redundancy, clients can use theserver listto find alternative servers which might contain the same file. When uploading a file and requestingno_transformclients should check that the hash matches in the response in order to detect if the file was modified."}
{"question": "What does Response codes mean?", "answer": "- 200 OK: File upload exists, but is successful (Existing hash)\n- 201 Created: File upload successful (New hash)\n- 202 Accepted: File upload is awaiting processing, seeDelayed Processingsection\n- 413 Payload Too Large: File size exceeds limit\n- 400 Bad Request: Form data is invalid or not supported.\n- 403 Forbidden: User is not allowed to upload or the uploaded file hash didnt match the hash included in theAuthorizationheaderpayloadtag.\n- 402 Payment Required: Payment is required by the server,this flow is undefined.\n\nThe upload response is a json object as follows:\n\njsonc\n{\n// \"success\" if successful or \"error\" if not\n\"status\": \"success\",\n// Free text success, failure or info message\n\"message\": \"Upload successful.\",\n// Optional. See \"Delayed Processing\" section\n\"processing_url\": \"...\",\n// This uses the NIP-94 event format but DO NOT need\n// to fill some fields like \"id\", \"pubkey\", \"created_at\" and \"sig\"\n//\n// This holds the download url (\"url\"),\n// the ORIGINAL file hash before server transformations (\"ox\")\n// and, optionally, all file metadata the server wants to make available\n//\n// nip94_event field is absent if unsuccessful upload\n\"nip94_event\": {\n// Required tags: \"url\" and \"ox\"\n\"tags\": [\n// Can be same from /.well-known/nostr/nip96.json's \"download_url\" field\n// (or \"api_url\" field if \"download_url\" is absent or empty) with appended\n// original file hash.\n//\n// Note we appended .png file extension to the `ox` value\n// (it is optional but extremely recommended to add the extension as it will help nostr clients\n// with detecting the file type by using regular expression)\n//\n// Could also be any url to download the file\n// (using or not using the /.well-known/nostr/nip96.json's \"download_url\" prefix),\n// for load balancing purposes for example.\n[\"url\", \"https://your-file-server.example/custom-api-path/719171db19525d9d08dd69cb716a18158a249b7b3b3ec4bbdec5698dca104b7b.png\"],\n// SHA-256 hash of the ORIGINAL file, before transformations.\n// The server MUST store it even though it represents the ORIGINAL file because\n// users may try to download/delete the transformed file using this value\n[\"ox\", \"719171db19525d9d08dd69cb716a18158a249b7b3b3ec4bbdec5698dca104b7b\"],\n// Optional. SHA-256 hash of the saved file after any server transformations.\n// The server can but does not need to store this value.\n[\"x\", \"543244319525d9d08dd69cb716a18158a249b7b3b3ec4bbde5435543acb34443\"],\n// Optional. Recommended for helping clients to easily know file type before downloading it.\n[\"m\", \"image/png\"],\n// Optional. Recommended for helping clients to reserve an adequate UI space to show the file before downloading it.\n[\"dim\", \"800x600\"]\n// ... other optional NIP-94 tags\n],\n\"content\": \"\"\n},\n// ... other custom fields (please consider adding them to this NIP or to NIP-94 tags)\n}\n\nNote that if the server didn't apply any transformation to the received file, bothnip94_event.tags.*.oxandnip94_event.tags.*.xfields will have the same value. The server MUST link the saved file to the SHA-256 hash of theoriginalfile before any server transformations (thenip94_event.tags.*.oxtag value). Theoriginalfile's SHA-256 hash will be used to identify the saved file when downloading or deleting it.\n\nclientsmay upload the same file to one or manyservers.\nAfter successful upload, theclientmay optionally generate and send to any set of nostrrelaysaNIP-94event by including the missing fields.\n\nAlternatively, instead of using NIP-94, theclientcan share or embed on a nostr note just the above url.\n\nclientsmay also use the tags from thenip94_eventto construct animetatag"}
{"question": "What does Delayed Processing mean?", "answer": "Sometimes the server may want to place the uploaded file in a processing queue for deferred file processing.\n\nIn that case, the server MUST serve the original file while the processing isn't done, then swap the original file for the processed one when the processing is over. The upload response is the same as usual but some optional metadata likenip94_event.tags.*.xandnip94_event.tags.*.sizewon't be available.\n\nThe expected resulting metadata that is known in advance should be returned on the response.\nFor example, if the file processing would change a file from \"jpg\" to \"webp\",\nuse \".webp\" extension on thenip94_event.tags.*.urlfield value and set \"image/webp\" to thenip94_event.tags.*.mfield.\nIf some metadata are unknown before processing ends, omit them from the response.\n\nThe upload response MAY include aprocessing_urlfield informing a temporary url that may be used by clients to check if\nthe file processing is done.\n\nIf the processing isn't done, the server should reply at theprocessing_urlurl with200 OKand the following JSON:\n\njsonc\n{\n// It should be \"processing\". If \"error\" it would mean the processing failed.\n\"status\": \"processing\",\n\"message\": \"Processing. Please check again later for updated status.\",\n\"percentage\": 15 // Processing percentage. An integer between 0 and 100.\n}\n\nWhen the processing is over, the server replies at theprocessing_urlurl with201 Createdstatus and a regular successful JSON response already mentioned before (nowwithoutaprocessing_urlfield), possibly including optional metadata atnip94_event.tags.*fields\nthat weren't available before processing."}
{"question": "What does File compression mean?", "answer": "File compression and other transformations like metadata stripping can be applied by the server.\nHowever, for all file actions, such as download and deletion, theoriginalfile SHA-256 hash is what identifies the file in the url string."}
{"question": "What does Download mean?", "answer": "GET $api_url/<sha256-hash>(.ext)\n\nThe primary file download url informed at the upload's response fieldnip94_event.tags.*.urlcan be that or not (it can be any non-standard url the server wants).\nIf not, the server still MUST also respond to downloads at the standard url\nmentioned on the previous paragraph, to make it possible for a client\nto try downloading a file on any NIP-96 compatible server by knowing just the SHA-256 file hash.\n\nNote that the \"\\<sha256-hash>\" part is from theoriginalfile,notfrom thetransformedfile if the uploaded file went through any server transformation.\n\nSupporting \".ext\", meaning \"file extension\", is required forservers. It is optional, although recommended, forclientsto append it to the path.\nWhen present it may be used byserversto know whichContent-Typeheader to send (e.g.: \"Content-Type\": \"image/png\" for \".png\" extension).\nThe file extension may be absent because the hash is the only needed string to uniquely identify a file.\n\nExample:$api_url/719171db19525d9d08dd69cb716a18158a249b7b3b3ec4bbdec5698dca104b7b.png"}
{"question": "What does Media Transformations mean?", "answer": "serversmay respond to some media transformation query parameters and ignore those they don't support by serving\nthe original media file without transformations."}
{"question": "What does Resizing mean?", "answer": "Upon upload,serversmay create resized image variants, such as thumbnails, respecting the original aspect ratio.clientsmay use thewquery parameter to request an image version with the desired pixel width.serverscan then serve the variant with the closest width to the parameter value\nor an image variant generated on the fly.\n\nExample:$api_url/<sha256-hash>.png?w=32"}
{"question": "What does Deletion mean?", "answer": "DELETE $api_url/<sha256-hash>(.ext)\n\nAUTH required\n\nNote that the/<sha256-hash>part is from theoriginalfile,notfrom thetransformedfile if the uploaded file went through any server transformation.\n\nThe extension is optional as the file hash is the only needed file identification.\n\nTheservershould reject deletes from users other than the original uploader with the appropriate http response code (403 Forbidden).\n\nIt should be noted that more than one user may have uploaded the same file (with the same hash). In this case, a delete must not really delete the file but just remove the user'spubkeyfrom the file owners list (considering the server keeps just one copy of the same file, because multiple uploads of the same file results\nin the same file hash).\n\nThe successful response is a 200 OK one with just basic JSON fields:\n\njson\n{\n\"status\": \"success\",\n\"message\": \"File deleted.\"\n}"}
{"question": "What does Listing files mean?", "answer": "GET $api_url?page=x&count=y\n\nAUTH required\n\nReturns a list of files linked to the authenticated users pubkey.\n\nExample Response:\n\njsonc\n{\n\"count\": 1, // server page size, eg. max(1, min(server_max_page_size, arg_count))\n\"total\": 1, // total number of files\n\"page\": 0, // the current page number\n\"files\": [\n{\n\"tags\": [\n[\"ox\", \"719171db19525d9d08dd69cb716a18158a249b7b3b3ec4bbdec5698dca104b7b\"],\n[\"x\", \"5d2899290e0e69bcd809949ee516a4a1597205390878f780c098707a7f18e3df\"],\n[\"size\", \"123456\"],\n[\"alt\", \"a meme that makes you laugh\"],\n[\"expiration\",  \"1715691139\"],\n// ...other metadata\n],\n\"content\": \"haha funny meme\", // caption\n\"created_at\": 1715691130 // upload timestamp\n}\n]\n}\n\nfilescontains an array of NIP-94 events"}
{"question": "What does Query args mean?", "answer": "- pagepage number (offset=page*count)\n- countnumber of items per page"}
{"question": "What does Selecting a Server mean?", "answer": "Note: HTTP File Storage Server developers may skip this section. This is meant for client developers.\n\nA File Server Preference event is a kind 10096 replaceable event meant to select one or more servers the user wants\nto upload files to. Servers are listed asservertags:\n\njsonc\n{\n\"kind\": 10096,\n\"content\": \"\",\n\"tags\": [\n[\"server\", \"https://file.server.one\"],\n[\"server\", \"https://file.server.two\"]\n],\n// other fields...\n}"}
{"question": "What does HTTP Auth mean?", "answer": "draftoptional\n\nThis NIP defines an ephemeral event used to authorize requests to HTTP servers using nostr events.\n\nThis is useful for HTTP services which are built for Nostr and deal with Nostr user accounts."}
{"question": "What does Request Flow mean?", "answer": "Using theAuthorizationHTTP header, thekind 27235event MUST bebase64encoded and use the Authorization schemeNostr\n\nExample HTTP Authorization header:Authorization: Nostr\neyJpZCI6ImZlOTY0ZTc1ODkwMzM2MGYyOGQ4NDI0ZDA5MmRhODQ5NGVkMjA3Y2JhODIzMTEwYmUzYTU3ZGZlNGI1Nzg3MzQiLCJwdWJrZXkiOiI2M2ZlNjMxOGRjNTg1ODNjZmUxNjgxMGY4NmRkMDllMThiZmQ3NmFhYmMyNGEwMDgxY2UyODU2ZjMzMDUwNGVkIiwiY29udGVudCI6IiIsImtpbmQiOjI3MjM1LCJjcmVhdGVkX2F0IjoxNjgyMzI3ODUyLCJ0YWdzIjpbWyJ1IiwiaHR0cHM6Ly9hcGkuc25vcnQuc29jaWFsL2FwaS92MS9uNXNwL2xpc3QiXSxbIm1ldGhvZCIsIkdFVCJdXSwic2lnIjoiNWVkOWQ4ZWM5NThiYzg1NGY5OTdiZGMyNGFjMzM3ZDAwNWFmMzcyMzI0NzQ3ZWZlNGEwMGUyNGY0YzMwNDM3ZmY0ZGQ4MzA4Njg0YmVkNDY3ZDlkNmJlM2U1YTUxN2JiNDNiMTczMmNjN2QzMzk0OWEzYWFmODY3MDVjMjIxODQifQ"}
{"question": "What does Reference Implementations mean?", "answer": "- C# ASP.NETAuthenticationHandlerNostrAuth.cs"}
{"question": "What does Classified Listings mean?", "answer": "draftoptional\n\nThis NIP defineskind:30402: an addressable event to describe classified listings that list any arbitrary product, service, or other thing for sale or offer and includes enough structured metadata to make them useful.\n\nThe category of classifieds includes a very broad range of physical goods, services, work opportunities, rentals, free giveaways, personals, etc. and is distinct from the more strictly structured marketplaces defined inNIP-15that often sell many units of specific products through very specific channels.\n\nThe structure of these events is very similar toNIP-23long-form content events."}
{"question": "What does Draft / Inactive Listings mean?", "answer": "kind:30403has the same structure askind:30402and is used to save draft or inactive classified listings."}
{"question": "What does Author mean?", "answer": "The.pubkeyfield of these events are treated as the party creating the listing."}
{"question": "What does priceexamples mean?", "answer": "- $50 one-time payment[\"price\", \"50\", \"USD\"]\n- €15 per month[\"price\", \"15\", \"EUR\", \"month\"]\n- £50,000 per year[\"price\", \"50000\", \"GBP\", \"year\"]\n\nOther standard tags that might be useful.\n\n- \"g\", a geohash for more precise location"}
{"question": "What does Web Bookmarking mean?", "answer": "draftoptional\n\nThis NIP defineskind:39701(anaddressable event) for a URI as a web bookmark which uses the HTTP (Hypertext transfer protocol) scheme.\nThese web bookmark events areaddressableand deletable perNIP-09."}
{"question": "What does Example event mean?", "answer": "jsonc\n{\n\"kind\": 39701,\n\"id\": \"d7a92714f81d0f712e715556aee69ea6da6bfb287e6baf794a095d301d603ec7\",\n\"pubkey\": \"2729620da105979b22acfdfe9585274a78c282869b493abfa4120d3af2061298\",\n\"created_at\": 1738869705,\n\"tags\": [\n// Required tags\n[\"d\", \"alice.blog/post\"],\n// Optional tags\n[\"published_at\", \"1738863000\"],\n[\"title\", \"Blog insights by Alice\"],\n[\"t\", \"post\"],\n[\"t\", \"insight\"]\n],\n\"content\": \"A marvelous insight by Alice about the nature of blogs and posts.\",\n\"sig\": \"36d34e6448fe0223e9999361c39c492a208bc423d2fcdfc2a3404e04df7c22dc65bbbd62dbe8a4373c62e4d29aac285b5aa4bb9b4b8053bd6207a8b45fbd0c98\"\n}"}
{"question": "What does Blossom media mean?", "answer": "draftoptional\n\nThis NIP specifies how Nostr clients can useBlossomfor handling media.\n\nBlossom is a set of standards (called BUDs) for dealing with servers that store files addressable by their SHA-256 sums. Nostr clients may make use of all the BUDs for allowing users to upload files, manage their own files and so on, but most importantly Nostr clients SHOULD make use ofBUD-03to fetchkind:10063lists of servers for each user:\n\njson\n{\n\"id\": \"e4bee088334cb5d38cff1616e964369c37b6081be997962ab289d6c671975d71\",\n\"pubkey\": \"781208004e09102d7da3b7345e64fd193cd1bc3fce8fdae6008d77f9cabcd036\",\n\"content\": \"\",\n\"kind\": 10063,\n\"created_at\": 1708774162,\n\"tags\": [\n[\"server\", \"https://blossom.self.hosted\"],\n[\"server\", \"https://cdn.blossom.cloud\"]\n],\n\"sig\": \"cc5efa74f59e80622c77cacf4dd62076bcb7581b45e9acff471e7963a1f4d8b3406adab5ee1ac9673487480e57d20e523428e60ffcc7e7a904ac882cfccfc653\"\n}\n\nWhenever a Nostr client finds a URL in an event published by a given user and that URL ends a 64-character hex string (with or without an ending file extension) and that URL is not available anymore, that means that string is likely a representation of a sha256 and that the user may have akind:10063list of Blossom servers published.\n\nGiven that, the client SHOULD look into thekind:10063list for other Blossom servers and lookup for the same 64-character hex string in them, by just using the hex string as a path (optionally with the file extension at the end), producing a URL likehttps://blossom.self.hosted/<hex-string>.png.\n\nWhen downloading such files Nostr clients SHOULD verify that the sha256-hash of its contents matches the 64-character hex string.\n\nMore information can be found atBUD-03."}
{"question": "What does More complex interactions mean?", "answer": "Clients may use other facilities exposed by Blossom servers (for example, for checking if a file exists in a Blossom server, instead of actually downloading it) which are better documented in theBUDs."}
{"question": "What does Code Snippets mean?", "answer": "draftoptional"}
{"question": "What does Event Kind mean?", "answer": "This NIP defineskind:1337as a code snippet event.\n\nThe.contentfield contains the actual code snippet text."}
{"question": "What does Optional Tags mean?", "answer": "- l- Programming language name (lowercase). Examples: \"javascript\", \"python\", \"rust\"\n- name- Name of the code snippet, commonly a filename. Examples: \"hello-world.js\", \"quick-sort.py\"\n- extension- File extension (without the dot). Examples: \"js\", \"py\", \"rs\"\n- description- Brief description of what the code does\n- runtime- Runtime or environment specification (e.g., \"node v18.15.0\", \"python 3.11\")\n- license- License under which the code is shared (e.g., \"MIT\", \"GPL-3.0\", \"Apache-2.0\")\n- dep- Dependency required for the code to run (can be repeated)\n- repo- Reference to a repository where this code originates"}
{"question": "What does Chats mean?", "answer": "draftoptional\n\nA chat message is akind 9event.\n\njson\n{\n\"kind\": 9,\n\"content\": \"GM\",\n\"tags\": []\n}\n\nA reply to akind 9is an additionalkind 9which quotes the parent using aqtag.\n\njson\n{\n\"kind\": 9,\n\"content\": \"nostr:nevent1...\\nyes\",\n\"tags\": [\n[\"q\", <event-id>, <relay-url>, <pubkey>]\n]\n}"}
